

# [Toybox (Module)](https://developer.garmin.com/connect-iq/api-docs/index.html)nModule: Toybox
 Overview
 Modules Under Namespace
 Modules: Toybox.Activity , Toybox.ActivityMonitor , Toybox.ActivityRecording , Toybox.Ant , Toybox.AntPlus , Toybox.Application , Toybox.Attention , Toybox.Authentication , Toybox.Background , Toybox.BluetoothLowEnergy , Toybox.Communications , Toybox.Complications , Toybox.Cryptography , Toybox.FitContributor , Toybox.Graphics , Toybox.Lang , Toybox.Math , Toybox.Media , Toybox.PersistedContent , Toybox.PersistedLocations , Toybox.Position , Toybox.Sensor , Toybox.SensorHistory , Toybox.SensorLogging , Toybox.StringUtil , Toybox.System , Toybox.Test , Toybox.Time , Toybox.Timer , Toybox.UserProfile , Toybox.WatchUi , Toybox.Weather Generated Dec 11, 2024, 8:58:41 AM


# [Activity (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity.html)nModule: Toybox.Activity
 Overview
 The Activity module provides a way to retrieve available info for the current activity. Activity Info is automatically provided by the compute() method in Data Fields. The getActivityInfo() method is available for use within apps or in other cases, such as data field initialization. This module also provides two sets of constants: SWIM_STROKE: Indicates the swimStrokeType() , such as freestyle, backstroke, or butterfly. 
 TIMER_STATE: Indicates the activity recording timerState() , such as stopped, started, paused, etc. 
 
 Since: API Level 1.0.0 Classes Under Namespace
 Classes: Info , ProfileInfo , WorkoutIntervalStep , WorkoutStep , WorkoutStepInfo Constant Summary
 SwimStrokeType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SWIM_STROKE_FREESTYLE 0 API Level 1.2.2 Freestyle stroke 
 SWIM_STROKE_BACKSTROKE 1 API Level 1.2.2 Backstroke 
 SWIM_STROKE_BREASTSTROKE 2 API Level 1.2.2 Breaststroke 
 SWIM_STROKE_BUTTERFLY 3 API Level 1.2.2 Butterfly stroke 
 SWIM_STROKE_DRILL 4 API Level 1.2.2 Drill mode 
 SWIM_STROKE_MIXED 5 API Level 1.2.2 Mixed stroke mode 
 SWIM_STROKE_IM 6 API Level 1.2.2 Mixed interval with equal number of butterfly, backstroke, breaststroke, and freestyle, in that order. 
 TimerState
 Since: API Level 1.0.0 Name Value Since Description See Also 
 TIMER_STATE_OFF 0 API Level 2.1.0 The timer is off. There is not an active recording 
 TIMER_STATE_STOPPED 1 API Level 2.1.0 The timer is stopped. The recording is active, with the timer stopped. 
 TIMER_STATE_PAUSED 2 API Level 2.1.0 The timer is paused. The recording is active with the timer paused. This state occurs when the timer is active, but has been stopped with the Auto-Pause feature. 
 TIMER_STATE_ON 3 API Level 2.1.0 The timer is on. The recording is active and the timer is running. 
 Sport
 Since: API Level 3.2.0 Name Value Since Description See Also 
 SPORT_GENERIC 0 API Level 3.2.0 
 SPORT_RUNNING 1 API Level 3.2.0 
 SPORT_CYCLING 2 API Level 3.2.0 
 SPORT_TRANSITION 3 API Level 3.2.0 
 SPORT_FITNESS_EQUIPMENT 4 API Level 3.2.0 
 SPORT_SWIMMING 5 API Level 3.2.0 
 SPORT_BASKETBALL 6 API Level 3.2.0 
 SPORT_SOCCER 7 API Level 3.2.0 
 SPORT_TENNIS 8 API Level 3.2.0 
 SPORT_AMERICAN_FOOTBALL 9 API Level 3.2.0 
 SPORT_TRAINING 10 API Level 3.2.0 
 SPORT_WALKING 11 API Level 3.2.0 
 SPORT_CROSS_COUNTRY_SKIING 12 API Level 3.2.0 
 SPORT_ALPINE_SKIING 13 API Level 3.2.0 
 SPORT_SNOWBOARDING 14 API Level 3.2.0 
 SPORT_ROWING 15 API Level 3.2.0 
 SPORT_MOUNTAINEERING 16 API Level 3.2.0 
 SPORT_HIKING 17 API Level 3.2.0 
 SPORT_MULTISPORT 18 API Level 3.2.0 
 SPORT_PADDLING 19 API Level 3.2.0 
 SPORT_FLYING 20 API Level 3.2.0 
 SPORT_E_BIKING 21 API Level 3.2.0 
 SPORT_MOTORCYCLING 22 API Level 3.2.0 
 SPORT_BOATING 23 API Level 3.2.0 
 SPORT_DRIVING 24 API Level 3.2.0 
 SPORT_GOLF 25 API Level 3.2.0 
 SPORT_HANG_GLIDING 26 API Level 3.2.0 
 SPORT_HORSEBACK_RIDING 27 API Level 3.2.0 
 SPORT_HUNTING 28 API Level 3.2.0 
 SPORT_FISHING 29 API Level 3.2.0 
 SPORT_INLINE_SKATING 30 API Level 3.2.0 
 SPORT_ROCK_CLIMBING 31 API Level 3.2.0 
 SPORT_SAILING 32 API Level 3.2.0 
 SPORT_ICE_SKATING 33 API Level 3.2.0 
 SPORT_SKY_DIVING 34 API Level 3.2.0 
 SPORT_SNOWSHOEING 35 API Level 3.2.0 
 SPORT_SNOWMOBILING 36 API Level 3.2.0 
 SPORT_STAND_UP_PADDLEBOARDING 37 API Level 3.2.0 
 SPORT_SURFING 38 API Level 3.2.0 
 SPORT_WAKEBOARDING 39 API Level 3.2.0 
 SPORT_WATER_SKIING 40 API Level 3.2.0 
 SPORT_KAYAKING 41 API Level 3.2.0 
 SPORT_RAFTING 42 API Level 3.2.0 
 SPORT_WINDSURFING 43 API Level 3.2.0 
 SPORT_KITESURFING 44 API Level 3.2.0 
 SPORT_TACTICAL 45 API Level 3.2.0 
 SPORT_JUMPMASTER 46 API Level 3.2.0 
 SPORT_BOXING 47 API Level 3.2.0 
 SPORT_FLOOR_CLIMBING 48 API Level 3.2.0 
 SPORT_BASEBALL 49 API Level 3.2.0 
 SPORT_SOFTBALL_FAST_PITCH 50 API Level 3.2.0 
 SPORT_SOFTBALL_SLOW_PITCH 51 API Level 3.2.0 
 SPORT_SHOOTING 56 API Level 3.2.0 
 SPORT_AUTO_RACING 57 API Level 3.2.0 
 SPORT_WINTER_SPORT 58 API Level 4.1.6 
 SPORT_GRINDING 59 API Level 4.1.6 
 SPORT_HEALTH_MONITORING 60 API Level 4.1.6 
 SPORT_MARINE 61 API Level 4.1.6 
 SPORT_HIIT 62 API Level 4.1.6 
 SPORT_VIDEO_GAMING 63 API Level 4.1.6 
 SPORT_RACKET 64 API Level 4.1.6 
 SPORT_WHEELCHAIR_PUSH_WALK 65 API Level 4.1.6 
 SPORT_WHEELCHAIR_PUSH_RUN 66 API Level 4.1.6 
 SPORT_MEDITATION 67 API Level 4.1.6 
 SPORT_PARA_SPORT 68 API Level 4.1.6 
 SPORT_DISC_GOLF 69 API Level 4.1.6 
 SPORT_TEAM_SPORT 70 API Level 4.1.6 
 SPORT_CRICKET 71 API Level 4.1.6 
 SPORT_RUGBY 72 API Level 4.1.6 
 SPORT_HOCKEY 73 API Level 4.1.6 
 SPORT_LACROSSE 74 API Level 4.1.6 
 SPORT_VOLLEYBALL 75 API Level 4.1.6 
 SPORT_WATER_TUBING 76 API Level 4.1.6 
 SPORT_WAKESURFING 77 API Level 4.1.6 
 SPORT_INVALID 255 API Level 3.2.0 
 SubSport
 Since: API Level 3.2.0 Name Value Since Description See Also 
 SUB_SPORT_GENERIC 0 API Level 3.2.0 
 SUB_SPORT_TREADMILL 1 API Level 3.2.0 
 SUB_SPORT_STREET 2 API Level 3.2.0 
 SUB_SPORT_TRAIL 3 API Level 3.2.0 
 SUB_SPORT_TRACK 4 API Level 3.2.0 
 SUB_SPORT_SPIN 5 API Level 3.2.0 
 SUB_SPORT_INDOOR_CYCLING 6 API Level 3.2.0 
 SUB_SPORT_ROAD 7 API Level 3.2.0 
 SUB_SPORT_MOUNTAIN 8 API Level 3.2.0 
 SUB_SPORT_DOWNHILL 9 API Level 3.2.0 
 SUB_SPORT_RECUMBENT 10 API Level 3.2.0 
 SUB_SPORT_CYCLOCROSS 11 API Level 3.2.0 
 SUB_SPORT_HAND_CYCLING 12 API Level 3.2.0 
 SUB_SPORT_TRACK_CYCLING 13 API Level 3.2.0 
 SUB_SPORT_INDOOR_ROWING 14 API Level 3.2.0 
 SUB_SPORT_ELLIPTICAL 15 API Level 3.2.0 
 SUB_SPORT_STAIR_CLIMBING 16 API Level 3.2.0 
 SUB_SPORT_LAP_SWIMMING 17 API Level 3.2.0 
 SUB_SPORT_OPEN_WATER 18 API Level 3.2.0 
 SUB_SPORT_FLEXIBILITY_TRAINING 19 API Level 3.2.0 
 SUB_SPORT_STRENGTH_TRAINING 20 API Level 3.2.0 
 SUB_SPORT_WARM_UP 21 API Level 3.2.0 
 SUB_SPORT_MATCH 22 API Level 3.2.0 
 SUB_SPORT_EXERCISE 23 API Level 3.2.0 
 SUB_SPORT_CHALLENGE 24 API Level 3.2.0 
 SUB_SPORT_INDOOR_SKIING 25 API Level 3.2.0 
 SUB_SPORT_CARDIO_TRAINING 26 API Level 3.2.0 
 SUB_SPORT_INDOOR_WALKING 27 API Level 4.1.6 
 SUB_SPORT_E_BIKE_FITNESS 28 API Level 4.1.6 
 SUB_SPORT_BMX 29 API Level 4.1.6 
 SUB_SPORT_CASUAL_WALKING 30 API Level 4.1.6 
 SUB_SPORT_SPEED_WALKING 31 API Level 4.1.6 
 SUB_SPORT_BIKE_TO_RUN_TRANSITION 32 API Level 4.1.6 
 SUB_SPORT_RUN_TO_BIKE_TRANSITION 33 API Level 4.1.6 
 SUB_SPORT_SWIM_TO_BIKE_TRANSITION 34 API Level 4.1.6 
 SUB_SPORT_ATV 35 API Level 4.1.6 
 SUB_SPORT_MOTOCROSS 36 API Level 4.1.6 
 SUB_SPORT_BACKCOUNTRY 37 API Level 4.1.6 
 SUB_SPORT_RESORT 38 API Level 4.1.6 
 SUB_SPORT_RC_DRONE 39 API Level 4.1.6 
 SUB_SPORT_WINGSUIT 40 API Level 4.1.6 
 SUB_SPORT_WHITEWATER 41 API Level 4.1.6 
 SUB_SPORT_SKATE_SKIING 42 API Level 4.1.6 
 SUB_SPORT_YOGA 43 API Level 4.1.6 
 SUB_SPORT_PILATES 44 API Level 4.1.6 
 SUB_SPORT_INDOOR_RUNNING 45 API Level 4.1.6 
 SUB_SPORT_GRAVEL_CYCLING 46 API Level 4.1.6 
 SUB_SPORT_E_BIKE_MOUNTAIN 47 API Level 4.1.6 
 SUB_SPORT_COMMUTING 48 API Level 4.1.6 
 SUB_SPORT_MIXED_SURFACE 49 API Level 4.1.6 
 SUB_SPORT_NAVIGATE 50 API Level 4.1.6 
 SUB_SPORT_TRACK_ME 51 API Level 4.1.6 
 SUB_SPORT_MAP 52 API Level 4.1.6 
 SUB_SPORT_SINGLE_GAS_DIVING 53 API Level 4.1.6 
 SUB_SPORT_MULTI_GAS_DIVING 54 API Level 4.1.6 
 SUB_SPORT_GAUGE_DIVING 55 API Level 4.1.6 
 SUB_SPORT_APNEA_DIVING 56 API Level 4.1.6 
 SUB_SPORT_APNEA_HUNTING 57 API Level 4.1.6 
 SUB_SPORT_VIRTUAL_ACTIVITY 58 API Level 4.1.6 
 SUB_SPORT_OBSTACLE 59 API Level 4.1.6 
 SUB_SPORT_ASSISTANCE 60 API Level 4.1.6 
 SUB_SPORT_INCIDENT_DETECTED 61 API Level 4.1.6 
 SUB_SPORT_BREATHING 62 API Level 4.1.6 
 SUB_SPORT_CCR_DIVING 63 API Level 4.1.6 
 SUB_SPORT_AREA_CALC 64 API Level 4.1.6 
 SUB_SPORT_SAIL_RACE 65 API Level 4.1.6 
 SUB_SPORT_EXPEDITION 66 API Level 4.1.6 
 SUB_SPORT_ULTRA 67 API Level 4.1.6 
 SUB_SPORT_INDOOR_CLIMBING 68 API Level 4.1.6 
 SUB_SPORT_BOULDERING 69 API Level 4.1.6 
 SUB_SPORT_HIIT 70 API Level 4.1.6 
 SUB_SPORT_INDOOR_GRINDING 71 API Level 4.1.6 
 SUB_SPORT_HUNTING_WITH_DOGS 72 API Level 4.1.6 
 SUB_SPORT_AMRAP 73 API Level 4.1.6 
 SUB_SPORT_EMOM 74 API Level 4.1.6 
 SUB_SPORT_TABATA 75 API Level 4.1.6 
 SUB_SPORT_FALL_DETECTED 76 API Level 4.1.6 
 SUB_SPORT_ESPORT 77 API Level 4.1.6 
 SUB_SPORT_TRIATHLON 78 API Level 4.1.6 
 SUB_SPORT_DUATHLON 79 API Level 4.1.6 
 SUB_SPORT_BRICK 80 API Level 4.1.6 
 SUB_SPORT_SWIM_RUN 81 API Level 4.1.6 
 SUB_SPORT_ADVENTURE_RACE 82 API Level 4.1.6 
 SUB_SPORT_TRUCKER_WORKOUT 83 API Level 4.1.6 
 SUB_SPORT_PICKLEBALL 84 API Level 4.1.6 
 SUB_SPORT_PADEL 85 API Level 4.1.6 
 SUB_SPORT_INDOOR_WHEELCHAIR_WALK 86 API Level 4.1.6 
 SUB_SPORT_INDOOR_WHEELCHAIR_RUN 87 API Level 4.1.6 
 SUB_SPORT_INDOOR_HAND_CYCLING 88 API Level 4.1.6 
 SUB_SPORT_ANCHOR 89 API Level 4.1.6 
 SUB_SPORT_FIELD 90 API Level 4.1.6 
 SUB_SPORT_ICE 91 API Level 4.1.6 
 SUB_SPORT_ULTIMATE 92 API Level 4.1.6 
 SUB_SPORT_PLATFORM 93 API Level 4.1.6 
 SUB_SPORT_SQUASH 94 API Level 4.1.6 
 SUB_SPORT_BADMINTON 95 API Level 4.1.6 
 SUB_SPORT_RACQUETBALL 96 API Level 4.1.6 
 SUB_SPORT_TABLE_TENNIS 97 API Level 4.1.6 
 SUB_SPORT_INVALID 255 API Level 3.2.0 
 WorkoutIntensity
 Since: API Level 3.2.0 Name Value Since Description See Also 
 WORKOUT_INTENSITY_ACTIVE 0 API Level 3.2.0 
 WORKOUT_INTENSITY_REST 1 API Level 3.2.0 
 WORKOUT_INTENSITY_WARMUP 2 API Level 3.2.0 
 WORKOUT_INTENSITY_COOLDOWN 3 API Level 3.2.0 
 WORKOUT_INTENSITY_RECOVERY 4 API Level 3.2.0 
 WORKOUT_INTENSITY_INTERVAL 5 API Level 3.2.0 
 WORKOUT_INTENSITY_INVALID 255 API Level 3.2.0 
 WorkoutStepDurationType
 Since: API Level 3.2.0 Name Value Since Description See Also 
 WORKOUT_STEP_DURATION_TIME 0 API Level 3.2.0 
 WORKOUT_STEP_DURATION_DISTANCE 1 API Level 3.2.0 
 WORKOUT_STEP_DURATION_HR_LESS_THAN 2 API Level 3.2.0 
 WORKOUT_STEP_DURATION_HR_GREATER_THAN 3 API Level 3.2.0 
 WORKOUT_STEP_DURATION_CALORIES 4 API Level 3.2.0 
 WORKOUT_STEP_DURATION_OPEN 5 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_STEPS_COMPLETE 6 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_TIME 7 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_DISTANCE 8 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_CALORIES 9 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_HR_LESS_THAN 10 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_HR_GREATER_THAN 11 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_POWER_LESS_THAN 12 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_POWER_GREATER_THAN 13 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_LESS_THAN 14 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_GREATER_THAN 15 API Level 3.2.0 
 WORKOUT_STEP_DURATION_TRAINING_PEAKS_TRAINING_STRESS_SCORE 16 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_POWER_LAST_LAP_LESS_THAN 17 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_MAX_POWER_LAST_LAP_LESS_THAN 18 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_3S_LESS_THAN 19 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_10S_LESS_THAN 20 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_30S_LESS_THAN 21 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_3S_GREATER_THAN 22 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_10S_GREATER_THAN 23 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_30S_GREATER_THAN 24 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_LAP_LESS_THAN 25 API Level 3.2.0 
 WORKOUT_STEP_DURATION_POWER_LAP_GREATER_THAN 26 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPEAT_UNTIL_TRAINING_PEAKS_TRAINING_STRESS_SCORE 27 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPETITION_TIME 28 API Level 3.2.0 
 WORKOUT_STEP_DURATION_REPS 29 API Level 3.2.0 
 WORKOUT_STEP_DURATION_INVALID 255 API Level 3.2.0 
 WorkoutStepTargetType
 Since: API Level 3.2.0 Name Value Since Description See Also 
 WORKOUT_STEP_TARGET_SPEED 0 API Level 3.2.0 
 WORKOUT_STEP_TARGET_HEART_RATE 1 API Level 3.2.0 
 WORKOUT_STEP_TARGET_OPEN 2 API Level 3.2.0 
 WORKOUT_STEP_TARGET_CADENCE 3 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER 4 API Level 3.2.0 
 WORKOUT_STEP_TARGET_GRADE 5 API Level 3.2.0 
 WORKOUT_STEP_TARGET_RESISTANCE 6 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER_3S 7 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER_10S 8 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER_30S 9 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER_LAP 10 API Level 3.2.0 
 WORKOUT_STEP_TARGET_SWIM_STROKE 11 API Level 3.2.0 
 WORKOUT_STEP_TARGET_SPEED_LAP 12 API Level 3.2.0 
 WORKOUT_STEP_TARGET_HEART_RATE_LAP 13 API Level 3.2.0 
 WORKOUT_STEP_TARGET_INHALE_DURATION 14 API Level 3.2.0 
 WORKOUT_STEP_TARGET_INHALE_HOLD_DURATION 15 API Level 3.2.0 
 WORKOUT_STEP_TARGET_EXHALE_DURATION 16 API Level 3.2.0 
 WORKOUT_STEP_TARGET_EXHALE_HOLD_DURATION 17 API Level 3.2.0 
 WORKOUT_STEP_TARGET_POWER_CURVE 18 API Level 3.2.0 
 WORKOUT_STEP_TARGET_INVALID 255 API Level 3.2.0 
 Instance Method Summary collapse 
 getActivityInfo () as Activity.Info or Null Get the current Activity Info. 
 getCurrentWorkoutStep () as Activity.WorkoutStepInfo or Null Get information about the current workout step. 
 getNextWorkoutStep () as Activity.WorkoutStepInfo or Null Get information about the next workout step. 
 getProfileInfo () as Activity.ProfileInfo Get information about the current profile. 
 
 Instance Method Details
 getActivityInfo() as Activity.Info or Null 
 Get the current Activity Info. Returns: Activity.Info — The current Activity Info or null if there is no current activity. 
 
 Since: API Level 1.0.0 getCurrentWorkoutStep() as Activity.WorkoutStepInfo or Null 
 Get information about the current workout step. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Activity.WorkoutStepInfo — if a workout is active, null otherwise 
 
 Since: API Level 3.2.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called from a data field app 
 
 getNextWorkoutStep() as Activity.WorkoutStepInfo or Null 
 Get information about the next workout step. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Activity.WorkoutStepInfo — if a workout is active and there is a next step, null otherwise 
 
 Since: API Level 3.2.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called from a data field app 
 
 getProfileInfo() as Activity.ProfileInfo 
 Get information about the current profile. Returns: Activity.ProfileInfo — the current profile 
 
 Since: API Level 3.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [Info (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity/Info.html)nClass: Toybox.Activity.Info
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Activity.Info 
 
 show all Overview
 The Info class contains information about the current activity. This information can be retrieved with the getActivityInfo() method. Fields in this class may return null so should be checked for null values prior to use. Since: API Level 1.0.0 Instance Member Summary collapse 
 altitude as Lang.Float or Null The altitude above mean sea level in meters (m). 
 ambientPressure as Lang.Float or Null The ambient pressure in Pascals (Pa). 
 averageCadence as Lang.Number or Null The average cadence during the current activity in revolutions per minute (rpm). 
 averageDistance as Lang.Float or Null The average swim stroke distance from the previous interval in meters (m). 
 averageHeartRate as Lang.Number or Null The average heart rate during the current activity in beats per minute (bpm). 
 averagePower as Lang.Number or Null The average power during the current activity in Watts (W). 
 averageSpeed as Lang.Float or Null The average speed during the current activity in meters per second (mps). 
 bearing as Lang.Float or Null The current bearing in radians. 
 bearingFromStart as Lang.Float or Null The bearing from the starting location to the destination in radians. 
 calories as Lang.Number or Null The calories burned throughout the current activity in kilocalories (kcal). 
 currentCadence as Lang.Number or Null The current cadence in revolutions per minute (rpm). 
 currentHeading as Lang.Float or Null The true north referenced heading in radians. 
 currentHeartRate as Lang.Number or Null The current heart rate in beats per minute (bpm). 
 currentLocation as Position.Location or Null The current location. 
 currentLocationAccuracy as Position.Quality or Null The current GPS accuracy. 
 currentOxygenSaturation as Lang.Number or Null The current oxygen saturation in percent (%). 
 currentPower as Lang.Number or Null The current power in Watts (W). 
 currentSpeed as Lang.Float or Null The current speed in meters per second (mps). 
 distanceToDestination as Lang.Float or Null The distance to the destination in meters (m). 
 distanceToNextPoint as Lang.Float or Null The distance to the next point in meters (m). 
 elapsedDistance as Lang.Float or Null The elapsed distance of the current activity in meters (m). 
 elapsedTime as Lang.Number or Null Elapsed time of the current activity in milliseconds (ms). 
 elevationAtDestination as Lang.Number or Null The elevation at the destination in meters (m). 
 elevationAtNextPoint as Lang.Float or Null The elevation at the next point in meters (m). 
 energyExpenditure as Lang.Float or Null The current energy expenditure in kilocalories per minute (kcals/min). 
 frontDerailleurIndex as Lang.Number or Null The current front bicycle derailleur index. 
 frontDerailleurMax as Lang.Number or Null The front bicycle derailleur maximum index. 
 frontDerailleurSize as Lang.Number or Null The front bicycle derailleur gear size in number of teeth. 
 maxCadence as Lang.Number or Null The maximum cadence recorded during the current activity in revolutions per minute (rpm). 
 maxHeartRate as Lang.Number or Null The maximum heart rate recorded during the current activity in beats per minute (bpm). 
 maxPower as Lang.Number or Null The maximum power recorded during the current activity in Watts (W). 
 maxSpeed as Lang.Float or Null The maximum speed recorded during the current activity in meters per second (mps). 
 meanSeaLevelPressure as Lang.Float or Null The mean sea level barometric pressure in Pascals (Pa). 
 nameOfDestination as Lang.String or Null The name of the destination. 
 nameOfNextPoint as Lang.String or Null The name of the next point. 
 offCourseDistance as Lang.Float or Null The distance to the nearest point on the current course in meters (m). 
 rawAmbientPressure as Lang.Float or Null The raw ambient pressure in Pascals (Pa). 
 rearDerailleurIndex as Lang.Number or Null The current rear bicycle derailleur index. 
 rearDerailleurMax as Lang.Number or Null The rear bicycle derailleur maximum index. 
 rearDerailleurSize as Lang.Number or Null The rear bicycle derailleur gear size in number of teeth. 
 startLocation as Position.Location or Null The starting location of the current activity. 
 startTime as Time.Moment or Null The starting time of the current activity. 
 swimStrokeType as Activity.SwimStrokeType or Null The swim stroke type from the previous length. 
 swimSwolf as Lang.Number or Null The SWOLF score from the previous length. 
 timerState as Activity.TimerState or Null The recording timer state. 
 timerTime as Lang.Number or Null The current Timer value in milliseconds (ms). 
 totalAscent as Lang.Number or Null The total ascent during the current activity in meters (m). 
 totalDescent as Lang.Number or Null The total descent during the current activity in meters (m). 
 track as Lang.Float or Null The current track in radians. 
 trainingEffect as Lang.Float or Null The Training Effect score of the current activity. 
 
 Instance Attribute Details
 var altitude as Lang.Float or Null 
 The altitude above mean sea level in meters (m). Elevation is derived from the most accurate source: Barometer or GPS Since: API Level 1.0.0 Returns: Lang.Float 
 
 var ambientPressure as Lang.Float or Null 
 The ambient pressure in Pascals (Pa). This returns ambient (local) barometric pressure as measured by the pressure sensor. The data is smoothed by a two-stage filter to reduce noise and instantaneous variation. Since: API Level 2.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var averageCadence as Lang.Number or Null 
 The average cadence during the current activity in revolutions per minute (rpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var averageDistance as Lang.Float or Null 
 The average swim stroke distance from the previous interval in meters (m). Since: API Level 1.2.2 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var averageHeartRate as Lang.Number or Null 
 The average heart rate during the current activity in beats per minute (bpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var averagePower as Lang.Number or Null 
 The average power during the current activity in Watts (W). Since: API Level 1.0.0 Supported Devices: [ View devices ] D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 3
 Venu® 3S
 
 Returns: Lang.Number 
 
 var averageSpeed as Lang.Float or Null 
 The average speed during the current activity in meters per second (mps). The average is computed as the elapsed 3-D accumulated distance divided by the elapsed time. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var bearing as Lang.Float or Null 
 The current bearing in radians. Bearing is the direction from your current location or position to the destination of navigation, dependent on your current location. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var bearingFromStart as Lang.Float or Null 
 The bearing from the starting location to the destination in radians. Bearing from start is the direction of desired track from the start of navigation to the destination in radians. This is only dependent on your location when a course is set, and it is not dependent on where you may have moved to during an activity Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var calories as Lang.Number or Null 
 The calories burned throughout the current activity in kilocalories (kcal). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var currentCadence as Lang.Number or Null 
 The current cadence in revolutions per minute (rpm). Since: API Level 1.0.0 Returns: Lang.Number — (rpm) 
 
 var currentHeading as Lang.Float or Null 
 The true north referenced heading in radians. This provides compass orientation if it is supported by the device. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var currentHeartRate as Lang.Number or Null 
 The current heart rate in beats per minute (bpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var currentLocation as Position.Location or Null 
 The current location. This member will always provide a null value unless the Positioning Permission is enabled. Since: API Level 1.0.0 Returns: Position.Location 
 
 var currentLocationAccuracy as Position.Quality or Null 
 The current GPS accuracy. GPS accuracy values range from 0-4. A value of 0 indicates an accuracy value is not available, while a value of 4 indicates a good GPS fix. Since: API Level 1.0.0 See Also: Positional Accuracy 
 
 Returns: Position.Quality — A Position.QUALITY_* value 
 
 var currentOxygenSaturation as Lang.Number or Null 
 The current oxygen saturation in percent (%) Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var currentPower as Lang.Number or Null 
 The current power in Watts (W). Since: API Level 1.0.0 Supported Devices: [ View devices ] D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 3
 Venu® 3S
 
 Returns: Lang.Number 
 
 var currentSpeed as Lang.Float or Null 
 The current speed in meters per second (mps). Since: API Level 1.0.0 See Also: Positional Speed 
 
 Returns: Lang.Float 
 
 var distanceToDestination as Lang.Float or Null 
 The distance to the destination in meters (m). Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var distanceToNextPoint as Lang.Float or Null 
 The distance to the next point in meters (m). Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var elapsedDistance as Lang.Float or Null 
 The elapsed distance of the current activity in meters (m). Since: API Level 1.0.0 Returns: Lang.Float 
 
 var elapsedTime as Lang.Number or Null 
 Elapsed time of the current activity in milliseconds (ms). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var elevationAtDestination as Lang.Number or Null 
 The elevation at the destination in meters (m). Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var elevationAtNextPoint as Lang.Float or Null 
 The elevation at the next point in meters (m). Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var energyExpenditure as Lang.Float or Null 
 The current energy expenditure in kilocalories per minute (kcals/min). Energy expenditure is a metric developed by FirstBeat that provides an estimation of the calorie burn rate calculated from heart rate data. Since: API Level 1.2.0 See Also: Energy Expenditure 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Float 
 
 var frontDerailleurIndex as Lang.Number or Null 
 The current front bicycle derailleur index. Index values range from from 1 to the frontDerailleurMax. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var frontDerailleurMax as Lang.Number or Null 
 The front bicycle derailleur maximum index. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var frontDerailleurSize as Lang.Number or Null 
 The front bicycle derailleur gear size in number of teeth. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var maxCadence as Lang.Number or Null 
 The maximum cadence recorded during the current activity in revolutions per minute (rpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var maxHeartRate as Lang.Number or Null 
 The maximum heart rate recorded during the current activity in beats per minute (bpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var maxPower as Lang.Number or Null 
 The maximum power recorded during the current activity in Watts (W). Since: API Level 1.0.0 Supported Devices: [ View devices ] D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 3
 Venu® 3S
 
 Returns: Lang.Number 
 
 var maxSpeed as Lang.Float or Null 
 The maximum speed recorded during the current activity in meters per second (mps). Since: API Level 1.0.0 Returns: Lang.Float — (mps) 
 
 var meanSeaLevelPressure as Lang.Float or Null 
 The mean sea level barometric pressure in Pascals (Pa). This returns barometric pressure calibrated to sea level. Since pressure varies dues to several factors, a GPS-based altitude must first be obtained, then the ambient (local) pressure is measured by the pressure sensor before conversion to a calibrated barometric pressure value. Since: API Level 2.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var nameOfDestination as Lang.String or Null 
 The name of the destination. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.String 
 
 var nameOfNextPoint as Lang.String or Null 
 The name of the next point. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.String 
 
 var offCourseDistance as Lang.Float or Null 
 The distance to the nearest point on the current course in meters (m). Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var rawAmbientPressure as Lang.Float or Null 
 The raw ambient pressure in Pascals (Pa). This returns ambient (local) barometric pressure as measured by the internal pressure sensor. The data is the temperature compensated information read directly from the internal sensor. Since: API Level 2.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var rearDerailleurIndex as Lang.Number or Null 
 The current rear bicycle derailleur index. Index values range from from 1 to the rearDerailleurMax. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var rearDerailleurMax as Lang.Number or Null 
 The rear bicycle derailleur maximum index. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var rearDerailleurSize as Lang.Number or Null 
 The rear bicycle derailleur gear size in number of teeth. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Returns: Lang.Number 
 
 var startLocation as Position.Location or Null 
 The starting location of the current activity. This member will always provide a null value unless the Positioning Permission is enabled. Since: API Level 1.0.0 Returns: Position.Location 
 
 var startTime as Time.Moment or Null 
 The starting time of the current activity. Since: API Level 1.0.0 Returns: Time.Moment 
 
 var swimStrokeType as Activity.SwimStrokeType or Null 
 The swim stroke type from the previous length. Swim stroke type values range from 0-6. Each Number value represents a different swim stroke type (e.g. freestyle, backstroke, etc.). Since: API Level 1.2.2 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Activity.SwimStrokeType — A SWIM_STROKE_* value 
 
 var swimSwolf as Lang.Number or Null 
 The SWOLF score from the previous length. SWOLF is an abbreviation for Swim-Golf, a measure of swimming efficiency. The score is obtained by adding the strokes per length to the total time of the length. For example, if it takes ten strokes and thirty seconds to swim a pool length, the SWOLF score is 40. Just like golf, a lower SWOLF score is better. Since: API Level 1.2.2 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var timerState as Activity.TimerState or Null 
 The recording timer state. The timer state ranges from 0-3. A value of 0 indicates that the timer is off and there is no active recording, while a value of 3 indicates timer is on and there is an active recording. Since: API Level 2.1.0 Returns: Activity.TimerState — A TIMER_STATE_* value 
 
 var timerTime as Lang.Number or Null 
 The current Timer value in milliseconds (ms). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var totalAscent as Lang.Number or Null 
 The total ascent during the current activity in meters (m). Since: API Level 1.0.0 Returns: Lang.Float 
 
 var totalDescent as Lang.Number or Null 
 The total descent during the current activity in meters (m). Since: API Level 1.0.0 Returns: Lang.Float 
 
 var track as Lang.Float or Null 
 The current track in radians. Track is the direction of travel in radians based on GPS movement. If supported by the device, this provides compass orientation when stopped. Since: API Level 2.1.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: Lang.Float 
 
 var trainingEffect as Lang.Float or Null 
 The Training Effect score of the current activity. Training Effect is a score developed by FirstBeat, which indicates an activity's level of effect on aerobic fitness. Scores range from 1.0 (easy) to 5.0 (overreaching). Since: API Level 1.2.0 See Also: Training Effect 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Float 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ProfileInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity/ProfileInfo.html)nClass: Toybox.Activity.ProfileInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Activity.ProfileInfo 
 
 show all Overview
 The ProfileInfo class contains information about the active profile. This information can be retrieved with the getProfileInfo() method. Fields in this class may return null so should be checked for null values prior to use. Since: API Level 3.2.0 Instance Member Summary collapse 
 name as Lang.String or Null The profile name. 
 sport as Activity.Sport or Null A SPORT_* enum value. 
 subSport as Activity.SubSport or Null A SUB_SPORT_* enum value. 
 uniqueIdentifier as Lang.ByteArray or Null An unique identifer of the profile. 
 
 Instance Attribute Details
 var name as Lang.String or Null 
 The profile name Since: API Level 3.2.0 Returns: Lang.String — the profile name 
 
 var sport as Activity.Sport or Null 
 A SPORT_* enum value Since: API Level 3.2.0 Returns: Activity.Sport — A SPORT_* enum value 
 
 var subSport as Activity.SubSport or Null 
 A SUB_SPORT_* enum value. Can be null . Since: API Level 3.2.0 Returns: Activity.SubSport — A SUB_SPORT_* enum value 
 
 var uniqueIdentifier as Lang.ByteArray or Null 
 An unique identifer of the profile Since: API Level 3.2.0 Returns: Lang.ByteArray — the profile identifier 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [WorkoutIntervalStep (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity/WorkoutIntervalStep.html)nClass: Toybox.Activity.WorkoutIntervalStep
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Activity.WorkoutIntervalStep 
 
 show all Overview
 The WorkoutIntervalStep class contains information about the current workout interval step. Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 activeStep as Activity.WorkoutStep The step data for the active portion of the interval. 
 repetitionNumber as Lang.Number The repetition number in the interval. 
 restStep as Activity.WorkoutStep The step data for the rest portion of the interval. 
 
 Instance Attribute Details
 var activeStep as Activity.WorkoutStep 
 The step data for the active portion of the interval Since: API Level 3.2.0 Returns: Activity.WorkoutStep 
 
 var repetitionNumber as Lang.Number 
 The repetition number in the interval Since: API Level 3.2.0 Returns: Lang.Number 
 
 var restStep as Activity.WorkoutStep 
 The step data for the rest portion of the interval Since: API Level 3.2.0 Returns: Activity.WorkoutStep 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [WorkoutStep (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity/WorkoutStep.html)nClass: Toybox.Activity.WorkoutStep
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Activity.WorkoutStep 
 
 show all Overview
 The WorkoutStep class contains information about the current workout step. Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 durationType as Activity.WorkoutStepDurationType The duration of the workout step. 
 durationValue as Lang.Number How long the step should last. 
 targetType as Activity.WorkoutStepTargetType The target of the workout step. 
 targetValueHigh as Lang.Number The high value for the target range. 
 targetValueLow as Lang.Number The low value for the target range. 
 
 Instance Attribute Details
 var durationType as Activity.WorkoutStepDurationType 
 The duration of the workout step Since: API Level 3.2.0 Returns: Activity.WorkoutStepDurationType — a WORKOUT_STEP_DURATION_* value 
 
 var durationValue as Lang.Number 
 How long the step should last Since: API Level 3.2.0 Returns: Lang.Number — A value whose meaning is dependent on the value of durationType 
 
 var targetType as Activity.WorkoutStepTargetType 
 The target of the workout step Since: API Level 3.2.0 Returns: Activity.WorkoutStepTargetType — A WORKOUT_STEP_TARGET_* value 
 
 var targetValueHigh as Lang.Number 
 The high value for the target range. Since: API Level 3.2.0 Returns: Lang.Number — A value whose meaning is dependent on the value of targetType 
 
 var targetValueLow as Lang.Number 
 The low value for the target range. Since: API Level 3.2.0 Returns: Lang.Number — A value whose meaning is dependent on the value of targetType 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [WorkoutStepInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Activity/WorkoutStepInfo.html)nClass: Toybox.Activity.WorkoutStepInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Activity.WorkoutStepInfo 
 
 show all Overview
 The WorkoutStepInfo class contains information about the current workout. This information can be retrieved with the getCurrentWorkoutStep() or getNextWorkoutStep() methods. Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 intensity as Activity.WorkoutIntensity The intensity of the step. 
 name as Lang.String The name of the current step. 
 notes as Lang.String The notes for the current step. 
 sport as Activity.Sport The sport for the workout step. 
 step as Activity.WorkoutStep or Activity.WorkoutIntervalStep Duration and target information about the step. 
 subSport as Activity.SubSport or Null The subsport for the workout step. 
 
 Instance Attribute Details
 var intensity as Activity.WorkoutIntensity 
 The intensity of the step Since: API Level 3.2.0 Returns: Activity.WorkoutIntensity — a WORKOUT_INTENSITY_* value 
 
 var name as Lang.String 
 The name of the current step Since: API Level 3.2.0 Returns: Lang.String 
 
 var notes as Lang.String 
 The notes for the current step Since: API Level 3.2.0 Returns: Lang.String 
 
 var sport as Activity.Sport 
 The sport for the workout step Since: API Level 3.2.0 Returns: Activity.Sport — A SPORT_* value 
 
 var step as Activity.WorkoutStep or Activity.WorkoutIntervalStep 
 Duration and target information about the step Since: API Level 3.2.0 Returns: Activity.WorkoutStep , Activity.WorkoutIntervalStep 
 
 var subSport as Activity.SubSport or Null 
 The subsport for the workout step. Currently only valid for breathing and swim workouts Since: API Level 3.2.0 Returns: Activity.SubSport — A SUB_SPORT_* value, or null 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ActivityMonitor (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor.html)nModule: Toybox.ActivityMonitor
 Overview
 The ActivityMonitor module contains the interface for Activity Monitoring data. Example: Shows the use of HeartRateIterator, HeartRateSample, and Info using Toybox.ActivityMonitor; using Toybox.System; // get a HeartRateIterator object; oldest sample first var hrIterator = ActivityMonitor.getHeartRateHistory(null, false); var previous = hrIterator.next(); // get the previous HR var lastSampleTime = null; // get the last while (true) { var sample = hrIterator.next(); if (null != sample) { // null check if (sample.heartRate != ActivityMonitor.INVALID_HR_SAMPLE // check for invalid samples &amp;&amp; previous.heartRate != ActivityMonitor.INVALID_HR_SAMPLE) { lastSampleTime = sample.when; System.println("Previous: " + previous.heartRate); // print the previous sample System.println("Sample: " + sample.heartRate); // print the current sample } } } // get ActivityMonitor info var info = ActivityMonitor.getInfo(); var steps = info.steps; var calories = info.calories; System.println("You have taken: " + steps + " steps and burned: " + calories + " calories!"); Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Classes Under Namespace
 Classes: ActiveMinutes , HeartRateIterator , HeartRateSample , History , Info Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type INVALID_HR_SAMPLE 255 API Level 1.2.2 Indicates that the given heart rate sample is invalid. 
 Type MOVE_BAR_LEVEL_MAX 5 API Level 1.0.0 The maximum level of the move bar 
 Type MOVE_BAR_LEVEL_MIN 0 API Level 1.0.0 The minimum level of the move bar 
 Instance Method Summary collapse 
 getHeartRateHistory (period as Time.Duration or Lang.Number or Null , newestFirst as Lang.Boolean ) as ActivityMonitor.HeartRateIterator Get the heart rate history for the given period, up to the last power cycle. 
 getHistory () as Lang.Array &lt; ActivityMonitor.History &gt; Get an Array of ActivityMonitor.History objects. 
 getInfo () as ActivityMonitor.Info Get the current ActivityMonitor.Info . 
 
 Instance Method Details
 getHeartRateHistory(period as Time.Duration or Lang.Number or Null , newestFirst as Lang.Boolean ) as ActivityMonitor.HeartRateIterator 
 Get the heart rate history for the given period, up to the last power cycle. This function always returns the most recent heart rate samples. The time between each HeartRateSample in the iterator may be device dependent. Parameters: period — ( Time.Duration , Lang.Number ) — The period of time from which to retrieve heart rate samples If period is null , the entire available history is retrieved 
 If period is a Duration , then the history for the given Duration is retrieved 
 If period is a Number , then the last Number entries are retrieved 
 
 
 newestFirst — ( Lang.Boolean ) — The order in which to retrieve heart rate samples true to get the samples newest first 
 false to get the samples oldest first 
 
 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: ActivityMonitor.HeartRateIterator — An iterator for the heart rate history for the given period 
 
 Since: API Level 1.2.1 getHistory() as Lang.Array &lt; ActivityMonitor.History &gt; 
 Get an Array of ActivityMonitor.History objects Returns: Lang.Array — An Array of ActivityMonitor.History objects. The Array will be a maximum of 7 objects 
 The objects will be inserted most recent first 
 
 
 
 Since: API Level 1.0.0 getInfo() as ActivityMonitor.Info 
 Get the current ActivityMonitor.Info Returns: ActivityMonitor.Info — An Info object with the current information. 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [ActiveMinutes (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor/ActiveMinutes.html)nClass: Toybox.ActivityMonitor.ActiveMinutes
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityMonitor.ActiveMinutes 
 
 show all Overview
 A class representing the active minutes recorded by the device. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Member Summary collapse 
 moderate as Lang.Number The total number of moderate activity minutes recorded by the device. 
 total as Lang.Number The total number of active minutes recorded by the device. 
 vigorous as Lang.Number The total number of vigorous activity minutes recorded by the device. 
 
 Instance Attribute Details
 var moderate as Lang.Number 
 The total number of moderate activity minutes recorded by the device. Since: API Level 2.1.0 Returns: Lang.Number 
 
 var total as Lang.Number 
 The total number of active minutes recorded by the device. This value is equal to the total number of moderate minutes plus twice the total number of vigorous minutes. Since: API Level 2.1.0 Returns: Lang.Number 
 
 var vigorous as Lang.Number 
 The total number of vigorous activity minutes recorded by the device. Since: API Level 2.1.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [HeartRateIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor/HeartRateIterator.html)nClass: Toybox.ActivityMonitor.HeartRateIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityMonitor.HeartRateIterator 
 
 show all Overview
 A class containing heart rate data for a given period of time. Since: API Level 1.2.2 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Method Summary collapse 
 getMax () as Lang.Number or Null Get the maximum heart rate contained in this iterator. 
 getMin () as Lang.Number or Null Get the minimum heart rate contained in this iterator. 
 next () as ActivityMonitor.HeartRateSample or Null Get the next entry in the iterator. 
 
 Instance Method Details
 getMax() as Lang.Number or Null 
 Get the maximum heart rate contained in this iterator. Returns: Lang.Number — The maximum heart rate in beats per minute (bpm) 
 
 Since: API Level 1.2.2 getMin() as Lang.Number or Null 
 Get the minimum heart rate contained in this iterator. Returns: Lang.Number — The minimum heart rate (bpm) 
 
 Since: API Level 1.2.2 next() as ActivityMonitor.HeartRateSample or Null 
 Get the next entry in the iterator. This must be called to get the initial data from the iterator. Returns: ActivityMonitor.HeartRateSample — The next HeartRateSample , or null if there are no more samples 
 
 Since: API Level 1.2.2 Generated Dec 11, 2024, 8:58:42 AM


# [HeartRateSample (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor/HeartRateSample.html)nClass: Toybox.ActivityMonitor.HeartRateSample
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityMonitor.HeartRateSample 
 
 show all Overview
 A class containing heart rate data at a given time. Since: API Level 1.2.2 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Member Summary collapse 
 heartRate as Lang.Number or Null Heart rate in beats per minute (bpm). 
 when as Time.Moment or Null The time of the heart rate sample. 
 
 Instance Attribute Details
 var heartRate as Lang.Number or Null 
 Heart rate in beats per minute (bpm). Before using heart rate information, check for INVALID_HR_SAMPLE to be sure data is available. Since: API Level 1.2.2 Returns: Lang.Number 
 
 var when as Time.Moment or Null 
 The time of the heart rate sample Since: API Level 1.2.2 Returns: Time.Moment 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [History (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor/History.html)nClass: Toybox.ActivityMonitor.History
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityMonitor.History 
 
 show all Overview
 A class containing information about the user's activity history. The fields in this class may return null . It is recommended to null check a value before using it. If the value is not available, an error indicating that the symbol was not found will be thrown. Since: API Level 1.0.0 Instance Member Summary collapse 
 activeMinutes as ActivityMonitor.ActiveMinutes or Null Number of active minutes. 
 calories as Lang.Number or Null The calories for the day in kilocalories (kCal). 
 distance as Lang.Number or Null The distance for the day in centimeters (cm). 
 floorsClimbed as Lang.Number or Null The number of floors climbed for the day. 
 floorsClimbedGoal as Lang.Number or Null Floors climbed goal for the day. 
 floorsDescended as Lang.Number or Null The number of floors descended for the day. 
 pushDistance as Lang.Number or Null The wheelchair push distance for the day in centimeters (cm). 
 pushGoal as Lang.Number or Null The wheelchair push goal for the day in number of pushes. 
 pushes as Lang.Number or Null Wheelchair push count for the day in number of pushes. 
 startOfDay as Time.Moment or Null A Moment object representing the start time of the day recorded by this History object. 
 stepGoal as Lang.Number or Null The step goal for the day in number of steps. 
 steps as Lang.Number or Null The step count for the day in number of steps. 
 
 Instance Attribute Details
 var activeMinutes as ActivityMonitor.ActiveMinutes or Null 
 Number of active minutes. Contains the moderate, vigorous, and total accumulated minutes for the day. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: ActivityMonitor.ActiveMinutes 
 
 var calories as Lang.Number or Null 
 The calories for the day in kilocalories (kCal). Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Number 
 
 var distance as Lang.Number or Null 
 The distance for the day in centimeters (cm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var floorsClimbed as Lang.Number or Null 
 The number of floors climbed for the day. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var floorsClimbedGoal as Lang.Number or Null 
 Floors climbed goal for the day. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var floorsDescended as Lang.Number or Null 
 The number of floors descended for the day. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var pushDistance as Lang.Number or Null 
 The wheelchair push distance for the day in centimeters (cm). Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var pushGoal as Lang.Number or Null 
 The wheelchair push goal for the day in number of pushes. Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var pushes as Lang.Number or Null 
 Wheelchair push count for the day in number of pushes. Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var startOfDay as Time.Moment or Null 
 A Moment object representing the start time of the day recorded by this History object Since: API Level 1.0.0 Returns: Time.Moment 
 
 var stepGoal as Lang.Number or Null 
 The step goal for the day in number of steps. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var steps as Lang.Number or Null 
 The step count for the day in number of steps. Since: API Level 1.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Info (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityMonitor/Info.html)nClass: Toybox.ActivityMonitor.Info
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityMonitor.Info 
 
 show all Overview
 The ActivityMonitor.Info contains information about the user's current activity status. The fields in this class may return null . It is recommended to null check a value before using it. If the value is not available, an error indicating that the symbol was not found will be thrown. Note: Unless otherwise indicated, Info data is calculated for the current day starting at midnight as provided by the device. Since: API Level 1.0.0 Instance Member Summary collapse 
 activeMinutesDay as ActivityMonitor.ActiveMinutes or Null The number of active minutes for the current day. 
 activeMinutesWeek as ActivityMonitor.ActiveMinutes or Null The number of active minutes for the current week. 
 activeMinutesWeekGoal as Lang.Number or Null The value of the active minutes goal for the current week. 
 calories as Lang.Number or Null The calories burned so far for the current day in kilocalories (kCal). 
 distance as Lang.Number or Null The distance since midnight for the current day in centimeters (cm). 
 floorsClimbed as Lang.Number or Null The number of floors climbed for the current day. 
 floorsClimbedGoal as Lang.Number or Null The current floor climb goal. 
 floorsDescended as Lang.Number or Null The number of floors descended for the current day. 
 isSleepMode as Lang.Boolean or Null deprecated Determine whether the device is in sleep mode. 
 metersClimbed as Lang.Float or Null The vertical distance of floors climbed in meters (m). 
 metersDescended as Lang.Float or Null The vertical distance of floors descended in meters (m). 
 moveBarLevel as Lang.Number or Null The current level of the move bar between MOVE_BAR_LEVEL_MIN and MOVE_BAR_LEVEL_MAX . 
 pushDistance as Lang.Number or Null The wheelchair push distance for the day in centimeters (cm). 
 pushGoal as Lang.Number or Null The wheelchair push goal for the day in number of pushes. 
 pushes as Lang.Number or Null Wheelchair push count for the day in number of pushes. 
 respirationRate as Lang.Number or Null Current respiration rate for the user, in breaths per minute Value may be null . 
 stepGoal as Lang.Number or Null The step goal for the current day in number of steps. 
 steps as Lang.Number or Null The step count since midnight for the current day in number of steps. 
 stressScore as Lang.Number or Null The current stress score The stress score calculated using a rolling average of the last 30 seconds of stress level readings. 
 timeToRecovery as Lang.Number or Null Time to recovery from the last activity, in hours Value may be null . 
 
 Instance Attribute Details
 var activeMinutesDay as ActivityMonitor.ActiveMinutes or Null 
 The number of active minutes for the current day. Contains the moderate, vigorous, and total accumulated minutes for the day. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: ActivityMonitor.ActiveMinutes 
 
 var activeMinutesWeek as ActivityMonitor.ActiveMinutes or Null 
 The number of active minutes for the current week. Contains the moderate, vigorous, and total accumulated minutes for the week. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: ActivityMonitor.ActiveMinutes 
 
 var activeMinutesWeekGoal as Lang.Number or Null 
 The value of the active minutes goal for the current week. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var calories as Lang.Number or Null 
 The calories burned so far for the current day in kilocalories (kCal). Value may be null . Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Number 
 
 var distance as Lang.Number or Null 
 The distance since midnight for the current day in centimeters (cm). Value may be null . Since: API Level 1.0.0 Returns: Lang.Number 
 
 var floorsClimbed as Lang.Number or Null 
 The number of floors climbed for the current day. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var floorsClimbedGoal as Lang.Number or Null 
 The current floor climb goal. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var floorsDescended as Lang.Number or Null 
 The number of floors descended for the current day. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Number 
 
 var isSleepMode as Lang.Boolean or Null 
 This has been deprecated This value may be removed after System 4. Determine whether the device is in sleep mode. Value may be null . Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Boolean 
 
 var metersClimbed as Lang.Float or Null 
 The vertical distance of floors climbed in meters (m). This only counts the vertical distance associated with the floors climbed metric recorded by the device. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var metersDescended as Lang.Float or Null 
 The vertical distance of floors descended in meters (m). This only counts the vertical distance associated with the floors descended metric recorded by the device. Value may be null . Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: Lang.Float 
 
 var moveBarLevel as Lang.Number or Null 
 The current level of the move bar between MOVE_BAR_LEVEL_MIN and MOVE_BAR_LEVEL_MAX . Value may be null . Since: API Level 1.0.0 Returns: Lang.Number 
 
 var pushDistance as Lang.Number or Null 
 The wheelchair push distance for the day in centimeters (cm). Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var pushGoal as Lang.Number or Null 
 The wheelchair push goal for the day in number of pushes. Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var pushes as Lang.Number or Null 
 Wheelchair push count for the day in number of pushes. Since: API Level 4.2.3 Supported Devices: [ View devices ] Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var respirationRate as Lang.Number or Null 
 Current respiration rate for the user, in breaths per minute Value may be null . Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var stepGoal as Lang.Number or Null 
 The step goal for the current day in number of steps. Value may be null . Since: API Level 1.0.0 Returns: Lang.Number 
 
 var steps as Lang.Number or Null 
 The step count since midnight for the current day in number of steps. Value may be null . Since: API Level 1.0.0 Returns: Lang.Number 
 
 var stressScore as Lang.Number or Null 
 The current stress score The stress score calculated using a rolling average of the last 30 seconds of stress level readings. Value may be null . Since: API Level 5.0.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: Lang.Number — Values correspond to the following scale 0–25: Resting state 
 26–50: Low stress 
 51–75: Medium stress 
 76–100: High stress 
 
 
 
 var timeToRecovery as Lang.Number or Null 
 Time to recovery from the last activity, in hours Value may be null . Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 
 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ActivityRecording (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityRecording.html)nModule: Toybox.ActivityRecording
 Overview
 The Activity Recording module will allow Apps to access the FIT file recording capabilities of the device. Apps can use this module to allow the user to start and stop recordings, create laps, and save recorded data. SPORT_* and SUB_SPORT_* constants are provided as enums. The SPORT_* defines the type of activity, but is not guaranteed to change device behavior. This may cause different algorithms to be applied to the sensor data. For example, a device that does not natively support SPORT_MULTISPORT recording will not gain SPORT_MULTISPORT transition features. However, the FIT file can be defined as SPORT_MULTISPORT and MULTI_SPORT algorithms may be applied to the sensor data. SUB_SPORT_* allows for clarification of sport when recording. See Also:
 Toybox.FitContributor 
 
 Example: using Toybox.ActivityRecording; using Toybox.WatchUi var session = null; // set up session variable // use the select Start/Stop or touch for recording function onSelect() { if (Toybox has :ActivityRecording) { // check device for activity recording if ((session == null) || (session.isRecording() == false)) { session = ActivityRecording.createSession({ // set up recording session :name=&gt;"Generic", // set session name :sport=&gt;Activity.SPORT_GENERIC, // set sport type :subSport=&gt;Activity.SUB_SPORT_GENERIC // set sub sport type }); session.start(); // call start session } else if ((session != null) &amp;&amp; session.isRecording()) { session.stop(); // stop the session session.save(); // save the session session = null; // set session control variable to null } } return true; // return true for onSelect function } Since: API Level 1.0.0 App Types: Watch App 
 Background 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Requires Permission: Fit 
 
 Classes Under Namespace
 Classes: Session Constant Summary
 Sport1
 This has been deprecated This enum may be removed after System 8. Since: API Level 1.0.0 See Also: Activity::SPORT_* 
 Name Value Since Description See Also 
 SPORT_GENERIC 0 API Level 1.0.0 Sport used for sports not on the list 
 SPORT_RUNNING 1 API Level 1.0.0 Sport used for running 
 SPORT_CYCLING 2 API Level 1.0.0 Sport used for multi-sport transitions 
 SPORT_TRANSITION 3 API Level 1.0.0 
 SPORT_FITNESS_EQUIPMENT 4 API Level 1.0.0 Sport used for ANT enabled exercise equipment 
 SPORT_SWIMMING 5 API Level 1.0.0 Sport used for swimming 
 SPORT_BASKETBALL 6 API Level 1.0.0 Sport used for basketball 
 SPORT_SOCCER 7 API Level 1.0.0 Sport used for soccer 
 SPORT_TENNIS 8 API Level 1.0.0 Sport used for Tennis 
 SPORT_AMERICAN_FOOTBALL 9 API Level 1.0.0 Sport used for American football 
 SPORT_TRAINING 10 API Level 1.0.0 Sport used for activities such as strength training, cardio, etc 
 SPORT_WALKING 11 API Level 1.0.0 Sport used for walking 
 SPORT_CROSS_COUNTRY_SKIING 12 API Level 1.0.0 Sport used for cross-country skiing 
 SPORT_ALPINE_SKIING 13 API Level 1.0.0 Sport used for alpine skiing 
 SPORT_SNOWBOARDING 14 API Level 1.0.0 Sport used for snowboarding 
 SPORT_ROWING 15 API Level 1.0.0 Sport used for rowing 
 SPORT_MOUNTAINEERING 16 API Level 1.0.0 Sport used for mountaineering 
 SPORT_HIKING 17 API Level 1.0.0 Sport used for hiking 
 SPORT_MULTISPORT 18 API Level 1.0.0 Sport used for multi-sport events 
 SPORT_PADDLING 19 API Level 1.0.0 Sport used for paddling 
 Sport2
 This has been deprecated This enum may be removed after System 8. Since: API Level 1.0.0 See Also: Activity::SPORT_* 
 Name Value Since Description See Also 
 SPORT_FLYING 20 API Level 3.0.10 Sport used for flying 
 SPORT_E_BIKING 21 API Level 3.0.10 Sport used for riding an e-bike 
 SPORT_MOTORCYCLING 22 API Level 3.0.10 Sport used for motorcycling 
 SPORT_BOATING 23 API Level 3.0.10 Sport used for boating 
 SPORT_DRIVING 24 API Level 3.0.10 Sport used for driving 
 SPORT_GOLF 25 API Level 3.0.10 Sport used for golfing 
 SPORT_HANG_GLIDING 26 API Level 3.0.10 Sport used for hang gliding 
 SPORT_HORSEBACK_RIDING 27 API Level 3.0.10 Sport used for horseback riding 
 SPORT_HUNTING 28 API Level 3.0.10 Sport used for hunting 
 SPORT_FISHING 29 API Level 3.0.10 Sport used for fishing 
 SPORT_INLINE_SKATING 30 API Level 3.0.10 Sport used for inline skating 
 SPORT_ROCK_CLIMBING 31 API Level 3.0.10 Sport used for rock climbing 
 SPORT_SAILING 32 API Level 3.0.10 Sport used for sailing 
 SPORT_ICE_SKATING 33 API Level 3.0.10 Sport used for ice skating 
 SPORT_SKY_DIVING 34 API Level 3.0.10 Sport used for sky diving 
 SPORT_SNOWSHOEING 35 API Level 3.0.10 Sport used for showshoeing 
 SPORT_SNOWMOBILING 36 API Level 3.0.10 Sport used for snowmobiling 
 SPORT_STAND_UP_PADDLEBOARDING 37 API Level 3.0.10 Sport used for paddle boarding 
 SPORT_SURFING 38 API Level 3.0.10 Sport used for surfing 
 SPORT_WAKEBOARDING 39 API Level 3.0.10 Sport used for wakeboarding 
 SPORT_WATER_SKIING 40 API Level 3.0.10 Sport used for water skiing 
 SPORT_KAYAKING 41 API Level 3.0.10 Sport used for kayaking 
 SPORT_RAFTING 42 API Level 3.0.10 Sport used for rafting 
 SPORT_WINDSURFING 43 API Level 3.0.10 Sport used for windsurfing 
 SPORT_KITESURFING 44 API Level 3.0.10 Sport used for kite surfing 
 SPORT_TACTICAL 45 API Level 3.0.10 Sport used for tactical 
 SPORT_JUMPMASTER 46 API Level 3.0.10 Sport used for jumpmaster 
 SPORT_BOXING 47 API Level 3.0.10 Sport used for boxing 
 SPORT_FLOOR_CLIMBING 48 API Level 3.0.10 Sport used for climbing 
 SPORT_BASEBALL 49 API Level 3.0.10 Sport used for baseball 
 SPORT_SOFTBALL_FAST_PITCH 50 API Level 3.0.10 Sport used for fast pitch softball 
 SPORT_SOFTBALL_SLOW_PITCH 51 API Level 3.0.10 Sport used for slow pitch softball 
 SPORT_SHOOTING 56 API Level 3.0.10 Sport used for shooting 
 SPORT_AUTO_RACING 57 API Level 3.0.10 Sport used for auto racing 
 SubSport
 This has been deprecated This enum may be removed after System 8. Since: API Level 1.0.0 See Also: Activity::SUB_SPORT_* 
 Name Value Since Description See Also 
 SUB_SPORT_GENERIC 0 API Level 1.0.0 Sub-sport used if no other sub-sport is applicable 
 SUB_SPORT_TREADMILL 1 API Level 1.0.0 Sub-sport for Running and Fitness Equipment 
 SUB_SPORT_STREET 2 API Level 1.0.0 Sub-sport for Running 
 SUB_SPORT_TRAIL 3 API Level 1.0.0 Sub-sport for Running 
 SUB_SPORT_TRACK 4 API Level 1.0.0 Sub-sport for Running 
 SUB_SPORT_SPIN 5 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_INDOOR_CYCLING 6 API Level 1.0.0 Sub-sport for Cycling and Fitness Equipment 
 SUB_SPORT_ROAD 7 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_MOUNTAIN 8 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_DOWNHILL 9 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_RECUMBENT 10 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_CYCLOCROSS 11 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_HAND_CYCLING 12 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_TRACK_CYCLING 13 API Level 1.0.0 Sub-sport for Cycling 
 SUB_SPORT_INDOOR_ROWING 14 API Level 1.0.0 Sub-sport for Rowing and Fitness Equipment 
 SUB_SPORT_ELLIPTICAL 15 API Level 1.0.0 Sub-sport for Fitness Equipment 
 SUB_SPORT_STAIR_CLIMBING 16 API Level 1.0.0 Sub-sport for Fitness Equipment 
 SUB_SPORT_LAP_SWIMMING 17 API Level 1.0.0 Sub-sport for Swimming 
 SUB_SPORT_OPEN_WATER 18 API Level 1.0.0 Sub-sport for Swimming 
 SUB_SPORT_FLEXIBILITY_TRAINING 19 API Level 1.0.0 Sub-sport for Training 
 SUB_SPORT_STRENGTH_TRAINING 20 API Level 1.0.0 Sub-sport for Training 
 SUB_SPORT_WARM_UP 21 API Level 1.0.0 Sub-sport for Activity Warm-up 
 SUB_SPORT_MATCH 22 API Level 1.0.0 Sub-sport for Sports with Matches (e.g. Tennis) 
 SUB_SPORT_EXERCISE 23 API Level 1.0.0 Sub-sport for Exercise 
 SUB_SPORT_CHALLENGE 24 API Level 1.0.0 Sub-sport for a Sport Challenge 
 SUB_SPORT_INDOOR_SKIING 25 API Level 1.0.0 Sub-sport for Fitness Equipment 
 SUB_SPORT_CARDIO_TRAINING 26 API Level 1.0.0 Sub-sport for Training 
 TimerEventType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 TIMER_EVENT_START 0 API Level 3.0.10 Timer start event 
 TIMER_EVENT_STOP 1 API Level 3.0.10 Timer stop event 
 TIMER_EVENT_PAUSE 2 API Level 3.0.10 Timer pause event 
 TIMER_EVENT_RESUME 3 API Level 3.0.10 Timer resume event 
 TIMER_EVENT_LAP 4 API Level 3.0.10 Timer lap event 
 TIMER_EVENT_RESET 5 API Level 3.0.10 Timer reset 
 TIMER_EVENT_WORKOUT_STEP_COMPLETE 6 API Level 3.0.10 Workout step complete 
 TIMER_EVENT_NEXT_MULTISPORT_LEG 7 API Level 3.0.10 Multisport leg started 
 Typedef Summary collapse 
 Sport as ActivityRecording.Sport1 or ActivityRecording.Sport2 
 
 Instance Method Summary collapse 
 createSession (options as { :sport as ActivityRecording.Sport or Activity.Sport , :subSport as ActivityRecording.SubSport or Activity.SubSport , :name as Lang.String , :poolLength as Lang.Float , :sensorLogger as SensorLogging.SensorLogger , :autoLap as { :type as Lang.Symbol , :entry as [ Position.Location , Position.Location ], :exit as [ Position.Location , Position.Location ] } }) as ActivityRecording.Session Create a Session object with options determined by the caller. 
 
 Typedef Details
 Sport as ActivityRecording.Sport1 or ActivityRecording.Sport2 
 Since: API Level 1.0.0 Instance Method Details
 createSession(options as { :sport as ActivityRecording.Sport or Activity.Sport , :subSport as ActivityRecording.SubSport or Activity.SubSport , :name as Lang.String , :poolLength as Lang.Float , :sensorLogger as SensorLogging.SensorLogger , :autoLap as { :type as Lang.Symbol , :entry as [ Position.Location , Position.Location ], :exit as [ Position.Location , Position.Location ] } }) as ActivityRecording.Session 
 Create a Session object with options determined by the caller. Only one Session object is allowed to exist at a time. If there is an existing object that has not been closed using the save() or discard() methods, this method will return that object instead of creating a new one. On some products running the 1.x virtual machine, creating a Session object requires a large memory allocation. To free this memory, the Session must first be successfully saved or discarded, and then app references to the Session object should be set to null . Parameters: options — ( Lang.Dictionary ) — A Dictionary containing session creation options. :sport — ( ActivityRecording.Sport , Activity.Sport ) — The primary sport being recorded (SPORT_GENERIC by default). 
 :subSport — ( ActivityRecording.SubSport , Activity.SubSport ) — The sport subcategory being recorded (SUB_SPORT_GENERIC by default). 
 :name — ( Lang.String ) — Required. This is the name that will be associated with the sport being recorded. The suggested maximum length of the name is 15 characters (some devices support longer names). 
 :poolLength — ( Lang.Float ) — This is the length of the pool in meters for this activity. If this session object is configured with :sport=&gt;SPORT_SWIMMING and :subSport=&gt;SUB_SPORT_LAP_SWIMMING , this option is required to configure the system in this mode. If it is not provided, activity data may have undefined behavior. For all other sport modes, this option is ignored. 
 :autoLap — ( Lang.Dictionary ) — A dictionary containing auto-lap detection options. If present, this dictionary must have a :type key; If the value of :type is :lines , the :entry and :exit keys are required. The values associated with :entry and :exit describe the endpoints of the auto lap entry and exit line segments, each being defined as an Array of two Location objects. (added in 3.0.10) 
 :sensorLogger — ( SensorLogging.SensorLogger ) — The SensorLogger to use to record this session. 
 
 
 
 Example: Create a Session with auto lap detection using entry/exit lines using Toybox.ActivityRecording; function createSession() { var session = ActivityRecording.createSession({ // set up recording session :name=&gt;"Race", // set session name :sport=&gt;Activity.SPORT_GENERIC, // set sport type :subSport=&gt;Activity.SUB_SPORT_GENERIC, // set sub sport type :autoLap=&gt;{ // auto lap configuration :type=&gt;:lines, // auto lap using entry/exit lines :exit=&gt;[loc1, loc2], // set exit of auto lap staging box (typically the finish line) :entry=&gt;[loc3, loc4], // set entrance of auto lap staging box (typically before the finish line) :autoStart=&gt;true // auto start using the entry/exit lines } }); return session; } Returns: ActivityRecording.Session — A new Session object, or the existing Session object if a Session is active and has not been saved or discarded. 
 
 Since: API Level 1.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if required options are missing or provided options are invalid in :autoLap options dictionary 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Session (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/ActivityRecording/Session.html)nClass: Toybox.ActivityRecording.Session
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.ActivityRecording.Session 
 
 show all Overview
 Session objects control the FIT recording state machine. Example: Format for setting up a Session object using Toybox.ActivityRecording; var session = ActivityRecording.createSession({ // set up recording session :name=&gt;"Generic", // set session name :sport=&gt;Activity.SPORT_GENERIC, // set sport type :subSport=&gt;Activity.SUB_SPORT_GENERIC // set sub sport type }); Since: API Level 1.0.0 Instance Method Summary collapse 
 addLap () as Lang.Boolean Add a lap to the current recording. 
 createField (name as Lang.String , fieldId as Lang.Number , type as FitContributor.DataType , options as { :count as Lang.Number , :mesgType as Lang.Number , :units as Lang.String , :nativeNum as Lang.Number }) as FitContributor.Field Create a new Field . 
 discard () as Lang.Boolean Complete the Session by discarding the recorded data. 
 isRecording () as Lang.Boolean Check if recording is active for this Session. 
 save () as Lang.Boolean Complete the session by storing the FIT file on the file system. 
 setTimerEventListener (listener as Lang.Method (eventType as ActivityRecording.TimerEventType , eventData as Lang.Dictionary ) as Void ) as Void Set the listener for Session timer events The listener method is called whenever a new timer event occurs. 
 start () as Lang.Boolean Begin recording a FIT file on the system. 
 stop () as Lang.Boolean Stop recording a FIT file on the system. 
 
 Instance Method Details
 addLap() as Lang.Boolean 
 Add a lap to the current recording. Returns: Lang.Boolean — true if a lap was successfully created, otherwise false 
 
 Since: API Level 1.0.0 createField(name as Lang.String , fieldId as Lang.Number , type as FitContributor.DataType , options as { :count as Lang.Number , :mesgType as Lang.Number , :units as Lang.String , :nativeNum as Lang.Number }) as FitContributor.Field 
 Create a new Field . Field objects allow developers to store information in FIT developer fields. This information can be displayed in Garmin Connect as a per-second graph, as lap information, or as workout summary information. Parameters: name — ( Lang.String ) — The name of the Field as a String The maximum length may vary between products 
 At least 64 bytes are available 
 
 
 fieldId — ( Lang.Number ) — The unique Field Identifier for the Field 
 type — ( FitContributor.DataType ) — The type definition for the Field from the DATA_TYPE_* enumerator in the FitContributor module 
 options — ( Lang.Dictionary ) — Optional parameters that can be specified for Field creation :count — ( Lang.Number ) — The number of elements to add to the Field if it is an Array This is also the maximum combined size of strings plus null terminators if the type is DATA_TYPE_STRING (Default 1) 
 Apps are limited to 256 total bytes per message 
 Data fields are limited to 32 bytes per message 
 Messages larger than the limit will result in a "New Field out of memory for FIT data" error. 
 
 
 :mesgType — ( Lang.Number ) — The message type that this Field should be added to Defaults to MESG_TYPE_RECORD if not provided 
 If mesgType == MESG_TYPE_RECORD , DATA_TYPE_STRING cannot be used as the Field type. 
 
 
 :units — ( Lang.String ) — The display units as a String This should use the current device language 
 The maximum length may vary between products 
 At least 16 bytes are available 
 
 
 :nativeNum — ( Lang.Number ) — If this Field can be treated equivalently to a Field that is included in the FIT SDK use this to indicate the Field Number that is specified by the FIT Profile. 
 
 
 
 Returns: FitContributor.Field — The resulting Field object 
 
 See Also: The Message type descriptions can be found in Profile.xlsx included in the FIT SDK 
 FitContributor.Field 
 Core Topics - Activity Recording 
 
 Since: API Level 1.3.0 discard() as Lang.Boolean 
 Complete the Session by discarding the recorded data. Returns: Lang.Boolean — true if the Session was successfully discarded, otherwise false 
 
 Since: API Level 1.0.0 isRecording() as Lang.Boolean 
 Check if recording is active for this Session. Returns: Lang.Boolean — true if recording is active, otherwise false 
 
 Since: API Level 1.0.0 save() as Lang.Boolean 
 Complete the session by storing the FIT file on the file system. Returns: Lang.Boolean — true if the session was successfully saved, otherwise false 
 
 Since: API Level 1.0.0 setTimerEventListener(listener as Lang.Method (eventType as ActivityRecording.TimerEventType , eventData as Lang.Dictionary ) as Void ) as Void 
 Set the listener for Session timer events The listener method is called whenever a new timer event occurs. The keys in the Dictionary passed to the listener callback depend on the the value of the eventType parameter. Parameters: listener — ( Lang.Method ) — A reference to a callback which must accept two arguments. eventType: A TIMER_EVENT_* enum that describes the event that occurred. 
 eventData: A Dictionary containing data relevant to the timer event or null . If eventType is TIMER_EVENT_LAP, the following are provided if available: 
 :elapsedDistance Float (meters) 
 :averageSpeed Float (meters/second) 
 :maxSpeed Float (meters/second) 
 :startTime Moment (Moment) 
 :elapsedTime Number (milliseconds) 
 :timerTime Number (milliseconds) 
 
 
 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.0.10 start() as Lang.Boolean 
 Begin recording a FIT file on the system. Returns: Lang.Boolean — true if recording was successfully started, otherwise false 
 
 Since: API Level 1.0.0 stop() as Lang.Boolean 
 Stop recording a FIT file on the system. Returns: Lang.Boolean — true if recording was successfully stopped, otherwise false 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Ant (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant.html)nModule: Toybox.Ant
 Overview
 This module provide the interface for the ANT wireless protocol. The ANT wireless protocol is a low level communications protocol that provides very efficient transfer of data by directly controlling the radio on the device. The ANT module provides a list of constants to be used with different Class objects and Methods provided within the module. These include: MSG_ID_* Constants - Message IDs 
 MSG_CODE_* Constants - Message Codes for the response event 
 NETWORK_* Constants - Network Types 
 CHANNEL_TYPE_* Constants - Channel Types 
 BURST_ERROR_* Constants - Burst Error types 
 
 ANT resources and documentation can be found at the links below. See Also:
 Core Topics - ANT and ANT Plus 
 ANT Basics 
 ANT Downloads &amp; Resources 
 
 Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Data Field 
 Widget 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Requires Permission: Ant 
 
 Classes Under Namespace
 Classes: BurstListener , BurstPayload , BurstPayloadIterator , ChannelAssignment , CryptoConfig , DeviceConfig , EncryptionInvalidSettingsException , GenericChannel , Message , UnableToAcquireChannelException , UnableToAcquireEncryptedChannelException Constant Summary
 MessageId
 Since: API Level 1.0.0 Name Value Since Description See Also 
 MSG_ID_RF_EVENT 0x01 API Level 1.0.0 
 MSG_ID_UNASSIGN_CHANNEL 0x41 API Level 1.0.0 
 MSG_ID_ASSIGN_CHANNEL 0x42 API Level 1.0.0 
 MSG_ID_CHANNEL_ID 0x51 API Level 1.0.0 
 MSG_ID_CHANNEL_PERIOD 0x43 API Level 1.0.0 
 MSG_ID_SEARCH_TIMEOUT 0x44 API Level 1.0.0 
 MSG_ID_CHANNEL_RF_FREQUENCY 0x45 API Level 1.0.0 
 MSG_ID_NETWORK_KEY 0x46 API Level 1.0.0 
 MSG_ID_TRANSMIT_POWER 0x47 API Level 1.0.0 
 MSG_ID_CHANNEL_TRANSMIT_POWER 0x60 API Level 1.0.0 
 MSG_ID_LOW_PRIORITY_SEARCH_TIMEOUT 0x63 API Level 1.0.0 
 MSG_ID_LIB_CONFIG 0x6E API Level 1.0.0 
 MSG_ID_PROXIMITY_SEARCH 0x71 API Level 1.0.0 
 MSG_ID_RESET_SYSTEM 0x4A API Level 1.0.0 
 MSG_ID_OPEN_CHANNEL 0x4B API Level 1.0.0 
 MSG_ID_CLOSE_CHANNEL 0x4C API Level 1.0.0 
 MSG_ID_BROADCAST_DATA 0x4E API Level 1.0.0 
 MSG_ID_ACKNOWLEDGED_DATA 0x4F API Level 1.0.0 
 MSG_ID_CHANNEL_RESPONSE_EVENT 0x40 API Level 1.0.0 
 MessageCode
 Since: API Level 1.0.0 Name Value Since Description See Also 
 MSG_CODE_RESPONSE_NO_ERROR 0x00 API Level 1.0.0 
 MSG_CODE_EVENT_RX_SEARCH_TIMEOUT 0x01 API Level 1.0.0 
 MSG_CODE_EVENT_RX_FAIL 0x02 API Level 1.0.0 
 MSG_CODE_EVENT_TX 0x03 API Level 1.0.0 
 MSG_CODE_EVENT_TRANSFER_RX_FAILED 0x04 API Level 1.0.0 
 MSG_CODE_EVENT_TRANSFER_TX_COMPLETED 0x05 API Level 1.0.0 
 MSG_CODE_EVENT_TRANSFER_TX_FAILED 0x06 API Level 1.0.0 
 MSG_CODE_EVENT_CHANNEL_CLOSED 0x07 API Level 1.0.0 
 MSG_CODE_EVENT_RX_FAIL_GO_TO_SEARCH 0x08 API Level 1.0.0 
 MSG_CODE_CHANNEL_IN_WRONG_STATE 0x15 API Level 1.0.0 
 MSG_CODE_CHANNEL_ID_NOT_SET 0x18 API Level 1.0.0 
 MSG_CODE_TRANSFER_IN_PROGRESS 0x1F API Level 1.0.0 
 MSG_CODE_INVALID_MESSAGE 0x28 API Level 1.0.0 
 MSG_CODE_EVENT_QUE_OVERFLOW 0x35 API Level 1.0.0 
 MSG_CODE_EVENT_CRYPTO_NEGOTIATION_SUCCESS 0x38 API Level 2.3.0 
 MSG_CODE_EVENT_CRYPTO_NEGOTIATION_FAIL 0x39 API Level 2.3.0 
 NetworkType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 NETWORK_PUBLIC 0 API Level 1.0.0 
 NETWORK_PLUS 1 API Level 1.0.0 
 NETWORK_PRIVATE 2 API Level 1.2.0 
 ChannelType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 CHANNEL_TYPE_TX_NOT_RX 0x10 API Level 1.0.0 Bidirectional Transmit (Master) 
 CHANNEL_TYPE_RX_NOT_TX 0x00 API Level 1.0.0 Bidirectional Receive (Slave) 
 CHANNEL_TYPE_RX_ONLY 0x40 API Level 1.2.0 Receive Only (Slave) 
 CHANNEL_TYPE_SHARED_BIDIRECTIONAL_RECEIVE 0x20 API Level 3.1.0 Shared Bidirectional Receive (Slave) 
 CHANNEL_TYPE_SHARED_BIDIRECTIONAL_TRANSMIT 0x30 API Level 3.1.0 Shared Bidirectional Transmit (Master) 
 BurstError
 Error codes passed to the failure functions in the BurstListener Since: API Level 1.0.0 Name Value Since Description See Also 
 BURST_ERROR_OUT_OF_MEMORY 0 API Level 2.2.0 There was not enough memory available to send/receive a burst message 
 BURST_ERROR_SEQUENCE_NUMBER_FAIL 1 API Level 2.2.0 A burst packet was received out of order and the entire message was dropped 
 BURST_ERROR_RF_FAIL 2 API Level 2.2.0 A burst failed over the air 
 BURST_ERROR_TRANSFER_IN_PROGRESS 3 API Level 2.2.0 Burst was blocked by another burst from the native system code 
 Generated Dec 11, 2024, 8:58:42 AM


# [BurstListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/BurstListener.html)nClass: Toybox.Ant.BurstListener
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.BurstListener 
 
 show all Overview
 A class that provides a set of callback methods to handle the different burst transmission scenarios in the Ant SDK. Example: Shows extending BurstListener class using Toybox.Ant; // An extension of BurstListener to handle burst events class MyBurstListener extends Ant.BurstListener { // Callback when a burst transmission completes successfully function onTransmitComplete() as Void { System.println("onTransmitComplete"); } // Callback when a burst transmission fails over the air. // Takes an errorCode parameter which is the type of burst // failure that occurred. function onTransmitFail(errorCode as BurstError) as Void { System.println("onTransmitFail-" + errorCode); } // Callback when a burst reception fails over the air. // Takes an errorCode parameter which is the type of burst // failure that occurred. function onReceiveFail(errorCode as BurstError) as Void { System.println("onReceiveFail-" + errorCode); } // Callback when a burst reception completes successfully. // Takes a burstPayload parameter which is the burst data // received across the channel. function onReceiveComplete(burstPayload as BurstPayload) as Void { System.println("onReceiveComplete"); } } Since: API Level 2.2.0 Instance Method Summary collapse 
 onReceiveComplete (burstPayload as Ant.BurstPayload ) as Void Callback when a burst reception completes successfully. 
 onReceiveFail (errorCode as Ant.BurstError ) as Void Callback when a burst reception fails over the air. 
 onTransmitComplete () as Void Callback when a burst transmission completes successfully. 
 onTransmitFail (errorCode as Ant.BurstError ) as Void Callback when a burst transmission fails over the air. 
 
 Instance Method Details
 onReceiveComplete(burstPayload as Ant.BurstPayload ) as Void 
 Callback when a burst reception completes successfully Parameters: burstPayload — ( Ant.BurstPayload ) — The BurstPayload received 
 
 See Also: Toybox.Ant.BurstPayload 
 
 Since: API Level 2.2.0 onReceiveFail(errorCode as Ant.BurstError ) as Void 
 Callback when a burst reception fails over the air Parameters: errorCode — ( Ant.BurstError ) — The type of burst failure that occurred as a BURST_ERROR_* constant 
 
 Since: API Level 2.2.0 onTransmitComplete() as Void 
 Callback when a burst transmission completes successfully Since: API Level 2.2.0 onTransmitFail(errorCode as Ant.BurstError ) as Void 
 Callback when a burst transmission fails over the air Parameters: errorCode — ( Ant.BurstError ) — The type of burst failure that occurred as a BURST_ERROR_* constant 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BurstPayload (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/BurstPayload.html)nClass: Toybox.Ant.BurstPayload
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.BurstPayload 
 
 show all Overview
 A class containing Burst payload data. The payload data is provided in the form of Ant.Message objects. The default max size of a BurstPayload is 8192 bytes, or 1024 Message objects. However, this can vary by device. Example: using Toybox.Ant; var burst = Ant.BurstPayload(); // Initialize the payload burst.add(message.getPayload()); // Add a message payload to payload burst.getSize(); // The number of messages Since: API Level 2.2.0 Instance Method Summary collapse 
 add (message as Lang.Array &lt; Lang.Number &gt; or Lang.ByteArray ) as Void Add bytes to the end of the burst data. 
 getSize () as Lang.Number Return the number of bursts contained in the payload. 
 initialize () Constructor. 
 
 Instance Method Details
 add(message as Lang.Array &lt; Lang.Number &gt; or Lang.ByteArray ) as Void 
 Add bytes to the end of the burst data. Note: ByteArray is supported with ConnectIQ 4.2.0 and later. Parameters: message — ( Lang.Array , Lang.ByteArray ) — An Array of integers representing the bytes of the data payload 
 
 Since: API Level 2.2.0 getSize() as Lang.Number 
 Return the number of bursts contained in the payload. Returns: Lang.Number — The number of Messages 
 
 Since: API Level 2.2.0 initialize() 
 Constructor Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BurstPayloadIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/BurstPayloadIterator.html)nClass: Toybox.Ant.BurstPayloadIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.BurstPayloadIterator 
 
 show all Overview
 An iterator to use with a BurstPayload . The BurstPayloadIterator is used to iterate over the BurstPayload and and access each data packet. Example: using Toybox.Ant; // Iterates over a burst payload to print each packet. // Takes a valid BurstPayload Object as a parameter which // contains the burst data to display. function printPayload(burstPayload) { var iterator = new Ant.BurstPayloadIterator(burstPayload); var payload = iterator.next(); while (null != payload) { System.println("payload " + payload); payload = iterator.next(); } } Since: API Level 2.2.0 Instance Method Summary collapse 
 initialize (newBurstPayload as Ant.BurstPayload ) Constructor. 
 next () as Lang.Array &lt; Lang.Number &gt; or Null Return the next message in the BurstPayload object. 
 
 Instance Method Details
 initialize(newBurstPayload as Ant.BurstPayload ) 
 Constructor Parameters: newBurstPayload — ( Ant.BurstPayload ) 
 
 Since: API Level 2.2.0 next() as Lang.Array &lt; Lang.Number &gt; or Null 
 Return the next message in the BurstPayload object. Returns: Lang.Array — The Array of integers representing the bytes of the BurstPayload , or null if one does not exist. 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [ChannelAssignment (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/ChannelAssignment.html)nClass: Toybox.Ant.ChannelAssignment
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.ChannelAssignment 
 
 show all Overview
 A class to control the assignment of an ANT wireless channel. Since: API Level 1.0.0 Instance Member Summary collapse 
 channelType as Ant.ChannelType Defines the type of channel. 
 network as Ant.NetworkType Defines the type of network the channel should operate under. 
 
 Instance Method Summary collapse 
 initialize (c as Ant.ChannelType , n as Ant.NetworkType ) Constructor By default disables background scanning. 
 isBackgroundScanEnabled () as Lang.Boolean See if background scanning is enabled for the channel assignment. 
 setBackgroundScan (isBackgroundScanEnabled as Lang.Boolean ) as Lang.Boolean Set background scan to be enabled or disabled. 
 
 Instance Attribute Details
 var channelType as Ant.ChannelType 
 Defines the type of channel. The channel can be defined to primarily send data (master) or receive data(slave). The channel type is set via the CHANNEL_TYPE_* constant passed to the Ant.ChannelAssignment.initialize() function for the channelType parameter. Since: API Level 1.0.0 var network as Ant.NetworkType 
 Defines the type of network the channel should operate under. The network is set via the NETWORK_* constant passed to the Ant.ChannelAssignment.initialize() function for the network parameter. Since: API Level 1.0.0 Instance Method Details
 initialize(c as Ant.ChannelType , n as Ant.NetworkType ) 
 Constructor By default disables background scanning. Parameters: c — ( Ant.ChannelType ) — The channel type specifier. Must use one of the following constants: CHANNEL_TYPE_TX_NOT_RX - Bidirectional Transmit (Master) 
 Master Channels are not allowed on the ANT+ Network 
 
 CHANNEL_TYPE_RX_NOT_TX - Bidirectional Receive (Slave) 
 CHANNEL_TYPE_RX_ONLY - Receive Only (Slave) 
 
 
 n — ( Ant.NetworkType ) — The network type specifier. Must use one of the following constants: NETWORK_PUBLIC - ANT public network 
 NETWORK_PLUS - ANT+ network 
 NETWORK_PRIVATE - ANT private network 
 A network key must be provided for an Private Network 
 Both 64 and 128 bit keys are required 
 
 
 
 
 Example: using Toybox.Ant; var channelType = Ant.CHANNEL_TYPE_RX_NOT_TX // Bidirectional Receive (Slave) var network = Ant.NETWORK_PUBLIC; // Ant public network // Get the channel channelAssign = new Ant.ChannelAssignment(channelType, network); // Initialize the channel - assumes message callback method GenericChannel.initialize(method(:onMessage), channelAssign); See Also: Toybox.AntPlus 
 
 Since: API Level 1.0.0 isBackgroundScanEnabled() as Lang.Boolean 
 See if background scanning is enabled for the channel assignment. Example: using Toybox.Ant; // Assuming initialized channel ChannelAssignment.isBackgroundScanEnabled(); Returns: Lang.Boolean — Returns true if background scan is enabled, otherwise false . 
 
 Since: API Level 1.2.0 setBackgroundScan(isBackgroundScanEnabled as Lang.Boolean ) as Lang.Boolean 
 Set background scan to be enabled or disabled. Enabling background scan can only be done on Receive Only channels. Parameters: isBackgroundScanEnabled — ( Lang.Boolean ) — Value is true to enable background scan, otherwise false . 
 
 Example: using Toybox.Ant; // Assuming initialized channel ChannelAssignment.setBackgroundScan(isBackgroundScanEnabled); Returns: Lang.Boolean — Return true if the background scan property was successfully set, otherwise false . 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [CryptoConfig (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/CryptoConfig.html)nClass: Toybox.Ant.CryptoConfig
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.CryptoConfig 
 
 show all Overview
 A class to handle encryption of ANT wireless data. See Also:
 ANT Downloads &amp; Resources - ANT Message Protocol 
 
 Example: using Toybox.Ant; // Use a set of constants for configuration const ENCRYPTION_ID = 4294967295; // Define ID const ENCRYPTION_KEY = [ // Define Key 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f ]; const ENCRYPTION_USER_INFO_STRING = [ // String "hello world" in hex 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ]; const ENCRYPTION_DECIMATION_RATE = 1; // Define Decimation Rate // Define the CryptoConfig cryptoConfig = new Ant.CryptoConfig({ :encryptionID =&gt; ENCRYPTION_ID, :encryptionKey =&gt; ENCRYPTION_KEY, :userInfoString =&gt; ENCRYPTION_USER_INFO_STRING, :decimateRate =&gt; ENCRYPTION_DECIMATION_RATE }); Since: API Level 2.3.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type DEFAULT_ENCRYPTION_ID 0 API Level 2.3.0 
 Type DEFAULT_USER_INFO_STRING 0 API Level 2.3.0 
 Type ENCRYPTION_KEY_LENGTH 16 API Level 2.3.0 
 Type USER_INFO_STRING_LENGTH 19 API Level 2.3.0 
 Typedef Summary collapse 
 EncryptionKey as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 UserInfoString as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 
 Instance Member Summary collapse 
 decimationRate as Lang.Number The division factor of the encryption counter. 
 encryptionId as Lang.Number The unique 4 byte identifier of the encrypted master or the negotiating slave. 
 encryptionKey as CryptoConfig.EncryptionKey The 128-bit encryption key used to encrypt/decrypt ANT packets. 
 userInfoString as CryptoConfig.UserInfoString or Null The (optional) user information String to be sent to the master channel on successful negotiation of encryption (Slave channels only). 
 
 Instance Method Summary collapse 
 initialize (options as { :encryptionId as Lang.Number , :encryptionKey as CryptoConfig.EncryptionKey , :userInfoString as CryptoConfig.UserInfoString , :decimationRate as Lang.Number }) Constructor. 
 
 Typedef Details
 EncryptionKey as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 Since: API Level 2.3.0 UserInfoString as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 Since: API Level 2.3.0 Instance Attribute Details
 var decimationRate as Lang.Number 
 The division factor of the encryption counter Since: API Level 2.3.0 var encryptionId as Lang.Number 
 The unique 4 byte identifier of the encrypted master or the negotiating slave. Since: API Level 2.3.0 var encryptionKey as CryptoConfig.EncryptionKey 
 The 128-bit encryption key used to encrypt/decrypt ANT packets. Since: API Level 2.3.0 var userInfoString as CryptoConfig.UserInfoString or Null 
 The (optional) user information String to be sent to the master channel on successful negotiation of encryption (Slave channels only). Since: API Level 2.3.0 Instance Method Details
 initialize(options as { :encryptionId as Lang.Number , :encryptionKey as CryptoConfig.EncryptionKey , :userInfoString as CryptoConfig.UserInfoString , :decimationRate as Lang.Number }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — The Dictionary of options for the configuration :encryptionId — ( Lang.Number ) — a Number (uint32) to uniquely identify a device during encryption negotiation 
 :encryptionKey — ( Lang.Array ) — The key which will be used to encrypt/decrypt ANT packets as an Array of bytes 
 :userInfoString — ( Lang.Array ) — The string to send during negotiation to the master channel (only used when the channel is configured as a slave) as an Array of bytes 
 :decimationRate — ( Lang.Number ) — A Number with range 1-255 used for division of the master channel rate by the slave's 
 
 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [DeviceConfig (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/DeviceConfig.html)nClass: Toybox.Ant.DeviceConfig
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.DeviceConfig 
 
 show all Overview
 A class to define the ANT wireless channel device configuration. See Also:
 ANT Downloads &amp; Resources - ANT Message Protocol 
 Toybox.AntPlus 
 
 Example: // Set the configuration deviceCfg = new Ant.DeviceConfig({ :deviceNumber =&gt; 0, // Wild card our search :deviceType =&gt; 31, // 1 byte type identifier :transmissionType =&gt; 0, // Manufacturer-specific transport type :messagePeriod =&gt; 8192, // The message period :radioFrequency =&gt; 57, // Ant+ Frequency :searchTimeoutLowPriority =&gt; 10, // Timeout in 25s :searchThreshold =&gt; 0 // Pair to all transmitting sensors }); genericChannel.setDeviceConfig(deviceCfg); Since: API Level 1.0.0 Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type DEFAULT_DEVICE_NUMBER 123 API Level 1.0.0 The default values for a device configuration 
 Type DEFAULT_DEVICE_TYPE 1 API Level 1.0.0 
 Type DEFAULT_MESSAGE_PERIOD 8192 API Level 1.0.0 
 Type DEFAULT_NETWORK_KEY 0 API Level 1.2.0 
 Type DEFAULT_RADIO_FREQUENCY 10 API Level 1.0.0 
 Type DEFAULT_SEARCH_TIMEOUT_HIGH 0 API Level 1.0.0 
 Type DEFAULT_SEARCH_TIMEOUT_LOW 6 API Level 1.0.0 
 Type DEFAULT_THRESHOLD 0 API Level 1.0.0 
 Type DEFAULT_TRANSMISSION_TYPE 0 API Level 1.0.0 
 Type NETWORK_KEY_LENGTH_128BIT 16 API Level 1.2.0 
 Type NETWORK_KEY_LENGTH_64BIT 8 API Level 1.2.0 Network key lengths 
 Typedef Summary collapse 
 NetworkKey128Bit as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 NetworkKey64Bit as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 
 Instance Member Summary collapse 
 deviceNumber as Lang.Number The unique device number (ANT-id). 
 deviceType as Lang.Number A 1-Byte device type identifier. 
 messagePeriod as Lang.Number The Message period that the sensor uses. 
 networkKey128Bit as DeviceConfig.NetworkKey128Bit or Null A 128 bit network key. 
 networkKey64Bit as DeviceConfig.NetworkKey64Bit or Null A 64 bit network key. 
 radioFrequency as Lang.Number The radio frequency that the sensor operates on. 
 searchThreshold as Lang.Number The proximity threshold bin. 
 searchTimeoutHighPriority as Lang.Number High Priority search timeout that a receiving channel will wait for in order to start tracking a master * Measured in 2.5s increments * Limited to a maximum of 5 seconds (Range of 0 to 2). 
 searchTimeoutLowPriority as Lang.Number The low Priority search timeout that a receiving channel will wait for in order to start tracking a master * Measured in 2.5s increments * Limited to a maximum of 30 seconds (Range of 0 to 12). 
 transmissionType as Lang.Number The manufacturer-specific transport type and extended device number. 
 
 Instance Method Summary collapse 
 initialize (options as { :deviceNumber as Lang.Number , :deviceType as Lang.Number , :transmissionType as Lang.Number , :messagePeriod as Lang.Number , :radioFrequency as Lang.Number , :searchTimeoutLowPriority as Lang.Number , :searchTimeoutHighPriority as Lang.Number , :searchThreshold as Lang.Number , :networkKey64Bit as DeviceConfig.NetworkKey64Bit , :networkKey128Bit as DeviceConfig.NetworkKey128Bit }) Constructor. 
 
 Typedef Details
 NetworkKey128Bit as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 Since: API Level 1.0.0 NetworkKey64Bit as [ Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number , Lang.Number ] 
 Since: API Level 1.0.0 Instance Attribute Details
 var deviceNumber as Lang.Number 
 The unique device number (ANT-id) Since: API Level 1.0.0 var deviceType as Lang.Number 
 A 1-Byte device type identifier Since: API Level 1.0.0 var messagePeriod as Lang.Number 
 The Message period that the sensor uses Since: API Level 1.0.0 var networkKey128Bit as DeviceConfig.NetworkKey128Bit or Null 
 A 128 bit network key Since: API Level 1.2.0 var networkKey64Bit as DeviceConfig.NetworkKey64Bit or Null 
 A 64 bit network key Since: API Level 1.2.0 var radioFrequency as Lang.Number 
 The radio frequency that the sensor operates on Since: API Level 1.0.0 var searchThreshold as Lang.Number 
 The proximity threshold bin Since: API Level 1.0.0 var searchTimeoutHighPriority as Lang.Number 
 High Priority search timeout that a receiving channel will wait for in order to start tracking a master Measured in 2.5s increments 
 Limited to a maximum of 5 seconds (Range of 0 to 2) 
 
 Since: API Level 1.0.0 var searchTimeoutLowPriority as Lang.Number 
 The low Priority search timeout that a receiving channel will wait for in order to start tracking a master Measured in 2.5s increments 
 Limited to a maximum of 30 seconds (Range of 0 to 12) 
 
 Since: API Level 1.0.0 var transmissionType as Lang.Number 
 The manufacturer-specific transport type and extended device number Since: API Level 1.0.0 Instance Method Details
 initialize(options as { :deviceNumber as Lang.Number , :deviceType as Lang.Number , :transmissionType as Lang.Number , :messagePeriod as Lang.Number , :radioFrequency as Lang.Number , :searchTimeoutLowPriority as Lang.Number , :searchTimeoutHighPriority as Lang.Number , :searchThreshold as Lang.Number , :networkKey64Bit as DeviceConfig.NetworkKey64Bit , :networkKey128Bit as DeviceConfig.NetworkKey128Bit }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — The initialization options :deviceNumber — ( Lang.Number ) — The ANT-id of the device to search for. Not setting enables a wild card search 
 :deviceType — ( Lang.Number ) — 1-Byte device type identifier 
 :transmissionType — ( Lang.Number ) — The manufacturer-specific transport type and extended device number 
 :messagePeriod — ( Lang.Number ) — The message period that the sensor uses 
 :radioFrequency — ( Lang.Number ) — The radio frequency that the sensor operates on. Range of 2 to 80. 
 :searchTimeoutLowPriority — ( Lang.Number ) — The Low Priority search timeout that a receiving channel will wait for in order to start tracking a master Low Priority search provides the capability of searching for a master without interrupting other channels on the device 
 Range of 0 to 12 (2.5s increments) 
 Default 6 (15s) 
 
 
 :searchTimeoutHighPriority — ( Lang.Number ) — The High Priority search timeout that a receiving channel will wait for in order to start tracking a master Is triggered after the Low Priority search mode times out 
 Will interrupt other channels 
 Will take priority over any other open channels on that device 
 If it overlaps another channel the High Priority search takes priority and that other channel is blocked 
 Keeping this search type disabled unless you have great difficulty acquiring a master through Low Priority search is recommended 
 High Priority searches are disabled in data-fields, and will be ignored for that application type 
 Range of 0 to 2 (2.5s increments) 
 Default 0 (disabled) 
 
 
 :searchThreshold — ( Lang.Number ) — A proximity threshold bin as a Number Configures the RSSI threshold a slave channel will search for which is effectively the distance at which a slave is willing to be from a master 
 Values are 0 (disabled), 1 (closest), 10 (farthest) 
 
 
 :networkKey64Bit — ( Lang.Number ) — 64 bit network key Set this when NETWORK_PRIVATE was chosen in the channel assignment 
 
 
 :networkKey128Bit — ( Lang.Number ) — 128 bit network key Set this when NETWORK_PRIVATE was chosen in the channel assignment 
 
 
 
 
 
 See Also: ANT Downloads &amp; Resources - ANT Message Protocol and Usage 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [EncryptionInvalidSettingsException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/EncryptionInvalidSettingsException.html)nClass: Toybox.Ant.EncryptionInvalidSettingsException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Ant.EncryptionInvalidSettingsException 
 
 show all Overview
 Thrown if encryption settings are invalid and cannot be used to complete the request for an encrypted channel. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [GenericChannel (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/GenericChannel.html)nClass: Toybox.Ant.GenericChannel
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.GenericChannel 
 
 show all Overview
 A class for controlling an ANT wireless channel. The GenericChannel provides the methods necessary for initialization, life cycle, and encryption of ANT channels. Since: API Level 1.0.0 Instance Method Summary collapse 
 close () as Lang.Boolean Close a generic ANT Channel. 
 disableEncryption () as Lang.Boolean Disable encryption on this channel. 
 enableEncryption (configuration as Ant.CryptoConfig ) as Lang.Boolean Set the encryption configuration and enable encryption on this channel. 
 getDeviceConfig () as Ant.DeviceConfig Get the current ANT channel configuration. 
 initialize (listener as Lang.Method (msg as Ant.Message ) as Void , channelAssignment as Ant.ChannelAssignment ) Constructor. 
 open () as Lang.Boolean Open a generic ANT Channel. 
 release () as Lang.Boolean Release the generic ANT Channel back to the system. 
 sendAcknowledge (data as Ant.Message ) as Lang.Boolean Send an acknowledge message. 
 sendBroadcast (data as Ant.Message ) as Lang.Boolean Send a broadcast message. 
 sendBurst (burstData as Ant.BurstPayload ) as Void Send an Array of Messages as a burst across the ANT channel. 
 setBurstListener (listener as Ant.BurstListener ) as Void Set the BurstListener for burst events. 
 setDeviceConfig (configuration as Ant.DeviceConfig ) as Lang.Boolean Set the current ANT channel configuration. 
 
 Instance Method Details
 close() as Lang.Boolean 
 Close a generic ANT Channel. Example: using Toybox.Ant; // Assumes a valid GenericChannel object genericChannel.close(); Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 1.0.0 disableEncryption() as Lang.Boolean 
 Disable encryption on this channel. Example: using Toybox.Ant; // Assumes a valid GenericChannel object genericChannel.disableEncryption(); Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 2.3.0 enableEncryption(configuration as Ant.CryptoConfig ) as Lang.Boolean 
 Set the encryption configuration and enable encryption on this channel. Parameters: configuration — ( Ant.CryptoConfig ) — The CryptoConfig object to set for the current channel 
 
 Example: using Toybox.Ant; var cryptoConfig = new Ant.CryptoConfig({}); // Assumes a valid GenericChannel object genericChannel.enableEncryption(cryptoConfig); Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Boolean — true on success, otherwise false . 
 
 See Also: Toybox.Ant.CryptoConfig 
 
 Since: API Level 2.3.0 Throws: ( Ant.EncryptionInvalidSettingsException ) — Thrown if invalid encryption settings are used 
 ( Ant.UnableToAcquireEncryptedChannelException ) — Thrown if an ecrypted channel cannot be acquired because all channels are in use 
 
 getDeviceConfig() as Ant.DeviceConfig 
 Get the current ANT channel configuration. Example: using Toybox.Ant; var devConfig = genericChannel.getDeviceConfig(); // devConfig fields can now be accessed for configuration info Returns: Ant.DeviceConfig — The DeviceConfig object with current channel device configuration. 
 
 See Also: Toybox.Ant.DeviceConfig 
 
 Since: API Level 1.0.0 initialize(listener as Lang.Method (msg as Ant.Message ) as Void , channelAssignment as Ant.ChannelAssignment ) 
 Constructor Parameters: listener — ( Lang.Method ) — The Method object to call with channel messages 
 channelAssignment — ( Ant.ChannelAssignment ) — The ChannelAssignment object for the channel 
 
 Example: using Toybox.Ant; // Assumes a listenerCallback method and ChannelAssignment object supplied // as parameters upon initialization GenericChannel.initialize(method(:listenerCallback), channelAssign); Since: API Level 1.0.0 Throws: ( Ant.UnableToAcquireChannelException ) — Thrown if the the system does not have a channel available. 
 
 open() as Lang.Boolean 
 Open a generic ANT Channel. Note: Multitasking: Ant channel connection can not be changed while in inacitve mode and ant channels opened during active mode will be closed when app becomes inactive, and re-opened automatically when is active again. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Example: using Toybox.Ant; // Assumes a valid GenericChannel object genericChannel.open(); Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 1.0.0 release() as Lang.Boolean 
 Release the generic ANT Channel back to the system. If the channel is open it will be automatically closed. Example: using Toybox.Ant; // Assumes a valid GenericChannel object genericChannel.release(); Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 1.0.0 sendAcknowledge(data as Ant.Message ) as Lang.Boolean 
 Send an acknowledge message. You can expect to receive either MSG_CODE_EVENT_TRANSFER_TX_COMPLETED or MSG_CODE_EVENT_TRANSFER_TX_FAILED if the message succeeded/failed going to the recipient. Parameters: data — ( Ant.Message ) — A message whose payload is an 8-byte Array of numbers 
 
 Example: using Toybox.Ant; // create a data Array to format Message var data = new[8]; for (var i = 0; i &lt; 8; i++) { data[i] = i + 1; // Set the values of each member } var message = new Ant.Message(); message.setPayload(data); // Assumes valid data // Assumes a valid GenericChannel object genericChannel.sendAcknowledge(message); Returns: Lang.Boolean — true on success, otherwise false . 
 
 See Also: Toybox.Ant.Message 
 
 Since: API Level 1.0.0 sendBroadcast(data as Ant.Message ) as Lang.Boolean 
 Send a broadcast message. Parameters: data — ( Ant.Message ) — A message whose payload is an 8-byte Array of numbers 
 
 Example: using Toybox.Ant; // create a data Array to format Message var data = new[8]; for (var i = 0; i &lt; 8; i++) { data[i] = i + 1; // Set the values of each member } var message = new Ant.Message(); message.setPayload(data); // Assumes valid data // Assumes a valid GenericChannel object genericChannel.sendBroadcast(message); Returns: Lang.Boolean — true on success, otherwise false . 
 
 See Also: Toybox.Ant.Message 
 
 Since: API Level 1.0.0 sendBurst(burstData as Ant.BurstPayload ) as Void 
 Send an Array of Messages as a burst across the ANT channel. Success or Fail is received by the BurstListener . Parameters: burstData — ( Ant.BurstPayload ) — The data to burst across the channel 
 
 Example: using Toybox.Ant; var burstData = new Ant.BurstPayload(); // Create new payload // Message must contain a valid payload burstData.add(message); // Add Message object to payload // Assumes a valid GenericChannel object genericChannel.sendBurst(burstData); // Send Message See Also: Toybox.Ant.BurstPayload 
 
 Since: API Level 2.2.0 Throws: ( Lang.SymbolNotAllowedException ) — Thrown if called from a data field app 
 
 setBurstListener(listener as Ant.BurstListener ) as Void 
 Set the BurstListener for burst events. Failed bursts or those larger than the specified threshold will be discarded. Parameters: listener — ( Ant.BurstListener ) — An extension of the BurstListener class 
 
 Example: using Toybox.Ant; // Assumes a valid GenericChannel object // Assumes a valid BurstListener object as a parameter genericChannel.setBurstListener(listener); See Also: Toybox.Ant.BurstListener 
 
 Since: API Level 2.2.0 Throws: ( Lang.SymbolNotAllowedException ) — Thrown if called from a data field app 
 
 setDeviceConfig(configuration as Ant.DeviceConfig ) as Lang.Boolean 
 Set the current ANT channel configuration. Parameters: configuration — ( Ant.DeviceConfig ) — The DeviceConfig object to set for the current ANT channel 
 
 Example: using Toybox.Ant; var configuration = new Ant.DeviceConfig({}); // Assumes a valid GenericChannel object genericChannel.setDeviceConfig(configuration); Returns: Lang.Boolean — true on success, otherwise false . 
 
 See Also: Toybox.Ant.DeviceConfig 
 
 Since: API Level 1.0.0 Throws: ( Lang.UnexpectedTypeError ) — Thrown if configuration values in configuration are not of the correct type. 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Message (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/Message.html)nClass: Toybox.Ant.Message
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Ant.Message 
 
 show all Overview
 A class to hold and define the information in an ANT wireless data payload. Example: using Toybox.Ant; // Wrap the message prep and broadcast in a callback method function onMessage(msg) { var payload = msg.getPayload(); //get the data payload var data = new [msg.length]; // create an array the length of the message // Iterate and add data to the Message with each pass for (var i = 0; i &lt; msg.length; i++) { data[i] = i; // Adds {0,1,2,3,4,5,6,7} } var message = new Ant.Message(); message.setPayload(data); // Form the Message // Set the broadcast buffer genericChannel.sendBroadcast(message); } Since: API Level 1.0.0 Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type DATA_PAYLOAD_LENGTH 8 API Level 1.0.0 
 Instance Member Summary collapse 
 deviceNumber as Lang.Number or Null The Unique device number (ANT-id). 
 deviceType as Lang.Number or Null A 1-Byte device type identifier. 
 length as Lang.Number or Null Number of data bytes in the data payload (not including any extended data if applicable). 
 messageId as Lang.Number or Null The Data Type Identifier. 
 rssi as Lang.Number or Null The Received Signal Strength Indication. 
 timestamp as Lang.Number or Null The time stamp of received message generated off of a 32.768 kHz clock. 
 transmissionType as Lang.Number or Null The manufacturer-specific transport type and extended device number. 
 
 Instance Method Summary collapse 
 getPayload () as Lang.Array &lt; Lang.Number &gt; Get the ANT data packet. 
 setPayload (data as Lang.Array &lt; Lang.Number &gt;) as Void Set the ANT data packet. 
 
 Instance Attribute Details
 var deviceNumber as Lang.Number or Null 
 The Unique device number (ANT-id). Since: API Level 1.2.0 var deviceType as Lang.Number or Null 
 A 1-Byte device type identifier. Since: API Level 1.2.0 See Also: ANT Downloads &amp; Resources - ANT Message Protocol and Usage for pre-defined Device Types. 
 
 var length as Lang.Number or Null 
 Number of data bytes in the data payload (not including any extended data if applicable). Since: API Level 1.0.0 var messageId as Lang.Number or Null 
 The Data Type Identifier Since: API Level 1.0.0 var rssi as Lang.Number or Null 
 The Received Signal Strength Indication. Since: API Level 1.0.0 var timestamp as Lang.Number or Null 
 The time stamp of received message generated off of a 32.768 kHz clock. Rolls over every 2 seconds. Since: API Level 1.2.0 var transmissionType as Lang.Number or Null 
 The manufacturer-specific transport type and extended device number. Since: API Level 1.2.0 Instance Method Details
 getPayload() as Lang.Array &lt; Lang.Number &gt; 
 Get the ANT data packet. Returns: Lang.Array — An Array of Numbers as integers representing the bytes of the data payload 
 
 Since: API Level 1.0.0 setPayload(data as Lang.Array &lt; Lang.Number &gt;) as Void 
 Set the ANT data packet. Parameters: data — ( Lang.Array ) — An Array of Numbers as integers representing the bytes of the data payload 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [UnableToAcquireChannelException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/UnableToAcquireChannelException.html)nClass: Toybox.Ant.UnableToAcquireChannelException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Ant.UnableToAcquireChannelException 
 
 show all Overview
 Thrown if the GenericChannel.initialize() is unable to acquire an ANT channel from the system. This indicates that all available ANT channels are in use. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 1.2.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [UnableToAcquireEncryptedChannelException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Ant/UnableToAcquireEncryptedChannelException.html)nClass: Toybox.Ant.UnableToAcquireEncryptedChannelException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Ant.UnableToAcquireEncryptedChannelException 
 
 show all Overview
 Thrown if the Encryption Manager's enableEncryption is unable to acquire an encryption channel either because there are too many encrypted channels or an error occurred while acquiring an encrypted channel. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [AntPlus (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus.html)nModule: Toybox.AntPlus
 Overview
 The AntPlus module contains the interface for ANT+ data. ANT+ is built on top of ANT. It is a set of mutually agreed upon device profiles for what the information sent over ANT represents. For example, a heart rate monitor will send information about your heart rate over ANT as defined in the ANT+ Heart Rate Device Profile. CIQ devices can use the ANT Module to implement ANT+ device profiles and talk to nearby devices that also implement the same ANT+ device profile (such as heart rate, bike power and fitness equipment control). The AntPlus Module provides the APIs to communicate in specific and standard ways with the ANT+ profiles defined in the document available at the link below titled, "ANT+ Device Profiles". See Also:
 Toybox.Ant 
 ANT Basics 
 ANT Downloads &amp; Resources (ANT+ Device Profiles) 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Classes Under Namespace
 Classes: AntPlusNotAllowedException , BatteryStatus , BikeCadence , BikeCadenceInfo , BikeCadenceListener , BikeLight , BikePower , BikePowerListener , BikeRadar , BikeRadarListener , BikeSpeed , BikeSpeedCadence , BikeSpeedCadenceInfo , BikeSpeedCadenceListener , BikeSpeedInfo , BikeSpeedListener , CalculatedCadence , CalculatedPower , CalculatedWheelDistance , CalculatedWheelSpeed , CommonData , DerailleurStatus , Device , DeviceListener , DeviceState , FitnessEquipment , FitnessEquipmentData , FitnessEquipmentListener , FitnessEquipmentMode , LightNetwork , LightNetworkListener , ManufacturerInfo , PedalPowerBalance , ProductInfo , RadarTarget , ResistanceSettings , RunningDynamics , RunningDynamicsData , RunningDynamicsListener , SensorPosition , Shifting , ShiftingListener , ShiftingStatus , SimulationSettings , TargetPowerSettings , TorqueEffectivenessPedalSmoothness , UserSettings Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type FRONT_GEAR_INVALID 7 API Level 3.1.0 Invalid front gear index 
 Type INVALID_CADENCE -1 API Level 3.0.0 
 Type INVALID_SPEED -1 API Level 3.0.0 Represents an invalid speed value 
 Type MAX_GEARS_INVALID 0 API Level 3.1.0 Invalid max gears value 
 Type REAR_GEAR_INVALID 31 API Level 3.1.0 Invalid rear gear index 
 BatteryStatusValue
 Since: API Level 2.2.0 Name Value Since Description See Also 
 BATT_STATUS_NEW 1 API Level 2.2.0 
 BATT_STATUS_GOOD 2 API Level 2.2.0 
 BATT_STATUS_OK 3 API Level 2.2.0 
 BATT_STATUS_LOW 4 API Level 2.2.0 
 BATT_STATUS_CRITICAL 5 API Level 2.2.0 
 BATT_STATUS_INVALID 7 API Level 2.2.0 
 BATT_STATUS_CNT 8 API Level 2.2.0 
 MessageSendStatus
 Since: API Level 2.2.0 Name Value Since Description See Also 
 MESSAGE_SENT_SUCCESS 0 API Level 3.1.0 Message sent successfully 
 MESSAGE_SENT_FAILED 1 API Level 3.1.0 Message sent failed 
 MESSAGE_SENT_COUNT 2 API Level 3.1.0 
 MessageType
 Since: API Level 2.2.0 Name Value Since Description See Also 
 MESSAGE_TYPE_MANUFACTURER 0 API Level 3.1.0 Manufacturer specific message sent 
 MESSAGE_TYPE_PAGE_REQUEST 1 API Level 3.1.0 Page request sent 
 MESSAGE_TYPE_COUNT 2 API Level 3.1.0 
 DeviceCurrentState
 Since: API Level 2.2.0 Name Value Since Description See Also 
 DEVICE_STATE_DEAD 0 API Level 2.2.0 Device is not usable (not paired or disabled) 
 DEVICE_STATE_CLOSED 1 API Level 2.2.0 Device's channel is closed 
 DEVICE_STATE_SEARCHING 2 API Level 2.2.0 Device's channel is open and searching 
 DEVICE_STATE_TRACKING 3 API Level 2.2.0 Device's channel is open and tracking 
 DEVICE_STATE_CNT 4 API Level 2.2.0 
 LightNetworkState
 Since: API Level 2.2.0 Name Value Since Description See Also 
 LIGHT_NETWORK_STATE_NOT_FORMED 0 API Level 2.2.0 Light network is not yet formed 
 LIGHT_NETWORK_STATE_FORMING 1 API Level 2.2.0 Light network is forming 
 LIGHT_NETWORK_STATE_FORMED 2 API Level 2.2.0 Light network is formed 
 LightNetworkMode
 Since: API Level 2.2.0 Name Value Since Description See Also 
 LIGHT_NETWORK_MODE_INDIVIDUAL 0 API Level 2.2.0 Light modes are set by the user 
 LIGHT_NETWORK_MODE_AUTO 1 API Level 2.2.0 Light modes are automatically set based on ambient light (or time of day if there is no ambient light sensor available) 
 LIGHT_NETWORK_MODE_HIGH_VIS 2 API Level 2.2.0 Light modes are automatically placed in their highest-visibility mode 
 LightMode
 Since: API Level 2.2.0 Name Value Since Description See Also 
 LIGHT_MODE_OFF 0 API Level 2.2.0 
 LIGHT_MODE_ST_81_100 1 API Level 2.2.0 Steady beam 81-100% intensity 
 LIGHT_MODE_ST_61_80 2 API Level 2.2.0 Steady beam 61-80% intensity 
 LIGHT_MODE_ST_41_60 3 API Level 2.2.0 Steady beam 41-60% intensity 
 LIGHT_MODE_ST_21_40 4 API Level 2.2.0 Steady beam 21-40% intensity 
 LIGHT_MODE_ST_0_20 5 API Level 2.2.0 Steady beam 0-20% intensity 
 LIGHT_MODE_SLOW_FLASH 6 API Level 2.2.0 Slow flash mode 
 LIGHT_MODE_FAST_FLASH 7 API Level 2.2.0 Fast flash mode 
 LIGHT_MODE_RANDOM_FLASH 8 API Level 2.2.0 Randomly timed flash mode 
 LIGHT_MODE_AUTO 9 API Level 2.2.0 
 LIGHT_MODE_SIGNAL_LEFT_SC 10 API Level 2.2.0 Turn signal left self-cancelling 
 LIGHT_MODE_SIGNAL_LEFT 11 API Level 2.2.0 Turn signal left 
 LIGHT_MODE_SIGNAL_RIGHT_SC 12 API Level 2.2.0 Turn signal right self-cancelling 
 LIGHT_MODE_SIGNAL_RIGHT 13 API Level 2.2.0 Turn signal right 
 LIGHT_MODE_HAZARD 14 API Level 2.2.0 Hazard - right and left signals flash 
 LIGHT_MODE_CUSTOM_5 59 API Level 2.2.0 Custom mode (manufacturer-defined) 
 LIGHT_MODE_CUSTOM_4 60 API Level 2.2.0 Custom mode (manufacturer-defined) 
 LIGHT_MODE_CUSTOM_3 61 API Level 2.2.0 Custom mode (manufacturer-defined) 
 LIGHT_MODE_CUSTOM_2 62 API Level 2.2.0 Custom mode (manufacturer-defined) 
 LIGHT_MODE_CUSTOM_1 63 API Level 2.2.0 Custom mode (manufacturer-defined) 
 LightType
 Since: API Level 2.2.0 Name Value Since Description See Also 
 LIGHT_TYPE_HEADLIGHT 0 API Level 2.2.0 Headlight light type 
 LIGHT_TYPE_TAILLIGHT 2 API Level 2.2.0 Taillight light type 
 LIGHT_TYPE_SIGNAL_CONFIG 3 API Level 2.2.0 Configurable signal light type 
 LIGHT_TYPE_SIGNAL_LEFT 4 API Level 2.2.0 Left turn signal light type 
 LIGHT_TYPE_SIGNAL_RIGHT 5 API Level 2.2.0 Right turn signal light type 
 LIGHT_TYPE_OTHER 7 API Level 2.2.0 Undefined light type 
 BikePowerSensorType
 Since: API Level 2.2.0 Name Value Since Description See Also 
 BIKE_POWER_SENSOR_TYPE_NONE 0 API Level 2.2.0 None 
 BIKE_POWER_SENSOR_TYPE_POWER_ONLY 1 API Level 2.2.0 Power output directly in Watts 
 BIKE_POWER_SENSOR_TYPE_WHEEL_TORQUE 2 API Level 2.2.0 Power output from torque on rear wheel 
 BIKE_POWER_SENSOR_TYPE_CRANK_TORQUE 3 API Level 2.2.0 Power output from torque at crank 
 BIKE_POWER_SENSOR_TYPE_CRANK_TORQUE_FREQUENCY 4 API Level 2.2.0 Power output from torque frequency at crank 
 BIKE_POWER_SENSOR_TYPE_CNT 5 API Level 2.2.0 
 ThreatLevel
 Since: API Level 2.2.0 Name Value Since Description See Also 
 THREAT_LEVEL_NO_THREAT 0 API Level 3.0.0 No threat 
 THREAT_LEVEL_VEHICLE_APPROACHING 1 API Level 3.0.0 Vehicle is approaching 
 THREAT_LEVEL_VEHICLE_FAST_APPROACHING 2 API Level 3.0.0 Vehicle is approaching fast 
 ThreatSide
 Since: API Level 2.2.0 Name Value Since Description See Also 
 THREAT_SIDE_NO_SIDE 0 API Level 3.0.0 Threat not on right or left 
 THREAT_SIDE_RIGHT 1 API Level 3.0.0 Threat is on the right side 
 THREAT_SIDE_LEFT 2 API Level 3.0.0 Threat is on the left side 
 TrainerMode
 Since: API Level 2.2.0 Name Value Since Description See Also 
 TRAINER_MODE_BASIC_RESISTANCE 0 API Level 2.4.0 Basic resistance fitness equipment training mode In this mode the user may set the percentage of maximum resistance on the equipment 
 TRAINER_MODE_TARGET_POWER 1 API Level 2.4.0 Target power fitness equipment training mode In this mode the user may set the target wattage output of the equipment 
 TRAINER_MODE_SIMULATION 2 API Level 2.4.0 Simulation fitness equipment training mode In this mode the user may set various fields to adjust resistance 
 TrainerValue
 Since: API Level 2.2.0 Name Value Since Description See Also 
 TRAINER_MODE 7 API Level 2.4.0 The training mode the fitness equipment is currently in. See TRAINER_MODE_* enum for values 
 TRAINER_RESISTANCE 8 API Level 2.4.0 Basic resistance value of the fitness equipment. Percent of max resistance 0 - 100 input range, unit 0.5%. 
 TRAINER_TARGET_POWER 9 API Level 2.4.0 Target power setting of the fitness equipment. 0 - 4000W input range, unit 0.25W. 
 TRAINER_SLOPE 10 API Level 2.4.0 The simulated Slope/Grade setting of simulation training mode. -200% - 200% input range, unit 0.01%. 
 TRAINER_SURFACE 11 API Level 2.4.0 The simulated surface resistance coefficient setting of simulation training mode. 0 - 0.0127 input range, 5x10^-5 scale. Default value is set to 0xFF. 
 TRAINER_WIND_COEFF 12 API Level 2.4.0 The simulated wind resistance coefficient setting of simulation training mode. 0.0 - 1.86 kg/m input range, 0.01 scale. Wind Resistance Coefficient [kg/m] = Frontal Surface Area [m2] x Drag Coefficient x Air Density [kg/m3] Default value is set to 0xFF. 
 TRAINER_WIND_SPEED 13 API Level 2.4.0 The simulated wind speed setting of simulation training mode. -127 - +127 km/hr input range, (+)Head wind (-)Tail wind. 1 km/hr units. Simulated Wind Speed (km/h) = Raw Wind Speed Value – 127 km/h Default value is set to 0xFF. 
 TRAINER_WIND_DRAFT_FACTOR 14 API Level 2.4.0 The simulated wind drafting scale factor setting of simulation training mode. 0 - 1.0 input range, 0.01 scale. A draft factor of 0 removes all wind resistance, and 1.0 indicates no drafting effects. 
 TRAINER_USER_WEIGHT 15 API Level 2.4.0 The user weight setting of simulation training mode. 0 - 655.34 kg input range, unit 0.01kg. 
 TRAINER_BIKE_WEIGHT 16 API Level 2.4.0 The bike weight setting of simulation training mode. 0 - 50kg input range, unit 0.05kg 
 TRAINER_WHEEL_DIAMETER 17 API Level 2.4.0 The wheel diameter setting of the fitness equipment. 0 - 2.54m input range, unit 0.01m 
 TRAINER_GEAR_RATIO 18 API Level 2.4.0 The gear ratio setting of the fitness equipment. 0.03 - 7.65 input range, unit 0.03. gear ratio = value * 0.03 
 BodyLocation
 Since: API Level 2.2.0 Name Value Since Description See Also 
 BODY_LOCATION_LEFT_LEG 0 API Level 2.4.0 Left leg body location 
 BODY_LOCATION_RIGHT_LEG 1 API Level 2.4.0 Right leg body location 
 BODY_LOCATION_TORSO_FRONT 17 API Level 2.4.0 Front torso body location 
 BODY_LOCATION_WAIST_MID_BACK 36 API Level 2.4.0 Waist, mid back body location 
 BODY_LOCATION_WAIST_FRONT 37 API Level 2.4.0 Waist, front body location 
 BODY_LOCATION_WAIST_LEFT 38 API Level 2.4.0 Waist, left body location 
 BODY_LOCATION_WAIST_RIGHT 39 API Level 2.4.0 Waist, right body location 
 SensorOrientation
 Since: API Level 2.2.0 Name Value Since Description See Also 
 SENSOR_ORIENTATION_RIGHT_SIDE_UP 0 API Level 2.4.0 Right side up sensor orientation 
 SENSOR_ORIENTATION_UPSIDE_DOWN 1 API Level 2.4.0 Upside down sensor orientation 
 Generated Dec 11, 2024, 8:58:42 AM


# [AntPlusNotAllowedException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/AntPlusNotAllowedException.html)nClass: Toybox.AntPlus.AntPlusNotAllowedException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.AntPlus.AntPlusNotAllowedException 
 
 show all Overview
 This exception indicates that an invalid operation was attempted. Since: API Level 3.1.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [BatteryStatus (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BatteryStatus.html)nClass: Toybox.AntPlus.BatteryStatus
 Inherits: Toybox.AntPlus.CommonData Toybox.Lang.Object 
 Toybox.AntPlus.CommonData 
 Toybox.AntPlus.BatteryStatus 
 
 show all Overview
 A class containing information from the Battery Status ANT+ common page. Fields may return null so you should null check values before using them. See Also:
 ANT Downloads &amp; Resources (ANT+ Common Pages) 
 
 Since: API Level 2.2.0 Instance Member Summary collapse 
 batteryStatus as AntPlus.BatteryStatusValue or Null The BATT_STATUS_* value of the battery. 
 batteryVoltage as Lang.Float or Null The voltage, -1 is invalid. 
 operatingTime as Lang.Number or Null The operating time in seconds. 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var batteryStatus as AntPlus.BatteryStatusValue or Null 
 The BATT_STATUS_* value of the battery. Since: API Level 2.2.0 Returns: AntPlus.BatteryStatusValue — The battery status of the ANT+ device as a number 
 
 var batteryVoltage as Lang.Float or Null 
 The voltage, -1 is invalid Since: API Level 2.2.0 Returns: Lang.Float — The voltage of the ANT+ device 
 
 var operatingTime as Lang.Number or Null 
 The operating time in seconds. Since: API Level 2.2.0 Returns: Lang.Number — The operating time of the ANT+ device 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeCadence (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeCadence.html)nClass: Toybox.AntPlus.BikeCadence
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.BikeCadence 
 
 show all Overview
 Represents a Bike Cadence Device instance. Example: using Toybox.AntPlus; // Assuming Valid BikeCadenceListener object "MyBikeCadenceListener" // Initialize the AntPlus.BikeCadenceListener object listener = new MyBikeCadenceListener(); // Initialize the AntPlus.BikeCadence object with a listener bikeCadence = new AntPlus.BikeCadence(listener); var cadenceInfo = bikeCadence.getCadenceInfo(); // ...etc Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getCadenceInfo () as AntPlus.BikeCadenceInfo Returns the most recent BikeCadenceInfo. 
 initialize (listener as AntPlus.BikeCadenceListener or Null ) Constructor. 
 
 Instance Method Details
 getCadenceInfo() as AntPlus.BikeCadenceInfo 
 Returns the most recent BikeCadenceInfo Returns: AntPlus.BikeCadenceInfo — with current information. 
 
 Since: API Level 3.0.0 initialize(listener as AntPlus.BikeCadenceListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.BikeCadenceListener ) — The bike cadence instance optionally takes an extension of the BikeCadenceListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the getCadenceInfo method. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeCadenceInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeCadenceInfo.html)nClass: Toybox.AntPlus.BikeCadenceInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.BikeCadenceInfo 
 
 show all Overview
 Represents received bike cadence information. Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 cadence as Lang.Number Cadence (rpm). 
 
 Instance Attribute Details
 var cadence as Lang.Number 
 Cadence (rpm) Since: API Level 3.0.0 Returns: Lang.Number — 0 - 254 range, Toybox::AntPlus::INVALID_CADENCE if invalid 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [BikeCadenceListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeCadenceListener.html)nClass: Toybox.AntPlus.BikeCadenceListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.BikeCadenceListener 
 
 show all Overview
 Listener class for Bike Cadence Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onBikeCadenceUpdate (data as AntPlus.BikeCadenceInfo ) as Void Callback when cadence data is updated. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.0.0 onBikeCadenceUpdate(data as AntPlus.BikeCadenceInfo ) as Void 
 Callback when cadence data is updated Parameters: data — ( AntPlus.BikeCadenceInfo ) — data Data with updated cadence information. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeLight (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeLight.html)nClass: Toybox.AntPlus.BikeLight
 Inherits: Toybox.AntPlus.CommonData Toybox.Lang.Object 
 Toybox.AntPlus.CommonData 
 Toybox.AntPlus.BikeLight 
 
 show all Overview
 A class representing a bike light sensor. Since: API Level 2.2.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Member Summary collapse 
 mode as AntPlus.LightMode The LIGHT_MODE_* mode of the light. 
 type as AntPlus.LightType The LIGHT_TYPE_* type of the light. 
 
 Instance Method Summary collapse 
 getCapableModes () as Lang.Array &lt; AntPlus.LightMode &gt; or Null Get a list of the standard and custom light modes that a bike light supports. 
 initialize () Constructor. 
 setMode (mode as AntPlus.LightMode ) as Void Tell this light to enter a new mode. 
 
 Instance Attribute Details
 var mode as AntPlus.LightMode 
 The LIGHT_MODE_* mode of the light. Since: API Level 2.2.0 Returns: AntPlus.LightMode 
 
 var type as AntPlus.LightType 
 The LIGHT_TYPE_* type of the light. Since: API Level 2.2.0 Returns: AntPlus.LightType 
 
 Instance Method Details
 getCapableModes() as Lang.Array &lt; AntPlus.LightMode &gt; or Null 
 Get a list of the standard and custom light modes that a bike light supports. Returns: Lang.Array — list of supported LIGHT_MODE_* values, null if unknown 
 
 Since: API Level 2.2.0 initialize() 
 Constructor Since: API Level 2.2.0 setMode(mode as AntPlus.LightMode ) as Void 
 Tell this light to enter a new mode. You should check the capable modes before sending light modes as lights will ignore commands to go into modes that they do not support. Lights whose modes are set here will not be controlled by the Light Network Mode until they are restored OR until the user changes the Light Network Mode outside of ConnectIQ. Parameters: mode — ( AntPlus.LightMode ) — The LIGHT_MODE_* enum number value 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikePower (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikePower.html)nClass: Toybox.AntPlus.BikePower
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.BikePower 
 
 show all Overview
 Represents a Bike Power Device instance. See Also:
 BikePowerListener example for full MyBikePowerListener implementation 
 BikePowerListener example for examples of onCalculated* methods available in {Toybox::AntPlus::BikePowerListener BikePowerListener} 
 
 Example: using Toybox.AntPlus; // Assuming Valid BikePowerListener object "MyBikePowerListener" // Initialize the AntPlus.BikePowerListener object listener = new MyBikePowerListener(); // Initialize the AntPlus.BikePower object with a listener bikePower = new AntPlus.BikePower(listener); var calculatedPower = bikePower.getCalculatedCadence(); var calculatedPower = bikePower.getCalculatedPower(); // ...etc Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 getCalculatedCadence () as AntPlus.CalculatedCadence Get the current calculated crank cadence. 
 getCalculatedPower () as AntPlus.CalculatedPower Retrieve the current calculated power. 
 getCalculatedWheelDistance () as AntPlus.CalculatedWheelDistance Retrieve the current calculated wheel distance. 
 getCalculatedWheelSpeed () as AntPlus.CalculatedWheelSpeed Retrieve the current calculated wheel speed. 
 getPedalPowerBalance () as AntPlus.PedalPowerBalance Retrieve the current pedal power balance. 
 getTorqueEffectivenessPedalSmoothness () as AntPlus.TorqueEffectivenessPedalSmoothness Retrieve the current torque effectiveness and pedal smoothness. 
 initialize (listener as AntPlus.BikePowerListener or Null ) Constructor. 
 
 Instance Method Details
 getCalculatedCadence() as AntPlus.CalculatedCadence 
 Get the current calculated crank cadence. Returns: AntPlus.CalculatedCadence — The current calculated crank cadence 
 
 Since: API Level 2.2.0 getCalculatedPower() as AntPlus.CalculatedPower 
 Retrieve the current calculated power. Returns: AntPlus.CalculatedPower — The current calculated power 
 
 Since: API Level 2.2.0 getCalculatedWheelDistance() as AntPlus.CalculatedWheelDistance 
 Retrieve the current calculated wheel distance. Returns: AntPlus.CalculatedWheelDistance — The current calculated wheel distance 
 
 Since: API Level 2.2.0 getCalculatedWheelSpeed() as AntPlus.CalculatedWheelSpeed 
 Retrieve the current calculated wheel speed. Returns: AntPlus.CalculatedWheelSpeed — The current calculated wheel speed 
 
 Since: API Level 2.2.0 getPedalPowerBalance() as AntPlus.PedalPowerBalance 
 Retrieve the current pedal power balance. Returns: AntPlus.PedalPowerBalance — The pedal power balance 
 
 Since: API Level 2.2.0 getTorqueEffectivenessPedalSmoothness() as AntPlus.TorqueEffectivenessPedalSmoothness 
 Retrieve the current torque effectiveness and pedal smoothness. Returns: AntPlus.TorqueEffectivenessPedalSmoothness — The current torque effectiveness &amp; pedal smoothness 
 
 Since: API Level 2.2.0 initialize(listener as AntPlus.BikePowerListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.BikePowerListener ) — The bike power instance optionally takes an extension of the BikePowerListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the getCalculated* methods. 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikePowerListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikePowerListener.html)nClass: Toybox.AntPlus.BikePowerListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.BikePowerListener 
 
 show all Overview
 Listener class for Bike Power. Example: An implementation of BikePowerListener using Toybox.AntPlus; class MyBikePowerListener extends AntPlus.BikePowerListener { hidden enum { ITEM_POWER, ITEM_DISTANCE, ITEM_SPEED } hidden const INDICATOR_HEIGHT_DISTANCE = 130; hidden const INDICATOR_HEIGHT_POWER = 100; hidden const INDICATOR_HEIGHT_SPEED = 160; var items; //! Initializes class variables function initialize() { BikePowerListener.initialize(); items = [ new ListItem("power", INDICATOR_HEIGHT_POWER, Gfx.COLOR_PINK), new ListItem("distance", INDICATOR_HEIGHT_DISTANCE, Gfx.COLOR_BLUE), new ListItem("speed", INDICATOR_HEIGHT_SPEED, Gfx.COLOR_GREEN) ]; } //! Sets the isPowerUpdated boolean to true //! Allows view to know an update has been received //! Takes a data parameter which is the CalculatedPower object that has been //! modified function onCalculatedPowerUpdate(data) { items[ITEM_POWER].setValue(data.power); } //! Sets the isDistanceUpdated boolean to true //! Allows view to know an update has been received //! Takes a data parameter which is the CalculatedWheelDistance object that //! has been modified function onCalculatedWheelDistanceUpdate(data) { items[ITEM_DISTANCE].setValue(data.distance); } //! Sets the isSpeedUpdated boolean to true //! Allows view to know an update has been received //! Takes a data parameter which is the CalculatedWheelSpeed object that has //! been modified function onCalculatedSpeedUpdate(data) { items[ITEM_SPEED].setValue(data.wheelSpeed); } } Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onCalculatedCadenceUpdate (data as AntPlus.CalculatedCadence ) as Void Callback when calculated cadence is updated (max freq 1Hz). 
 onCalculatedPowerUpdate (data as AntPlus.CalculatedPower ) as Void Callback when calculated power is updated (max freq 1Hz). 
 onCalculatedWheelDistanceUpdate (data as AntPlus.CalculatedWheelDistance ) as Void Callback when calculated wheel distance is updated (max freq 1Hz). 
 onCalculatedWheelSpeedUpdate (data as AntPlus.CalculatedWheelSpeed ) as Void Callback when calculated wheel speed is updated (max freq 1Hz). 
 onPedalPowerBalanceUpdate (data as AntPlus.PedalPowerBalance ) as Void Callback when power balance is updated (max freq 1Hz). 
 onTorqueEffectivenessPedalSmoothnessUpdate (data as AntPlus.TorqueEffectivenessPedalSmoothness ) as Void Callback when torque effectiveness &amp; pedal smoothness are updated (max freq 1Hz). 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 onCalculatedCadenceUpdate(data as AntPlus.CalculatedCadence ) as Void 
 Callback when calculated cadence is updated (max freq 1Hz) Parameters: data — ( AntPlus.CalculatedCadence ) — Data with updated cadence information 
 
 Since: API Level 2.2.0 onCalculatedPowerUpdate(data as AntPlus.CalculatedPower ) as Void 
 Callback when calculated power is updated (max freq 1Hz) Parameters: data — ( AntPlus.CalculatedPower ) — Data with updated power information 
 
 Since: API Level 2.2.0 onCalculatedWheelDistanceUpdate(data as AntPlus.CalculatedWheelDistance ) as Void 
 Callback when calculated wheel distance is updated (max freq 1Hz) Parameters: data — ( AntPlus.CalculatedWheelDistance ) — Data with updated distance information 
 
 Since: API Level 2.2.0 onCalculatedWheelSpeedUpdate(data as AntPlus.CalculatedWheelSpeed ) as Void 
 Callback when calculated wheel speed is updated (max freq 1Hz) Parameters: data — ( AntPlus.CalculatedWheelSpeed ) — Data with updated speed information 
 
 Since: API Level 2.2.0 onPedalPowerBalanceUpdate(data as AntPlus.PedalPowerBalance ) as Void 
 Callback when power balance is updated (max freq 1Hz) Parameters: data — ( AntPlus.PedalPowerBalance ) — Data with updated balance information. 
 
 Since: API Level 2.2.0 onTorqueEffectivenessPedalSmoothnessUpdate(data as AntPlus.TorqueEffectivenessPedalSmoothness ) as Void 
 Callback when torque effectiveness &amp; pedal smoothness are updated (max freq 1Hz) Parameters: data — ( AntPlus.TorqueEffectivenessPedalSmoothness ) — Data with updated torque effectiveness &amp; pedal smoothness information 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeRadar (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeRadar.html)nClass: Toybox.AntPlus.BikeRadar
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.BikeRadar 
 
 show all Overview
 Represents a Bike Radar Device instance. Since: API Level 3.0.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getRadarInfo () as Lang.Array &lt; AntPlus.RadarTarget &gt; Retrieves information on the current list of tracked targets. 
 initialize (listener as AntPlus.BikeRadarListener or Null ) 
 
 Instance Method Details
 getRadarInfo() as Lang.Array &lt; AntPlus.RadarTarget &gt; 
 Retrieves information on the current list of tracked targets. Returns: Lang.Array — An Array of RadarTarget objects 
 
 Since: API Level 3.0.0 initialize(listener as AntPlus.BikeRadarListener or Null ) 
 Parameters: listener — ( AntPlus.BikeRadarListener ) — The bike radar instance optionally takes an extension of the BikeRadarListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the getRadarInfo method. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeRadarListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeRadarListener.html)nClass: Toybox.AntPlus.BikeRadarListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.BikeRadarListener 
 
 show all Overview
 Listener class for Bike Radar Since: API Level 3.0.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onBikeRadarUpdate (data as Lang.Array &lt; AntPlus.RadarTarget &gt;) as Void Callback when radar data is updated. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.0.0 onBikeRadarUpdate(data as Lang.Array &lt; AntPlus.RadarTarget &gt;) as Void 
 Callback when radar data is updated Parameters: data — ( Lang.Array ) — List of information for tracked targets (maximum of 8). 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeed (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeed.html)nClass: Toybox.AntPlus.BikeSpeed
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.BikeSpeed 
 
 show all Overview
 Represents a Bike Speed Device instance. Example: using Toybox.AntPlus; // Assuming Valid BikeSpeedListener object "MyBikeSpeedListener" // Initialize the AntPlus.BikeSpeedListener object listener = new MyBikeSpeedListener(); // Initialize the AntPlus.BikeSpeed object with a listener bikeSpeed = new AntPlus.BikeSpeed(listener); var speedInfo = bikeSpeed.getSpeedInfo(); // ...etc Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getSpeedInfo () as AntPlus.BikeSpeedInfo getSpeedInfo - Returns the most recent BikeSpeedInfo. 
 initialize (listener as AntPlus.BikeSpeedListener or Null ) Constructor. 
 
 Instance Method Details
 getSpeedInfo() as AntPlus.BikeSpeedInfo 
 getSpeedInfo - Returns the most recent BikeSpeedInfo Returns: AntPlus.BikeSpeedInfo — with current information. 
 
 Since: API Level 3.0.0 initialize(listener as AntPlus.BikeSpeedListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.BikeSpeedListener ) — The bike speed instance optionally takes an extension of the BikeSpeedListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the getSpeedInfo method. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeedCadence (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeedCadence.html)nClass: Toybox.AntPlus.BikeSpeedCadence
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.BikeSpeedCadence 
 
 show all Overview
 Represents a Bike Speed and Cadence Device instance. Example: using Toybox.AntPlus; // Assuming Valid BikeSpeedCadenceListener object "MyBikeSpeedCadenceListener" // Initialize the AntPlus.BikeSpeedCadenceListener object listener = new MyBikeSpeedCadenceListener(); // Initialize the AntPlus.BikeSpeedCadence object with a listener bikeSpeedCadence = new AntPlus.BikeSpeedCadence(listener); var speedCadenceInfo = bikeSpeedCadence.getSpeedCadenceInfo(); // ...etc Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getSpeedCadenceInfo () as AntPlus.BikeSpeedCadenceInfo getSpeedCadenceInfo - Returns the most recent BikeSpeedCadenceInfo. 
 initialize (listener as AntPlus.BikeSpeedCadenceListener or Null ) Constructor. 
 
 Instance Method Details
 getSpeedCadenceInfo() as AntPlus.BikeSpeedCadenceInfo 
 getSpeedCadenceInfo - Returns the most recent BikeSpeedCadenceInfo Returns: AntPlus.BikeSpeedCadenceInfo — with current information. 
 
 Since: API Level 3.0.0 initialize(listener as AntPlus.BikeSpeedCadenceListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.BikeSpeedCadenceListener ) — The bike speed cadence instance optionally takes an extension of the BikeSpeedCadenceListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the getSpeedCadenceInfo method. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeedCadenceInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeedCadenceInfo.html)nClass: Toybox.AntPlus.BikeSpeedCadenceInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.BikeSpeedCadenceInfo 
 
 show all Overview
 Represents received bike speed and cadence information. Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 cadence as Lang.Number Cadence (rpm). 
 distance as Lang.Float Distance (m). 
 speed as Lang.Float Speed (m/s). 
 
 Instance Attribute Details
 var cadence as Lang.Number 
 Cadence (rpm) Since: API Level 3.0.0 Returns: Lang.Number — 0 - 254 range, Toybox::AntPlus::INVALID_CADENCE if invalid 
 
 var distance as Lang.Float 
 Distance (m) Since: API Level 3.0.0 Returns: Lang.Float 
 
 var speed as Lang.Float 
 Speed (m/s) Since: API Level 3.0.0 Returns: Lang.Float — Toybox::AntPlus::INVALID_SPEED if invalid 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeedCadenceListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeedCadenceListener.html)nClass: Toybox.AntPlus.BikeSpeedCadenceListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.BikeSpeedCadenceListener 
 
 show all Overview
 Listener class for Bike Speed Cadence Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onBikeSpeedCadenceUpdate (data as AntPlus.BikeSpeedCadenceInfo ) as Void Callback when speed / cadence data is updated. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.0.0 onBikeSpeedCadenceUpdate(data as AntPlus.BikeSpeedCadenceInfo ) as Void 
 Callback when speed / cadence data is updated Parameters: data — ( AntPlus.BikeSpeedCadenceInfo ) — data Data with updated speed / cadence information. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeedInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeedInfo.html)nClass: Toybox.AntPlus.BikeSpeedInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.BikeSpeedInfo 
 
 show all Overview
 Represents received bike speed information. Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 distance as Lang.Float Distance (m). 
 speed as Lang.Float Speed (m/s). 
 
 Instance Attribute Details
 var distance as Lang.Float 
 Distance (m) Since: API Level 3.0.0 Returns: Lang.Float 
 
 var speed as Lang.Float 
 Speed (m/s) Since: API Level 3.0.0 Returns: Lang.Float — Toybox::AntPlus::INVALID_SPEED if invalid 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [BikeSpeedListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/BikeSpeedListener.html)nClass: Toybox.AntPlus.BikeSpeedListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.BikeSpeedListener 
 
 show all Overview
 Listener class for Bike Speed Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onBikeSpeedUpdate (data as AntPlus.BikeSpeedInfo ) as Void Callback when speed data is updated. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.0.0 onBikeSpeedUpdate(data as AntPlus.BikeSpeedInfo ) as Void 
 Callback when speed data is updated Parameters: data — ( AntPlus.BikeSpeedInfo ) — data Data with updated speed and distance information. 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [CalculatedCadence (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/CalculatedCadence.html)nClass: Toybox.AntPlus.CalculatedCadence
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.CalculatedCadence 
 
 show all Overview
 The calculated crank cadence. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 cadence as Lang.Number or Null Average crank cadence calculated from the sensor data in rounds per minute (rpm). 
 powerSensorType as AntPlus.BikePowerSensorType or Null The BIKE_POWER_SENSOR_TYPE_* value of the bike power sensor. 
 
 Instance Attribute Details
 var cadence as Lang.Number or Null 
 Average crank cadence calculated from the sensor data in rounds per minute (rpm). Since: API Level 2.2.0 Returns: Lang.Number 
 
 var powerSensorType as AntPlus.BikePowerSensorType or Null 
 The BIKE_POWER_SENSOR_TYPE_* value of the bike power sensor. Since: API Level 2.2.0 Returns: AntPlus.BikePowerSensorType 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [CalculatedPower (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/CalculatedPower.html)nClass: Toybox.AntPlus.CalculatedPower
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.CalculatedPower 
 
 show all Overview
 Represents the calculated power. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 power as Lang.Float or Null The average power calculated from the sensor data in watts (W). 
 powerSensorType as AntPlus.BikePowerSensorType or Null The BIKE_POWER_SENSOR_TYPE_* value of the bike power sensor. 
 
 Instance Attribute Details
 var power as Lang.Float or Null 
 The average power calculated from the sensor data in watts (W). Since: API Level 2.2.0 Returns: Lang.Float 
 
 var powerSensorType as AntPlus.BikePowerSensorType or Null 
 The BIKE_POWER_SENSOR_TYPE_* value of the bike power sensor. Since: API Level 2.2.0 Returns: AntPlus.BikePowerSensorType 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [CalculatedWheelDistance (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/CalculatedWheelDistance.html)nClass: Toybox.AntPlus.CalculatedWheelDistance
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.CalculatedWheelDistance 
 
 show all Overview
 The CalculatedWheelDistance object represents the accumulated distance. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 distance as Lang.Float or Null The accumulated distance calculated from sensor data in meters (m). 
 
 Instance Attribute Details
 var distance as Lang.Float or Null 
 The accumulated distance calculated from sensor data in meters (m). Since: API Level 2.2.0 Returns: Lang.Float 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [CalculatedWheelSpeed (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/CalculatedWheelSpeed.html)nClass: Toybox.AntPlus.CalculatedWheelSpeed
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.CalculatedWheelSpeed 
 
 show all Overview
 The CalculatedWheelSpeed object represents the average calculated speed. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 speed as Lang.Float or Null The average speed calculated from the sensor data in meters per second (m/s). 
 
 Instance Attribute Details
 var speed as Lang.Float or Null 
 The average speed calculated from the sensor data in meters per second (m/s). Since: API Level 2.2.0 Returns: Lang.Float 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [CommonData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/CommonData.html)nClass: Toybox.AntPlus.CommonData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.CommonData 
 
 show all Overview
 The CommonData object represents the information shared across all common data types. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Direct Known Subclasses
 AntPlus.BatteryStatus , AntPlus.BikeLight , AntPlus.ManufacturerInfo , AntPlus.ProductInfo Instance Member Summary collapse 
 identifier as Lang.Number or Null The Component Identifier. 
 numComponents as Lang.Number or Null Number of components in the system. 
 
 Instance Attribute Details
 var identifier as Lang.Number or Null 
 The Component Identifier. Component IDs are defined on a by-ANT+-profile basis. Since: API Level 2.2.0 Returns: Lang.Number — The identifier as a Number null if single-component 
 Light index for bike lights. 
 
 
 
 var numComponents as Lang.Number or Null 
 Number of components in the system. Since: API Level 2.2.0 Returns: Lang.Number — The number of components 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [DerailleurStatus (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/DerailleurStatus.html)nClass: Toybox.AntPlus.DerailleurStatus
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.DerailleurStatus 
 
 show all Overview
 Class that stores current status information about a connected derailleur Since: API Level 3.1.0 Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 gearIndex as Lang.Number Current gear index (for front derailleur 0 - 6, Toybox::AntPlus::FRONT_GEAR_INVALID = Unknown gear index / Error) (for rear derailleur 0 - 30, Toybox::AntPlus::REAR_GEAR_INVALID = Unknown gear index / Error). 
 gearMax as Lang.Number Number of gears installed (1 - 7, Toybox::AntPlus::MAX_GEARS_INVALID = Unknown gear count / Error) (1 - 31, Toybox::AntPlus::MAX_GEARS_INVALID = Unknown gear count / Error). 
 gearSize as Lang.Number Current gear size (number of teeth, 0 - 255). 
 invalidInboardShiftCount as Lang.Number Number of invalid inboard shifts (0 - 255). 
 invalidOutboardShiftCount as Lang.Number Number of invalid outboard shifts (0 - 255). 
 shiftFailureCount as Lang.Number Number of shift failures (0 - 255). 
 
 Instance Attribute Details
 var gearIndex as Lang.Number 
 Current gear index (for front derailleur 0 - 6, Toybox::AntPlus::FRONT_GEAR_INVALID = Unknown gear index / Error) (for rear derailleur 0 - 30, Toybox::AntPlus::REAR_GEAR_INVALID = Unknown gear index / Error) Since: API Level 3.1.0 Returns: Lang.Number 
 
 var gearMax as Lang.Number 
 Number of gears installed (1 - 7, Toybox::AntPlus::MAX_GEARS_INVALID = Unknown gear count / Error) (1 - 31, Toybox::AntPlus::MAX_GEARS_INVALID = Unknown gear count / Error) Since: API Level 3.1.0 Returns: Lang.Number 
 
 var gearSize as Lang.Number 
 Current gear size (number of teeth, 0 - 255) Since: API Level 3.1.0 Returns: Lang.Number 
 
 var invalidInboardShiftCount as Lang.Number 
 Number of invalid inboard shifts (0 - 255) Since: API Level 3.1.0 Returns: Lang.Number 
 
 var invalidOutboardShiftCount as Lang.Number 
 Number of invalid outboard shifts (0 - 255) Since: API Level 3.1.0 Returns: Lang.Number 
 
 var shiftFailureCount as Lang.Number 
 Number of shift failures (0 - 255) Since: API Level 3.1.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Device (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/Device.html)nClass: Toybox.AntPlus.Device
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 
 show all Overview
 The Device object represents an ANT+ Device instance. Since: API Level 2.2.0 Direct Known Subclasses
 AntPlus.BikeCadence , AntPlus.BikePower , AntPlus.BikeRadar , AntPlus.BikeSpeed , AntPlus.BikeSpeedCadence , AntPlus.FitnessEquipment , AntPlus.LightNetwork , AntPlus.RunningDynamics , AntPlus.Shifting Instance Method Summary collapse 
 getBatteryStatus (identifier as Lang.Number ) as AntPlus.BatteryStatus or Null Retrieve battery status for provided component identifier. 
 getComponentIdentifiers () as Lang.Array &lt; Lang.Number &gt; or Null Retrieve a list of known component identifiers for this Device. 
 getDeviceState () as AntPlus.DeviceState Retrieve the state of the device. 
 getManufacturerInfo (identifier as Lang.Number ) as AntPlus.ManufacturerInfo or Null Retrieve manufacturer information for provided component identifier. 
 getProductInfo (identifier as Lang.Number ) as AntPlus.ProductInfo or Null Retrieve product information for provided component identifier. 
 sendManufacturerMessage (message as Ant.Message ) as Void Send Manufacturer Message. 
 sendPageRequest (pageNumber as Lang.Number ) as Void Send Page request Request 2 broadcast pages from connected sensor. 
 
 Instance Method Details
 getBatteryStatus(identifier as Lang.Number ) as AntPlus.BatteryStatus or Null 
 Retrieve battery status for provided component identifier. Parameters: identifier — ( Lang.Number ) — The component identifier to retrieve battery status for null if single-component 
 Light index for bike lights. 
 
 
 
 Example: using Toybox.AntPlus; // Assumes valid component identifier enum value (for bike lights) // or null for a single component device var batteryStatus = AntPlus.getBatteryStatus(null); // Get the batteryStatus Enum value // for a single component system. if (batteryStatus == AntPlus.BATT_STATUS_OK) { System.println("Battery Status: Okay!"); } else { // display another battery status message } Returns: AntPlus.BatteryStatus — The current battery status for this identifier, or null if unknown identifier 
 
 Since: API Level 2.2.0 getComponentIdentifiers() as Lang.Array &lt; Lang.Number &gt; or Null 
 Retrieve a list of known component identifiers for this Device. This list may update over time as ANT+ devices with &gt;1 component periodically send information about each of their components. The device reports its total number of components in CommonData.numComponents . The returned Array will only contain entries for components that the ANT+ device has provided a component identifier for. Example: using Toybox.AntPlus; // Get the list of known components as an Array var componentList = AntPlus.getComponentIdentifiers(); Returns: Lang.Array — A list of known component identifiers null if there are no known component identifiers 
 
 
 
 Since: API Level 2.2.0 getDeviceState() as AntPlus.DeviceState 
 Retrieve the state of the device. Example: using Toybox.AntPlus; // Get the DEVICE_STATE_* enum value var deviceState = AntPlus.getDeviceState(null); Returns: AntPlus.DeviceState — The current device state 
 
 Since: API Level 2.2.0 getManufacturerInfo(identifier as Lang.Number ) as AntPlus.ManufacturerInfo or Null 
 Retrieve manufacturer information for provided component identifier. Parameters: identifier — ( Lang.Number ) — The component identifier to retrieve manufacturer information for null if single-component 
 Light index for bike lights 
 
 
 
 Example: using Toybox.AntPlus; // Get the ManufacturerInfo object var manufacturerInfo = AntPlus.getManufacturerInfo(null); Returns: AntPlus.ManufacturerInfo — The current manufacturer information for this identifier null if unknown identifier 
 
 
 
 Since: API Level 2.2.0 getProductInfo(identifier as Lang.Number ) as AntPlus.ProductInfo or Null 
 Retrieve product information for provided component identifier. Parameters: identifier — ( Lang.Number ) — The component identifier to retrieve product information for null if single-component 
 Light index for bike lights 
 
 
 
 Example: using Toybox.AntPlus; // Get the ProductInfo object var productInfo = AntPlus.getProductInfo(null); Returns: AntPlus.ProductInfo — The current product information for this identifier null if unknown identifier 
 
 
 
 Since: API Level 2.2.0 sendManufacturerMessage(message as Ant.Message ) as Void 
 Send Manufacturer Message Parameters: message — ( Ant.Message ) — The Ant message to send. Only exploration (0xE0-0xEF) and manufacturer specific (0xF0-0xFF) pages are allowed. It is recommended to contact the ANT+ group when exploration pages are used at thisisant.com. The onSentMessage() will be called to indicate sent manufacturer message status. 
 
 See Also: Toybox.Ant.Message 
 
 Since: API Level 3.1.0 Throws: ( AntPlus.AntPlusNotAllowedException ) — Thrown if the page number (byte 0) is outside the exploration and manufacturer page range. 
 
 sendPageRequest(pageNumber as Lang.Number ) as Void 
 Send Page request Request 2 broadcast pages from connected sensor. Use onMessage() to process requested page broadcasts from the sensor. Parameters: pageNumber — ( Lang.Number ) — The requested page number. Requesting the ANTFS page (0x43) isn't allowed. Page request can change the page rotation of the sensor so they will not be allowed to be sent too frequently. Sending page requests is limited to once every 2 seconds. 
 
 Since: API Level 3.1.0 Throws: ( AntPlus.AntPlusNotAllowedException ) — Thrown if the ANTFS page is requested, if pageNumber is outside the range 0-255, or if page requests are sent to frequently. 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [DeviceListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/DeviceListener.html)nClass: Toybox.AntPlus.DeviceListener
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 
 show all Overview
 Listener class for Device. Since: API Level 2.2.0 Direct Known Subclasses
 AntPlus.BikeCadenceListener , AntPlus.BikePowerListener , AntPlus.BikeRadarListener , AntPlus.BikeSpeedCadenceListener , AntPlus.BikeSpeedListener , AntPlus.FitnessEquipmentListener , AntPlus.LightNetworkListener , AntPlus.RunningDynamicsListener , AntPlus.ShiftingListener Instance Method Summary collapse 
 onBatteryStatusUpdate (data as AntPlus.BatteryStatus ) as Void Callback when battery status is received. 
 onDeviceStateUpdate (data as AntPlus.DeviceState ) as Void Callback when device state is updated. 
 onManufacturerInfoUpdate (data as AntPlus.ManufacturerInfo ) as Void Callback when manufacturer's information is received. 
 onMessage (msg as Ant.Message ) as Void Callback when ANT message is received. 
 onProductInfoUpdate (data as AntPlus.ProductInfo ) as Void Callback when product information is received. 
 onSentMessage (status as AntPlus.MessageSendStatus , sentMesgData as { :messageType as AntPlus.MessageType , :pageNumber as Lang.Number }) as Void After sending a manufacturer message or page request this will be called to indicate message sent status. 
 
 Instance Method Details
 onBatteryStatusUpdate(data as AntPlus.BatteryStatus ) as Void 
 Callback when battery status is received. Parameters: data — ( AntPlus.BatteryStatus ) — The data with battery status information 
 
 Since: API Level 2.2.0 onDeviceStateUpdate(data as AntPlus.DeviceState ) as Void 
 Callback when device state is updated. Parameters: data — ( AntPlus.DeviceState ) — The data with updated device state information. 
 
 Since: API Level 2.2.0 onManufacturerInfoUpdate(data as AntPlus.ManufacturerInfo ) as Void 
 Callback when manufacturer's information is received. Parameters: data — ( AntPlus.ManufacturerInfo ) — The data with manufacturer's information 
 
 Since: API Level 2.2.0 onMessage(msg as Ant.Message ) as Void 
 Callback when ANT message is received. Parameters: msg — ( Ant.Message ) — The ANT message 
 
 Since: API Level 3.1.0 onProductInfoUpdate(data as AntPlus.ProductInfo ) as Void 
 Callback when product information is received. Parameters: data — ( AntPlus.ProductInfo ) — The data with product information 
 
 Since: API Level 2.2.0 onSentMessage(status as AntPlus.MessageSendStatus , sentMesgData as { :messageType as AntPlus.MessageType , :pageNumber as Lang.Number }) as Void 
 After sending a manufacturer message or page request this will be called to indicate message sent status. Parameters: status — ( AntPlus.MessageSendStatus ) — The status of the sent message as a SENT_MESSAGE_* enum value 
 sentMesgData — ( Lang.Dictionary ) — The dictionary will have keys for message type and page number. The message type is a AntPlus.MESSAGE_TYPE_* . The page number is byte 0 of the manufacturer specific message or the requested page number. 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [DeviceState (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/DeviceState.html)nClass: Toybox.AntPlus.DeviceState
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.DeviceState 
 
 show all Overview
 The DeviceState object represents the state of the device. Fields may return null so you should null check values before using them. Example: using Toybox.AntPlus; // Assumes AntPlus.Device.getDeviceState(); already called var state = deviceState.state; var deviceNumber = deviceState.deviceNumber; System.println("Current device state is: " + state); System.println("Current device number is: " + deviceNumber); Since: API Level 2.2.0 Instance Member Summary collapse 
 deviceNumber as Lang.Number or Null The current Device ID being tracked/searched for. 
 state as AntPlus.DeviceCurrentState or Null The state of the device as an DEVICE_STATE_* value. 
 
 Instance Attribute Details
 var deviceNumber as Lang.Number or Null 
 The current Device ID being tracked/searched for. Since: API Level 2.2.0 Returns: Lang.Number — The device ID number or null if device state is DEVICE_STATE_DEAD 
 
 var state as AntPlus.DeviceCurrentState or Null 
 The state of the device as an DEVICE_STATE_* value. Since: API Level 2.2.0 Returns: AntPlus.DeviceCurrentState — The device state as DEVICE_STATE_* enum value 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [FitnessEquipment (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/FitnessEquipment.html)nClass: Toybox.AntPlus.FitnessEquipment
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.FitnessEquipment 
 
 show all Overview
 Represents a Fitness Equipment Device instance. Example: using Toybox.AntPlus; // Assuming Valid FitnessEquipmentListener object "MyFitnessEquipmentListener" // Initialize the AntPlus.FitnessEquipmentListener object listener = new MyFitnessEquipmentListener(); // Initialize the AntPlus.BikePower object with a listener fitnessEquipment = new AntPlus.FitnessEquipment(listener); fitnessEquipment.setTrainerMode(TRAINER_MODE_BASIC_RESISTANCE); fitnessEquipment.controlEquipment(TRAINER_RESISTANCE, 30); //sets basic resistance to 30% of maximum. // ...etc Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Method Summary collapse 
 controlEquipment (setting as AntPlus.TrainerValue , data as Lang.Float or AntPlus.TrainerMode ) as Void Control the fitness Equipment Note: Setting a value related to a specific training mode will cause the fitness equipment to change to that mode. 
 getEquipmentData () as AntPlus.FitnessEquipmentData Get the current training data from the FE. 
 getResistanceSettings () as AntPlus.ResistanceSettings Get the resistance percentage setting of the fitness equipment for basic resistance training mode. 
 getSimulationSettings () as AntPlus.SimulationSettings Get the wind and track resistance simulation settings. 
 getTargetPowerSettings () as AntPlus.TargetPowerSettings Get the target power setting of the fitness equipment for target power training mode. 
 getTrainerMode () as AntPlus.FitnessEquipmentMode Get the current training mode and supported modes of the fitness equipment. 
 getUserSettings () as AntPlus.UserSettings Get the user configuration settings of the fitness equipment for simulation training mode. 
 initialize (listener as AntPlus.FitnessEquipmentListener or Null ) Constructor. 
 setTrainerMode (mode as AntPlus.TrainerMode ) as Void Set the trainer mode. 
 
 Instance Method Details
 controlEquipment(setting as AntPlus.TrainerValue , data as Lang.Float or AntPlus.TrainerMode ) as Void 
 Control the fitness Equipment Note: Setting a value related to a specific training mode will cause the fitness equipment to change to that mode. For example, controlEquipment(TRAINER_TARGET_POWER, 100) will set the fitness equipment to target power mode with target power set to 100W if such mode is supported. Values out of range will be set to within the nearest range boundary value. Parameters: setting — ( Lang.Number ) — A TRAINER_* value. 
 data — ( Lang.Float ) — The value of the setting to be sent or TRAINER_MODE_* enum value if setting mode. 
 
 Since: API Level 2.4.0 getEquipmentData() as AntPlus.FitnessEquipmentData 
 Get the current training data from the FE Returns: AntPlus.FitnessEquipmentData — Fitness Equipment training data 
 
 Since: API Level 2.4.0 getResistanceSettings() as AntPlus.ResistanceSettings 
 Get the resistance percentage setting of the fitness equipment for basic resistance training mode. You should set resistance values and be in basic resistance training mode before calling this method, otherwise null or default values may be returned. Returns: AntPlus.ResistanceSettings — Fitness Equipment resistance Setting 
 
 Since: API Level 2.4.0 getSimulationSettings() as AntPlus.SimulationSettings 
 Get the wind and track resistance simulation settings. You should set wind and track settings, as well as be in simulation training mode before calling this method or null or default values may be returned. Returns: AntPlus.SimulationSettings — Fitness Equipment simulation settings 
 
 Since: API Level 2.4.0 getTargetPowerSettings() as AntPlus.TargetPowerSettings 
 Get the target power setting of the fitness equipment for target power training mode. You should set the target power and be in target power training mode before calling this method, otherwise null or default values may be returned. Returns: AntPlus.TargetPowerSettings — Fitness Equipment target power Setting 
 
 Since: API Level 2.4.0 getTrainerMode() as AntPlus.FitnessEquipmentMode 
 Get the current training mode and supported modes of the fitness equipment Returns: AntPlus.FitnessEquipmentMode — Fitness Equipment training mode 
 
 Since: API Level 2.4.0 getUserSettings() as AntPlus.UserSettings 
 Get the user configuration settings of the fitness equipment for simulation training mode. You should set user settings values and be in simulation mode before calling this method, otherwise null or default values may be returned. Returns: AntPlus.UserSettings — Fitness Equipment user profile settings 
 
 Since: API Level 2.4.0 initialize(listener as AntPlus.FitnessEquipmentListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.FitnessEquipmentListener ) — The fitness equipment instance optionally takes an extension of the FitnessEquipmentListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the get* methods. 
 
 Since: API Level 2.4.0 setTrainerMode(mode as AntPlus.TrainerMode ) as Void 
 Set the trainer mode. You should check the capable modes of the fitness equipment, as the command will be ignored by the fitness equipment if the mode is not supported. Parameters: mode — ( Lang.Number ) — The TRAINER_MODE_* enum value 
 
 Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:42 AM


# [FitnessEquipmentData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/FitnessEquipmentData.html)nClass: Toybox.AntPlus.FitnessEquipmentData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.FitnessEquipmentData 
 
 show all Overview
 Represents general fitness equipment transmitted data. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 feDistance as Lang.Float or Null The elapsed distance calculated by the trainer since reset Range is always greater than or equal to 0m. 
 feHeartRate as Lang.Float or Null The heart rate calculated by the trainer. 
 feSpeed as Lang.Float or Null The speed calculated by the trainer. 
 
 Instance Attribute Details
 var feDistance as Lang.Float or Null 
 The elapsed distance calculated by the trainer since reset Range is always greater than or equal to 0m Since: API Level 2.4.0 Returns: Lang.Float — 0-0xFFFFFFFF, units in meters 
 
 var feHeartRate as Lang.Float or Null 
 The heart rate calculated by the trainer. This may come from hand sensors, or an HRM if connected to the equipment Since: API Level 2.4.0 Returns: Lang.Number — 0-254 bpm, invalid 0xFF 
 
 var feSpeed as Lang.Float or Null 
 The speed calculated by the trainer Since: API Level 2.4.0 Returns: Lang.Float — 0-65.534m/s range, invalid 0xFFFF 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [FitnessEquipmentListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/FitnessEquipmentListener.html)nClass: Toybox.AntPlus.FitnessEquipmentListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.FitnessEquipmentListener 
 
 show all Overview
 Listener class for Fitness Equipment Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onFitnessEquipmentUpdate (data as AntPlus.FitnessEquipmentData ) as Void Callback when fitness equipment data is updated. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.4.0 onFitnessEquipmentUpdate(data as AntPlus.FitnessEquipmentData ) as Void 
 Callback when fitness equipment data is updated Parameters: data — ( AntPlus.FitnessEquipmentData ) — Data with updated information 
 
 Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:42 AM


# [FitnessEquipmentMode (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/FitnessEquipmentMode.html)nClass: Toybox.AntPlus.FitnessEquipmentMode
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.FitnessEquipmentMode 
 
 show all Overview
 Represents a fitness equipment training mode Fields may return null so you should null check values before using them. Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.FitnessEquipment.getTrainerMode(); already called var mode = FitnessEquipmentMode.mode; System.println("Current training mode is: " + mode); Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 basicResistanceSupported as Lang.Boolean or Null Flag for basic resistance training mode support. 
 mode as AntPlus.TrainerMode or Null The current training mode of the fitness equipment. 
 simulationSupported as Lang.Boolean or Null Flag for simulation training mode support. 
 targetPowerSupported as Lang.Boolean or Null Flag for target power training mode support. 
 
 Instance Attribute Details
 var basicResistanceSupported as Lang.Boolean or Null 
 Flag for basic resistance training mode support Since: API Level 2.4.0 Returns: Lang.Boolean — true if basic resistance is supported, false otherwise 
 
 var mode as AntPlus.TrainerMode or Null 
 The current training mode of the fitness equipment Since: API Level 2.4.0 Returns: Lang.Number — The TRAINER_MODE_* enum value 
 
 var simulationSupported as Lang.Boolean or Null 
 Flag for simulation training mode support Since: API Level 2.4.0 Returns: Lang.Boolean — true if simulation is supported, false otherwise 
 
 var targetPowerSupported as Lang.Boolean or Null 
 Flag for target power training mode support Since: API Level 2.4.0 Returns: Lang.Boolean — true if target power is supported, false otherwise 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [LightNetwork (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/LightNetwork.html)nClass: Toybox.AntPlus.LightNetwork
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.LightNetwork 
 
 show all Overview
 A class representing a network of bike lights Example: A basic example of LightNetwork and LightNetworkListener setup using Toybox.AntPlus; class MyLightNetworkListener extends AntPlus.LightNetworkListener { var mNetworkState = 0; function onLightNetworkStateUpdate(data) { mNetworkState = data; } } // In app class… function initialize() { mLightNetworkListener = new MyLightNetworkListener(); mLightNetwork = new AntPlus.LightNetwork(mLightNetworkListener); } function onUpdate(dc) { // Call parent's onUpdate(dc) to redraw the layout View.onUpdate(dc); if (null != mLightNetworkListener.mNetworkState) { dc.drawText( 10, 10, Gfx.FONT_TINY, mLightNetworkListener.mNetworkState.toString(), Gfx.TEXT_JUSTIFY_LEFT); } if (mode &lt; 15) { mode++; } else { mode = 0; } mLightNetwork.setHeadlightsMode(mode); } Since: API Level 2.2.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Method Summary collapse 
 getBikeLights () as Lang.Array &lt; AntPlus.LightNetworkState &gt; or Null Get a list of lights in the network. 
 getNetworkMode () as AntPlus.LightNetworkMode Get the light network mode. 
 getNetworkState () as AntPlus.LightNetworkState Get the light network state. 
 initialize (listener as AntPlus.LightNetworkListener or Null ) Constructor. 
 restoreHeadlightsNetworkModeControl () as Void Bring all headlights under the control of whichever light network mode has been chosen by the user. 
 restoreTaillightsNetworkModeControl () as Void Bring all taillights under the control of whichever light network mode has been chosen by the user. 
 setHeadlightsMode (mode as AntPlus.LightMode ) as Void Tell all headlights to enter the same mode. 
 setTaillightsMode (mode as AntPlus.LightMode ) as Void Tell all taillights to enter the same mode. 
 toggleSignalLight (left as Lang.Boolean ) as Void A signal switch for right and left signals. 
 
 Instance Method Details
 getBikeLights() as Lang.Array &lt; AntPlus.LightNetworkState &gt; or Null 
 Get a list of lights in the network. Returns: Lang.Array — List of lights that are part of the network, null if light network state is not LIGHT_NETWORK_STATE_FORMED 
 
 Since: API Level 2.2.0 getNetworkMode() as AntPlus.LightNetworkMode 
 Get the light network mode. Returns: AntPlus.LightNetworkMode — The LIGHT_NETWORK_MODE_* enum value 
 
 Since: API Level 2.2.0 getNetworkState() as AntPlus.LightNetworkState 
 Get the light network state. Returns: AntPlus.LightNetworkState — The LIGHT_NETWORK_STATE_* enum value 
 
 Since: API Level 2.2.0 initialize(listener as AntPlus.LightNetworkListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.LightNetworkListener ) — The light network instance optionally takes an extension of the LightNetworkListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the get* methods. 
 
 Since: API Level 2.2.0 restoreHeadlightsNetworkModeControl() as Void 
 Bring all headlights under the control of whichever light network mode has been chosen by the user. Since: API Level 2.2.0 restoreTaillightsNetworkModeControl() as Void 
 Bring all taillights under the control of whichever light network mode has been chosen by the user. Since: API Level 2.2.0 setHeadlightsMode(mode as AntPlus.LightMode ) as Void 
 Tell all headlights to enter the same mode. You should check the capable modes of each headlight in the network before sending light modes, as lights will ignore commands to go into modes that they do not support. Lights whose modes are set here will not be controlled by the Light Network Mode until they are restored OR until the user changes the Light Network Mode outside of ConnectIQ. Parameters: mode — ( AntPlus.LightMode ) — The LIGHT_MODE_* enum value 
 
 Since: API Level 2.2.0 setTaillightsMode(mode as AntPlus.LightMode ) as Void 
 Tell all taillights to enter the same mode. You should check the capable modes of each taillight in the network before sending light modes, as lights will ignore commands to go into modes that they do not support. Lights whose modes are set here will not be controlled by the Light Network Mode until they are restored OR until the user changes the Light Network Mode outside of ConnectIQ. Parameters: mode — ( AntPlus.LightMode ) — The LIGHT_MODE* enum value 
 
 Since: API Level 2.2.0 toggleSignalLight(left as Lang.Boolean ) as Void 
 A signal switch for right and left signals. If signal light is engaged, disengage it. 
 If signal light is disengaged, engage it. 
 
 *This will automatically disengage the opposite signal if it is currently engaged. Parameters: left — ( Lang.Boolean ) — true to control left signal 
 false to control right signal 
 
 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [LightNetworkListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/LightNetworkListener.html)nClass: Toybox.AntPlus.LightNetworkListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.LightNetworkListener 
 
 show all Overview
 Listener class for use with LightNetwork. Example: using Toybox.WatchUi; using Toybox.AntPlus; var isNetworkNewlyFormed; var networkState; // Initializes class variables function initialize() { LightNetworkListener.initialize(); isNetworkNewlyFormed = false; } // Checks if the new state of the network is LIGHT_NETWORK_STATE_FORMED // If true: Sets isNetworkNewlyFormed to true and requests a Ui Update // Updates the networkState // The data parameter is the network state as a number function onLightNetworkStateUpdate(data) { networkState = data; if (AntPlus.LIGHT_NETWORK_STATE_FORMED == data) { isNetworkNewlyFormed = true; WatchUi.requestUpdate(); } } function onBikeLightUpdate(data) { WatchUi.requestUpdate(); } Since: API Level 2.2.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onBikeLightUpdate (data as AntPlus.BikeLight ) as Void Callback when a bike light's data is updated (max freq. 
 onLightNetworkStateUpdate (data as AntPlus.LightNetworkState ) as Void Callback when the light network state changes. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 onBikeLightUpdate(data as AntPlus.BikeLight ) as Void 
 Callback when a bike light's data is updated (max freq. 1Hz) Parameters: data — ( AntPlus.BikeLight ) — The updated light information 
 
 Since: API Level 2.2.0 onLightNetworkStateUpdate(data as AntPlus.LightNetworkState ) as Void 
 Callback when the light network state changes Parameters: data — ( Lang.Number ) — LIGHT_NETWORK_STATE_* enum value 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [ManufacturerInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/ManufacturerInfo.html)nClass: Toybox.AntPlus.ManufacturerInfo
 Inherits: Toybox.AntPlus.CommonData Toybox.Lang.Object 
 Toybox.AntPlus.CommonData 
 Toybox.AntPlus.ManufacturerInfo 
 
 show all Overview
 A class containing information from the Manufacturer's Information ANT+ common page. Fields may return null so you should null check values before using them. Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.Device.getManufacturerInfo(); already called var hwRevision = ManufacturerInfo.hwRevision; var manufacturerId = ManufacturerInfo.manufacturerId; var modelNumber = ManufacturerInfo.modelNumber; System.println("Current hwRevision is: " + hwRevision); System.println("Current manufacturerId is: " + manufacturerId); System.println("Current modelNumber is: " + modelNumber); Since: API Level 2.2.0 Instance Member Summary collapse 
 hwRevision as Lang.Number or Null The Hardware revision. 
 manufacturerId as Lang.Number or Null The Manufacturer ID. 
 modelNumber as Lang.Number or Null The Model number. 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var hwRevision as Lang.Number or Null 
 The Hardware revision. Since: API Level 2.2.0 Returns: Lang.Number — The manufacturer hardware revision 
 
 var manufacturerId as Lang.Number or Null 
 The Manufacturer ID. Since: API Level 2.2.0 Returns: Lang.Number — The manufacturer ID 
 
 var modelNumber as Lang.Number or Null 
 The Model number. Since: API Level 2.2.0 Returns: Lang.Number — The manufacturer model number 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [PedalPowerBalance (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/PedalPowerBalance.html)nClass: Toybox.AntPlus.PedalPowerBalance
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.PedalPowerBalance 
 
 show all Overview
 The PedalPowerBalance object represents the user's power contribution between the left and right pedals. Fields may return null so you should null check values before using them. Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getPedalPowerBalance(); already called var pedalPowerPercent = PedalPowerBalance.pedalPowerPercent; var rightPedalIndicator = PedalPowerBalance.rightPedalIndicator; System.println("Current pedalPowerPercent is: " + pedalPowerPercent); System.println("rightPedalIndicator is set to: " + rightPedalIndicator); Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 pedalPowerPercent as Lang.Number or Null Pedal power percent (%). 
 rightPedalIndicator as Lang.Boolean or Null Indicates the pedal contribution. 
 
 Instance Attribute Details
 var pedalPowerPercent as Lang.Number or Null 
 Pedal power percent (%) Since: API Level 2.2.0 Returns: Lang.Number 
 
 var rightPedalIndicator as Lang.Boolean or Null 
 Indicates the pedal contribution. Since: API Level 2.2.0 Returns: Lang.Boolean — true if right pedal contribution 
 false if unknown pedal contribution 
 
 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ProductInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/ProductInfo.html)nClass: Toybox.AntPlus.ProductInfo
 Inherits: Toybox.AntPlus.CommonData Toybox.Lang.Object 
 Toybox.AntPlus.CommonData 
 Toybox.AntPlus.ProductInfo 
 
 show all Overview
 Class containing information from the Product Information ANT+ common page. Fields may return null so you should null check values before using them. Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.Device.getProductInfo(); already called var serial = ProductInfo.serial; var swRevisionMain = ProductInfo.swRevisionMain; var swRevisionSupplemental = ProductInfo.swRevisionSupplemental; System.println("Current serial is: " + serial); System.println("Current swRevisionMain is: " + swRevisionMain); System.println("Current swRevisionSupplemental is: " + swRevisionSupplemental); Since: API Level 2.2.0 Instance Member Summary collapse 
 serial as Lang.Number or Null The serial number. 
 swRevisionMain as Lang.Number or Null The main software revision. 
 swRevisionSupplemental as Lang.Number or Null The supplemental software revision. 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var serial as Lang.Number or Null 
 The serial number. Since: API Level 2.2.0 Returns: Lang.Number — The product serial number 
 
 var swRevisionMain as Lang.Number or Null 
 The main software revision. Since: API Level 2.2.0 Returns: Lang.Number — The main software revision of the product 
 
 var swRevisionSupplemental as Lang.Number or Null 
 The supplemental software revision. Since: API Level 2.2.0 Returns: Lang.Number — The supplemental software revision of the product 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:42 AM


# [RadarTarget (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/RadarTarget.html)nClass: Toybox.AntPlus.RadarTarget
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.RadarTarget 
 
 show all Overview
 Represents the radar data for a tracked radar target. Since: API Level 3.0.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 range as Lang.Float Indicates the distance to the target in metres (m). 
 speed as Lang.Float Indicates the speed of the target relative to the user in metres per second (m/s). 
 threat as AntPlus.ThreatLevel The THREAT_LEVEL_* threat value. 
 threatSide as AntPlus.ThreatSide The THREAT_SIDE_* threat position. 
 
 Instance Attribute Details
 var range as Lang.Float 
 Indicates the distance to the target in metres (m). Since: API Level 3.0.0 Returns: Lang.Float 
 
 var speed as Lang.Float 
 Indicates the speed of the target relative to the user in metres per second (m/s). Since: API Level 3.0.0 Returns: Lang.Float 
 
 var threat as AntPlus.ThreatLevel 
 The THREAT_LEVEL_* threat value. Since: API Level 3.0.0 Returns: AntPlus.ThreatLevel 
 
 var threatSide as AntPlus.ThreatSide 
 The THREAT_SIDE_* threat position. Since: API Level 3.0.0 Returns: AntPlus.ThreatSide 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ResistanceSettings (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/ResistanceSettings.html)nClass: Toybox.AntPlus.ResistanceSettings
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.ResistanceSettings 
 
 show all Overview
 Represents the basic resistance percentage set on fitness equipment when the equipment is in basic resistance training mode. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 basicResistance as Lang.Float or Null The resistance percentage of the fitness equipment. 
 
 Instance Attribute Details
 var basicResistance as Lang.Float or Null 
 The resistance percentage of the fitness equipment. Since: API Level 2.4.0 Returns: Lang.Float — 0-100% of maximum resistance. 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [RunningDynamics (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/RunningDynamics.html)nClass: Toybox.AntPlus.RunningDynamics
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.RunningDynamics 
 
 show all Overview
 Represents a Running Dynamics Device instance. Since: API Level 2.4.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 getRunningDynamics () as AntPlus.RunningDynamicsData Use getRunningDynamics() to get the most current running dynamics. 
 getSensorPosition () as AntPlus.SensorPosition Use getSensorPosition() to retrieve the position of the sensor on the body. 
 initialize (listener as AntPlus.RunningDynamicsListener or Null ) Constructor. 
 
 Instance Method Details
 getRunningDynamics() as AntPlus.RunningDynamicsData 
 Use getRunningDynamics() to get the most current running dynamics. Returns: AntPlus.RunningDynamicsData — Current running dynamics data 
 
 Since: API Level 2.4.0 getSensorPosition() as AntPlus.SensorPosition 
 Use getSensorPosition() to retrieve the position of the sensor on the body Returns: AntPlus.SensorPosition — Current sensor position 
 
 Since: API Level 2.4.0 initialize(listener as AntPlus.RunningDynamicsListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.RunningDynamicsListener ) — The running dynamics instance optionally takes an extension of the RunningDynamicsListener class as a parameter. null can be passed in instead if the user plans to only poll for data using the get* methods. 
 
 Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:42 AM


# [RunningDynamicsData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/RunningDynamicsData.html)nClass: Toybox.AntPlus.RunningDynamicsData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.RunningDynamicsData 
 
 show all Overview
 All running dynamics information. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 cadence as Lang.Number or Null Filtered instantaneous cadence (0 - 255 strides/min). 
 groundContactBalance as Lang.Float or Null Filtered instantaneous ground contact balance (0 - 100%, 0.03125% precision). 
 groundContactTime as Lang.Number or Null Filtered instantaneous ground contact time (0 - 2047 ms). 
 stanceTime as Lang.Float or Null Filtered instantaneous stance time percentage (0 - 100%, 0.25% precision). 
 stepCount as Lang.Number or Null Step count (rolls over!) (0 - 127 steps). 
 stepLength as Lang.Number or Null Step Length (0 - 8191 mm). 
 verticalOscillation as Lang.Float or Null Filtered instantaneous vertical oscillation (0 - 2047 mm, 0.25mm precision). 
 verticalRatio as Lang.Float or Null Vertical ratio (0 - 100%, 0.03125% precision). 
 walkingFlag as Lang.Boolean or Null true if walking, false if running. 
 
 Instance Attribute Details
 var cadence as Lang.Number or Null 
 Filtered instantaneous cadence (0 - 255 strides/min) Since: API Level 2.4.0 Returns: Lang.Number 
 
 var groundContactBalance as Lang.Float or Null 
 Filtered instantaneous ground contact balance (0 - 100%, 0.03125% precision) Since: API Level 2.4.0 Returns: Lang.Float 
 
 var groundContactTime as Lang.Number or Null 
 Filtered instantaneous ground contact time (0 - 2047 ms) Since: API Level 2.4.0 Returns: Lang.Number 
 
 var stanceTime as Lang.Float or Null 
 Filtered instantaneous stance time percentage (0 - 100%, 0.25% precision) Since: API Level 2.4.0 Returns: Lang.Float 
 
 var stepCount as Lang.Number or Null 
 Step count (rolls over!) (0 - 127 steps) Since: API Level 2.4.0 Returns: Lang.Number 
 
 var stepLength as Lang.Number or Null 
 Step Length (0 - 8191 mm) Since: API Level 2.4.0 Returns: Lang.Number 
 
 var verticalOscillation as Lang.Float or Null 
 Filtered instantaneous vertical oscillation (0 - 2047 mm, 0.25mm precision) Since: API Level 2.4.0 Returns: Lang.Float 
 
 var verticalRatio as Lang.Float or Null 
 Vertical ratio (0 - 100%, 0.03125% precision) Since: API Level 2.4.0 Returns: Lang.Float 
 
 var walkingFlag as Lang.Boolean or Null 
 true if walking, false if running Since: API Level 2.4.0 Returns: Lang.Boolean 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [RunningDynamicsListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/RunningDynamicsListener.html)nClass: Toybox.AntPlus.RunningDynamicsListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.RunningDynamicsListener 
 
 show all Overview
 Listener class for Running Dynamics. Since: API Level 2.4.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onRunningDynamicsUpdate (data as AntPlus.RunningDynamicsData ) as Void Callback when running dynamics are updated (max freq 1Hz). 
 onSensorPositionUpdate (data as AntPlus.SensorPosition ) as Void Callback when sensor position is updated (max freq 1Hz). 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.4.0 onRunningDynamicsUpdate(data as AntPlus.RunningDynamicsData ) as Void 
 Callback when running dynamics are updated (max freq 1Hz) Parameters: data — ( AntPlus.RunningDynamicsData ) — Data with updated running dynamics information. 
 
 Since: API Level 2.4.0 onSensorPositionUpdate(data as AntPlus.SensorPosition ) as Void 
 Callback when sensor position is updated (max freq 1Hz) Parameters: data — ( AntPlus.SensorPosition ) — Data with updated sensor position information. 
 
 Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:42 AM


# [SensorPosition (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/SensorPosition.html)nClass: Toybox.AntPlus.SensorPosition
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.SensorPosition 
 
 show all Overview
 Information about the position of the sensor on the body. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 bodyLocation as AntPlus.BodyLocation or Null AntPlus.BODY_LOCATION_* . 
 orientation as AntPlus.SensorOrientation or Null AntPlus.SENSOR_ORIENTATION_* . 
 
 Instance Attribute Details
 var bodyLocation as AntPlus.BodyLocation or Null 
 AntPlus.BODY_LOCATION_* Since: API Level 2.4.0 Returns: AntPlus.BodyLocation 
 
 var orientation as AntPlus.SensorOrientation or Null 
 AntPlus.SENSOR_ORIENTATION_* Since: API Level 2.4.0 Returns: AntPlus.SensorOrientation 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Shifting (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/Shifting.html)nClass: Toybox.AntPlus.Shifting
 Inherits: Toybox.AntPlus.Device Toybox.Lang.Object 
 Toybox.AntPlus.Device 
 Toybox.AntPlus.Shifting 
 
 show all Overview
 Represents a shifting device instance Since: API Level 3.1.0 Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 getShiftingStatus () as AntPlus.ShiftingStatus Get current shifting system status Will not provide status for Shimano shifting systems. 
 initialize (listener as AntPlus.ShiftingListener or Null ) Constructor. 
 
 Instance Method Details
 getShiftingStatus() as AntPlus.ShiftingStatus 
 Get current shifting system status Will not provide status for Shimano shifting systems. Returns: AntPlus.ShiftingStatus — Current shifting system status 
 
 Since: API Level 3.1.0 initialize(listener as AntPlus.ShiftingListener or Null ) 
 Constructor Parameters: listener — ( AntPlus.ShiftingListener ) — An extension of the ShiftingListener class. 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [ShiftingListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/ShiftingListener.html)nClass: Toybox.AntPlus.ShiftingListener
 Inherits: Toybox.AntPlus.DeviceListener Toybox.Lang.Object 
 Toybox.AntPlus.DeviceListener 
 Toybox.AntPlus.ShiftingListener 
 
 show all Overview
 Listener class for shifting Since: API Level 3.1.0 Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onShiftingUpdate (data as AntPlus.ShiftingStatus ) as Void Callback when shifting system status is changed. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.1.0 onShiftingUpdate(data as AntPlus.ShiftingStatus ) as Void 
 Callback when shifting system status is changed Parameters: data — ( AntPlus.ShiftingStatus ) 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [ShiftingStatus (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/ShiftingStatus.html)nClass: Toybox.AntPlus.ShiftingStatus
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.ShiftingStatus 
 
 show all Overview
 Includes the shifting system status. Fields may return null if there is no valid information so you should null check before using them. Since: API Level 3.1.0 Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 frontDerailleur as AntPlus.DerailleurStatus or Null Front derailleur status. 
 rearDerailleur as AntPlus.DerailleurStatus or Null Rear derailleur status. 
 
 Instance Attribute Details
 var frontDerailleur as AntPlus.DerailleurStatus or Null 
 Front derailleur status Since: API Level 3.1.0 Returns: AntPlus.DerailleurStatus 
 
 var rearDerailleur as AntPlus.DerailleurStatus or Null 
 Rear derailleur status Since: API Level 3.1.0 Returns: AntPlus.DerailleurStatus 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [SimulationSettings (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/SimulationSettings.html)nClass: Toybox.AntPlus.SimulationSettings
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.SimulationSettings 
 
 show all Overview
 Represents the wind and track simulation training mode settings on the fitness equipment. Fields may return null so you should null check values before using them. Values that have not yet been set will return invalid. Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 draftFactor as Lang.Float or Null The simulated draft factor setting for simulation mode A draft factor of 0 removes all wind resistance, and 1.0 indicates no drafting effects. 
 slope as Lang.Float or Null The slope (grade) setting of the simulated track. 
 surfaceResistance as Lang.Float or Null The simulated surface resistance coefficient for simulation mode. 
 windResistance as Lang.Float or Null The simulated wind resistance coefficient setting for simulation mode Wind Resistance Coefficient [kg/m] = Frontal Surface Area [m2] x Drag Coefficient x Air Density [kg/m3]. 
 windSpeed as Lang.Float or Null The simulated wind speed setting for simulation mode. 
 
 Instance Attribute Details
 var draftFactor as Lang.Float or Null 
 The simulated draft factor setting for simulation mode A draft factor of 0 removes all wind resistance, and 1.0 indicates no drafting effects. Since: API Level 2.4.0 Returns: Lang.Float — 0 - 1.0 range, invalid = 0xFF 
 
 var slope as Lang.Float or Null 
 The slope (grade) setting of the simulated track Since: API Level 2.4.0 Returns: Lang.Float — -200% - +200% range, invalid 0xFFFF 
 
 var surfaceResistance as Lang.Float or Null 
 The simulated surface resistance coefficient for simulation mode. Dimensionless factor to quantify rolling resistance based on friction between bicycle tires and the tracker surface. Rolling Resistance [N] = (Bicycle Mass + Cyclist Mass) x Coefficient of Rolling Resistance x 9.8 Sample coefficients: Wooden track = 0.001 Smooth Concrete = 0.002 Asphalt Road = 0.004 Rough Road = 0.008 Since: API Level 2.4.0 Returns: Lang.Float — 0 - 0.0127 range, invalid = 0xFF 
 
 var windResistance as Lang.Float or Null 
 The simulated wind resistance coefficient setting for simulation mode Wind Resistance Coefficient [kg/m] = Frontal Surface Area [m2] x Drag Coefficient x Air Density [kg/m3] Since: API Level 2.4.0 Returns: Lang.Float — 0.0 - 1.86 kg/m range, invalid = 0xFF 
 
 var windSpeed as Lang.Float or Null 
 The simulated wind speed setting for simulation mode Since: API Level 2.4.0 Returns: Lang.Float — -127 - +127 km/hr range, invalid = 0xFF 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [TargetPowerSettings (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/TargetPowerSettings.html)nClass: Toybox.AntPlus.TargetPowerSettings
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.TargetPowerSettings 
 
 show all Overview
 Represents the target power set on fitness equipment when the equipment is in target power training mode. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 targetPower as Lang.Float or Null The target power set for the Fitness Equipment. 
 
 Instance Attribute Details
 var targetPower as Lang.Float or Null 
 The target power set for the Fitness Equipment Since: API Level 2.4.0 Returns: Lang.Float — 0-4000W 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [TorqueEffectivenessPedalSmoothness (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/TorqueEffectivenessPedalSmoothness.html)nClass: Toybox.AntPlus.TorqueEffectivenessPedalSmoothness
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.TorqueEffectivenessPedalSmoothness 
 
 show all Overview
 The TorqueEffectivenessPedalSmoothness object represents the instantaneous torque effectiveness and pedal smoothness. Fields may return null so you should null check values before using them. Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 
 Instance Member Summary collapse 
 leftOrCombinedPedalSmoothness as Lang.Float or Null Left pedal smoothness if separate is supported, else it is the combined smoothness (%). 
 leftTorqueEffectiveness as Lang.Float or Null Left torque effectiveness. 
 rightPedalSmoothness as Lang.Float or Null Right pedal smoothness (%). 
 rightTorqueEffectiveness as Lang.Float or Null Right torque effectiveness. 
 separatePedalSmoothnessSupport as Lang.Boolean or Null Define if pedal smoothness is separate. 
 
 Instance Attribute Details
 var leftOrCombinedPedalSmoothness as Lang.Float or Null 
 Left pedal smoothness if separate is supported, else it is the combined smoothness (%). Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getTorqueEffectivenessPedalSmoothness(); already called var leftOrCombinedPedalSmoothness= TorqueEffectivenessPedalSmoothness.leftOrCombinedPedalSmoothness; System.println("leftOrCombinedPedalSmoothness is set to: " + leftOrCombinedPedalSmoothness); Since: API Level 2.2.0 Returns: Lang.Float 
 
 var leftTorqueEffectiveness as Lang.Float or Null 
 Left torque effectiveness. 0xFF: Invalid or negative values (%). Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getTorqueEffectivenessPedalSmoothness(); already called var leftTorqueEffectiveness = TorqueEffectivenessPedalSmoothness.leftTorqueEffectiveness; System.println("leftTorqueEffectiveness is: " + leftTorqueEffectiveness); Since: API Level 2.2.0 Returns: Lang.Float 
 
 var rightPedalSmoothness as Lang.Float or Null 
 Right pedal smoothness (%). Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getTorqueEffectivenessPedalSmoothness(); already called var rightPedalSmoothness = TorqueEffectivenessPedalSmoothness.rightPedalSmoothness; System.println("rightPedalSmoothness is: " + rightPedalSmoothness); Since: API Level 2.2.0 Returns: Lang.Float 
 
 var rightTorqueEffectiveness as Lang.Float or Null 
 Right torque effectiveness. 0xFF: Invalid or negative values (%). Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getTorqueEffectivenessPedalSmoothness(); already called var rightTorqueEffectiveness= TorqueEffectivenessPedalSmoothness.rightTorqueEffectiveness; System.println("rightTorqueEffectiveness is set to: " + rightTorqueEffectiveness); Since: API Level 2.2.0 Returns: Lang.Float 
 
 var separatePedalSmoothnessSupport as Lang.Boolean or Null 
 Define if pedal smoothness is separate. Example: using Toybox.AntPlus; using Toybox.System; // Assumes AntPlus.BikePower.getTorqueEffectivenessPedalSmoothness(); already called var separatePedalSmoothnessSupport = TorqueEffectivenessPedalSmoothness.separatePedalSmoothnessSupport; System.println("separatePedalSmoothnessSupport is: " + separatePedalSmoothnessSupport); Since: API Level 2.2.0 Returns: Lang.Boolean — true if pedal smoothness is separate 
 false if combined 
 
 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [UserSettings (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/AntPlus/UserSettings.html)nClass: Toybox.AntPlus.UserSettings
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.AntPlus.UserSettings 
 
 show all Overview
 Represents user configurations of fitness equipment for equipment that supports simulation training mode. Fields may return null so you should null check values before using them. Since: API Level 2.4.0 Supported Devices: [ View devices ] Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Instance Member Summary collapse 
 bikeWeight as Lang.Float or Null The bike weight set for simulation training mode. 
 gearRatio as Lang.Float or Null The gear ratio set for simulation training mode. 
 userWeight as Lang.Float or Null The user weight set for simulation training mode. 
 wheelDiameter as Lang.Float or Null The wheel diameter set for simulation training mode. 
 
 Instance Attribute Details
 var bikeWeight as Lang.Float or Null 
 The bike weight set for simulation training mode Since: API Level 2.4.0 Returns: Lang.Float — 0-50kg range 
 
 var gearRatio as Lang.Float or Null 
 The gear ratio set for simulation training mode Since: API Level 2.4.0 Returns: Lang.Float — 0.03-7.65 range 
 
 var userWeight as Lang.Float or Null 
 The user weight set for simulation training mode Since: API Level 2.4.0 Returns: Lang.Float — 0-655.34 kg range 
 
 var wheelDiameter as Lang.Float or Null 
 The wheel diameter set for simulation training mode Since: API Level 2.4.0 Returns: Lang.Float — 0-2.54m range 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Application (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application.html)nModule: Toybox.Application
 Overview
 The Application module contains the base class for every Connect IQ app. The Application Module includes the AppBase class which is responsible for controlling the app life cycle. This module also includes set and get methods to control the settings and properties values held in the Object Store and a GOAL_TYPE enum that defines the different goal types that can be triggered. See Also:
 Core Topics - Persisting Data 
 
 Since: API Level 1.0.0 Modules Under Namespace
 Modules: Application.Properties , Application.Storage Classes Under Namespace
 Classes: AppBase , AudioContentProviderApp , ObjectStoreAccessException Constant Summary
 GoalType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 GOAL_TYPE_STEPS 0 API Level 1.3.0 
 GOAL_TYPE_FLOORS_CLIMBED 1 API Level 1.3.0 
 GOAL_TYPE_ACTIVE_MINUTES 2 API Level 1.3.0 
 Typedef Summary collapse 
 PersistableType as Application.PropertyValueType 
 PropertyKeyType as Lang.Number or Lang.Float or Lang.Long or Lang.Double or Lang.String or Lang.Boolean or Lang.Char 
 PropertyValueType as Application.PropertyKeyType or Lang.Array &lt; Application.PropertyValueType &gt; or Lang.Dictionary &lt; Application.PropertyKeyType , Application.PropertyValueType &gt; or WatchUi.BitmapResource or Null 
 ResourceReferenceType as Graphics.BitmapReference or Graphics.FontReference 
 ResourceType as Lang.Array or Lang.Dictionary or Lang.String or WatchUi.AnimationResource or WatchUi.BitmapResource or WatchUi.FontResource 
 
 Instance Method Summary collapse 
 getApp () as Application.AppBase Retrieve the AppBase Object that is currently running. 
 loadResource (resource as Lang.ResourceId ) as Application.ResourceType or Application.ResourceReferenceType Load a resource from the executable. 
 
 Typedef Details
 PersistableType as Application.PropertyValueType 
 Since: API Level 1.0.0 PropertyKeyType as Lang.Number or Lang.Float or Lang.Long or Lang.Double or Lang.String or Lang.Boolean or Lang.Char 
 Since: API Level 1.0.0 PropertyValueType as Application.PropertyKeyType or Lang.Array &lt; Application.PropertyValueType &gt; or Lang.Dictionary &lt; Application.PropertyKeyType , Application.PropertyValueType &gt; or WatchUi.BitmapResource or Null 
 Since: API Level 1.0.0 ResourceReferenceType as Graphics.BitmapReference or Graphics.FontReference 
 Since: API Level 1.0.0 ResourceType as Lang.Array or Lang.Dictionary or Lang.String or WatchUi.AnimationResource or WatchUi.BitmapResource or WatchUi.FontResource 
 Since: API Level 1.0.0 Instance Method Details
 getApp() as Application.AppBase 
 Retrieve the AppBase Object that is currently running. Returns: Application.AppBase — The currently running AppBase object 
 
 Since: API Level 1.0.0 loadResource(resource as Lang.ResourceId ) as Application.ResourceType or Application.ResourceReferenceType 
 Load a resource from the executable. Note: Toybox::Graphics::BitmapReference and Toybox::Graphics::FontReference are returned for Toybox::WatchUi::BitmapResource and Toybox::WatchUi::FontResource in CIQ 4.0.0 and later. Parameters: resource — ( Lang.ResourceId ) — An identifier for a resource defined in the project's resources.xml file 
 
 Example: Loading a String resource // The resources.xml file contents: // &lt;resources&gt; // &lt;string id="AppName"&gt;APEELingApp&lt;/string&gt; // &lt;/resources&gt; using Toybox.Application; var banana = Application.loadResource(Rez.Strings.AppName); Returns: Lang.Array , Lang.Dictionary , Lang.String , WatchUi.AnimationResource , WatchUi.BitmapResource , WatchUi.FontResource , Graphics.BitmapReference , Graphics.FontReference 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [AppBase (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/AppBase.html)nClass: Toybox.Application.AppBase
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Application.AppBase 
 
 show all Overview
 AppBase is the base class for an app. All apps inherit from this class and use it's methods to manage the life cycle of an app. Your app overrides the class to provide entry points with the following methods: 
 onStart() 
 getInitialView() 
 getGoalView() 
 getServiceDelegate() 
 onSettingsChanged() 
 onStop() 
 
 These functions are called in the following order: 
 onStart() 
 getInitialView() 
 onStop() 
 
 Every AppBase object has access to an object store to persist data. Example: Shows basic app life cycle using Toybox.Application; class AppLifeCycle extends Application.AppBase { // initialize the AppBase class function initialize() { AppBase.initialize(); } // onStart() is called on application start up function onStart(state) { } // onStop() is called when your application is exiting function onStop(state) { } // Return the initial view of your application here function getInitialView() { return [new AppLifeCycleView()]; } } Since: API Level 1.0.0 Direct Known Subclasses
 Application.AudioContentProviderApp Constant Summary
 GlanceTheme
 Glance color themes for supported devices Since: API Level 4.0.0 Name Value Since Description See Also 
 GLANCE_THEME_DEFAULT 0 API Level 4.0.0 
 GLANCE_THEME_BLUE 1 API Level 4.0.0 
 GLANCE_THEME_GOLD 2 API Level 4.0.0 
 GLANCE_THEME_GREEN 3 API Level 4.0.0 
 GLANCE_THEME_LIGHT_BLUE 4 API Level 4.0.0 
 GLANCE_THEME_RED 5 API Level 4.0.0 
 GLANCE_THEME_WHITE 6 API Level 4.0.0 
 GLANCE_THEME_PURPLE 7 API Level 4.0.0 
 Instance Method Summary collapse 
 allowTrialMessage () as Lang.Boolean Check if application trial messages are allowed. 
 clearProperties () as Void deprecated Clear the object store for the application. 
 deleteProperty (key as Application.PropertyKeyType ) as Void deprecated Delete the given key from the object store. 
 getGlanceTheme () as AppBase.GlanceTheme Method to get the glance theme. 
 getGlanceView () as [ WatchUi.GlanceView ] or [ WatchUi.GlanceView , WatchUi.GlanceViewDelegate ] or Null Override to provide the WatchUi.GlanceView and WatchUi.GlanceViewDelegate for the glance preview. 
 getGoalView (goalType as Application.GoalType ) as [ WatchUi.View ] or Null Override to provide a WatchUi.View for a goal that has triggered within a watch face. 
 getInitialView () as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] Override to provide the initial View and Input Delegate of the application. 
 getProperty (key as Application.PropertyKeyType ) as Application.PropertyValueType deprecated Get the data associated with a given key from the object store. 
 getServiceDelegate () as [ System.ServiceDelegate ] Get a ServiceDelegate to run background tasks for this app. 
 getSettingsView () as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] or Null Override to provide the settings View and Input Delegate of the application. 
 getSyncDelegate () as Communications.SyncDelegate or Null Get a SyncDelegate object that communicates sync status to the system for syncing content to the device. 
 getTrialDaysRemaining () as Lang.Number or Null Override to return the number of days remaining in the trial If a developer wishes to implement time-based app trials, they will need to override this function to return the number of days remaining in the trial. 
 isActive () as Lang.Boolean return true if app is currently in active state, otherwise false. 
 isTrial () as Lang.Boolean Check if the application is in trial mode. 
 loadProperties () as Void deprecated Load the properties for the application. 
 onActive (state as Lang.Dictionary or Null ) as Void Invoked when app enters active mode, i.e. 
 onAppInstall () as Void The callback method that is triggered in the background when the app is installed. 
 onAppUpdate () as Void The callback method that is triggered in the background when the app is updated Requires the Background permission to be enabled and your application class to carry the :background annotation. 
 onAuthenticationRequest () as Void Called when an Application requests to run code on demand, during an authentication process. 
 onBackgroundData (data as Application.PersistableType ) as Void Handle data passed from a ServiceDelegate to the application. 
 onDisplayModeChanged () as Void The display mode has changed, only available in AMOLED or LCD screen products. 
 onEnhancedReadabilityModeChanged () as Void The font mode has changed This method is called when the system changes to or from Enhanced Readability Mode. 
 onInactive (state as Lang.Dictionary or Null ) as Void Invoked when app enters inactive mode, i.e. 
 onNightModeChanged () as Void The display mode has changed This method is called when the system changes to or from night mode. 
 onSettingsChanged () as Void Called when the application settings have been changed by Garmin Connect Mobile (GCM) while while the app is running. 
 onStart (state as Lang.Dictionary or Null ) as Void Method called at startup to allow handling of app initialization. 
 onStop (state as Lang.Dictionary or Null ) as Void Override to handle application cleanup upon termination. 
 onStorageChanged () as Void Called when Application storage is changed by the other running instance, of the app i.e Background Process while the CIQ app is running or vice-versa. 
 onValidateProperty (key as Lang.String , value as Application.PropertyValueType ) as Lang.Boolean or Lang.String Called when a property needs to be validated by the application. 
 openAppSettingsEditor () as Void Function to open application settings editor. 
 saveProperties () as Void deprecated Save the properties for the application. 
 setProperty (key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void deprecated Store the given data in the object. 
 validateProperty (key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void Validate a property being stored. 
 
 Instance Method Details
 allowTrialMessage() as Lang.Boolean 
 Check if application trial messages are allowed. Returns true if the application should allow the product to push unlock instruction pages for locked apps. Returns true by default. Returns: Lang.Boolean — Returns true if trial messages should be shown, otherwise false . 
 
 Since: API Level 2.3.0 clearProperties() as Void 
 This has been deprecated This method may be removed after System 4. Clear the object store for the application. Note: Background processes cannot clear properties. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Toybox.Application.Storage 
 Toybox.Application.Properties 
 Toybox.Application.Storage 
 
 Since: API Level 1.0.0 Throws: ( Application.ObjectStoreAccessException ) — Thrown if called from a background process 
 
 deleteProperty(key as Application.PropertyKeyType ) as Void 
 This has been deprecated This method may be removed after System 4. Delete the given key from the object store. Note: Background processes cannot delete properties. Parameters: key — ( Lang.Object ) — The key to delete 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Toybox.Application.Storage 
 Toybox.Application.Properties 
 Toybox.Application.Storage 
 
 Since: API Level 1.0.0 Throws: ( Application.ObjectStoreAccessException ) — Thrown if called from a background process 
 
 getGlanceTheme() as AppBase.GlanceTheme 
 Method to get the glance theme. Supported Devices: [ View devices ] D2™ Air X10
 Edge® 1050
 Enduro™ 3
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 965
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 4.0.0 getGlanceView() as [ WatchUi.GlanceView ] or [ WatchUi.GlanceView , WatchUi.GlanceViewDelegate ] or Null 
 Override to provide the WatchUi.GlanceView and WatchUi.GlanceViewDelegate for the glance preview. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: Lang.Array — An Array containing a WatchUi.GlanceView and an optional WatchUi.GlanceViewDelegate . If this function returns null the app name will be used as preview content. 
 
 Since: API Level 3.1.0 getGoalView(goalType as Application.GoalType ) as [ WatchUi.View ] or Null 
 Override to provide a WatchUi.View for a goal that has triggered within a watch face. If a goal is reached when a watch face is running, this function will be triggered. 
 The type of goal that was met will be provided, and the AppBase should return a View that displays a goal reached message and/or animations for that goal. 
 If a View is returned from this function, the main watch face view will be shutdown, and then new View will pushed. 
 If this method is not overridden in the AppBase, or if it returns null , the native goal screens will be shown. 
 
 Parameters: goalType — ( Application.GoalType ) — The goal type that has triggered. The goalType will be from the GOAL_TYPE_* enumeration. 
 
 Returns: Lang.Array — An Array containing a WatchUi.View 
 
 Since: API Level 1.3.0 getInitialView() as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] 
 Override to provide the initial View and Input Delegate of the application. Note: This method must be overridden in derived classes. If called, this function will cause the application to crash. Returns: Lang.Array — An Array containing a WatchUi.View and an optional WatchUi.BehaviorDelegate , WatchUi.ConfirmationDelegate , WatchUi.InputDelegate , WatchUi.MenuInputDelegate , WatchUi.NumberPickerDelegate , WatchUi.PickerDelegate , WatchUi.TextPickerDelegate , or WatchUi.WatchFaceDelegate 
 
 Since: API Level 1.0.0 getProperty(key as Application.PropertyKeyType ) as Application.PropertyValueType 
 This has been deprecated This method may be removed after System 4. Get the data associated with a given key from the object store. Properties must first be set with setProperty() before they are can be obtained with getProperty . Note: Symbols can change from build to build and are not to be used for for Keys or Values. Parameters: key — The key of the value to retrieve from the object store (cannot be a Symbol) 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Object — The content associated with the key, or null if the key is not in the object store 
 
 See Also: setProperty() 
 Toybox.Background 
 Toybox.Application.Properties 
 Toybox.Application.Storage 
 
 Since: API Level 1.0.0 getServiceDelegate() as [ System.ServiceDelegate ] 
 Get a ServiceDelegate to run background tasks for this app. When a ServiceDelegate is retrieved, the following will occur: The method triggered within the ServiceDelegate will be run 
 The background task will exit using Background.exit() or System.exit() 
 The background task will be automatically terminated after 30 seconds if it is not exited by these methods 
 
 Returns: Lang.Array — An Array containing a System.ServiceDelegate 
 
 See Also: Toybox.Background 
 
 Since: API Level 2.3.0 getSettingsView() as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] or Null 
 Override to provide the settings View and Input Delegate of the application. This function is only applicable to watch faces and data fields. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Array — An Array containing a WatchUi.View and an optional WatchUi.BehaviorDelegate , WatchUi.ConfirmationDelegate , WatchUi.InputDelegate , WatchUi.MenuInputDelegate , WatchUi.NumberPickerDelegate , WatchUi.PickerDelegate , WatchUi.TextPickerDelegate , or WatchUi.WatchFaceDelegate 
 
 Since: API Level 3.2.0 getSyncDelegate() as Communications.SyncDelegate or Null 
 Get a SyncDelegate object that communicates sync status to the system for syncing content to the device. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Communications.SyncDelegate 
 
 Since: API Level 3.1.0 getTrialDaysRemaining() as Lang.Number or Null 
 Override to return the number of days remaining in the trial If a developer wishes to implement time-based app trials, they will need to override this function to return the number of days remaining in the trial. This function will be called on app startup to determine if a trial is active and push a notice to the user of how many days remain in the trial. Note that if allowTrialMessage() is overridden to return false , no notifications will be displayed. Returns: Lang.Number — A Number object indicating the number of days remaining in the trial, or null if no timed trial is active. 
 
 Since: API Level 2.3.0 isActive() as Lang.Boolean 
 return true if app is currently in active state, otherwise false. Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Since: API Level 4.2.3 isTrial() as Lang.Boolean 
 Check if the application is in trial mode. This will always return true for development build apps. If the app has been signed by the store it will return the current unlock state of the app. This method should not be overridden or your trial mode functionality could cease to function correctly. Returns: Lang.Boolean — Return true if the app is "locked" and considered to be in trial mode, otherwise false if the app has been unlocked. 
 
 Since: API Level 2.3.0 loadProperties() as Void 
 This has been deprecated This method may be removed after System 4. Load the properties for the application Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.0.0 onActive(state as Lang.Dictionary or Null ) as Void 
 Invoked when app enters active mode, i.e. occupying screen in the foreground. Parameters: state — ( Lang.Dictionary ) — for future expansion, null for now. 
 
 Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Since: API Level 4.2.3 onAppInstall() as Void 
 The callback method that is triggered in the background when the app is installed. Requires the Background permission to be enabled and your application class to carry the :background annotation. Since: API Level 3.0.0 onAppUpdate() as Void 
 The callback method that is triggered in the background when the app is updated Requires the Background permission to be enabled and your application class to carry the :background annotation. Since: API Level 3.0.0 onAuthenticationRequest() as Void 
 Called when an Application requests to run code on demand, during an authentication process. Since: API Level 3.3.0 onBackgroundData(data as Application.PersistableType ) as Void 
 Handle data passed from a ServiceDelegate to the application. When the Background process terminates, a data payload may be available. If the main application is active when this occurs, the data will be passed directly to the application's onBackgroundData() method. If the main application is not active, the data will be saved until the next time the application is launched and will be passed to the application after the onStart() method completes. Parameters: data — ( Lang.Object ) — The data passed from the background process. 
 
 See Also: Toybox.Background 
 
 Since: API Level 2.3.0 onDisplayModeChanged() as Void 
 The display mode has changed, only available in AMOLED or LCD screen products. This method is called when the system changes the display mode. Use the System.getDisplayMode() to get the current state. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 965
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 5.0.0 onEnhancedReadabilityModeChanged() as Void 
 The font mode has changed This method is called when the system changes to or from Enhanced Readability Mode. Use the Toybox::System::DeviceSettings#isEnhancedReadabilityModeEnabled field to get the current state. Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Since: API Level 4.2.3 onInactive(state as Lang.Dictionary or Null ) as Void 
 Invoked when app enters inactive mode, i.e. hidden by system and not occupying screen. Access to certain system resources will be limited, such as GPS, ANT, Alerts (Vibs tones, flashlight). Parameters: state — ( Lang.Dictionary ) — for future expansion, null for now. 
 
 Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Since: API Level 4.2.3 onNightModeChanged() as Void 
 The display mode has changed This method is called when the system changes to or from night mode. Use the Toybox::System::DeviceSettings#isNightModeEnabled field to get the current state. Supported Devices: [ View devices ] Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Since: API Level 4.1.2 onSettingsChanged() as Void 
 Called when the application settings have been changed by Garmin Connect Mobile (GCM) while while the app is running. Override this method to change app behavior when settings change. This is typically used to call for an update to the WatchUi.requestUpdate() Example: function onSettingsChanged() { // triggered by settings change in GCM _mainView.handleSettingUpdate(); WatchUi.requestUpdate(); // update the view to reflect changes } See Also: WatchUi.requestUpdate() details 
 
 Since: API Level 1.2.0 onStart(state as Lang.Dictionary or Null ) as Void 
 Method called at startup to allow handling of app initialization. Before the initial WatchUi.View is retrieved, onStart() is called. Application level settings can be initialized or retrieved from the object store before the initial View is created. This method must be overridden to handle your own app initialization. Note: the suspension state can be cleared in the event of reboot or app update. Parameters: state — ( Lang.Dictionary ) — Required. If an Intent is not used to launch the application, then an empty "state" Dictionary is used. If an Intent is used to start the application the Dictionary contains the arguments from the Intent. :resume — ( Lang.Boolean ) — If true, indicating app has been resumed from suspension, restore the previously saved app state if needed. 
 :launchedFromGlance — ( Lang.Boolean ) — If true, indicating the app is started from glance list as opposed to the the app list. 
 :launchedFromComplication — ( Lang.Number ) — If presented, indicating the complication index the app was launched from. 
 
 
 
 Example: onStart() used with Intent function onStart(state) { if (state != null) { infoString = "Args:" + state.toString(); } } See Also: Toybox.System.Intent 
 
 Since: API Level 1.0.0 onStop(state as Lang.Dictionary or Null ) as Void 
 Override to handle application cleanup upon termination. If the application needs to save data to the object store it should be done in this function. Once the function is complete, the application will terminate. Note: the suspension state can be cleared in the event of reboot or app update. Parameters: state — ( Lang.Dictionary ) — Required. If an Intent is not used to launch an application on stop of the current application an empty "state" Dictionary is used. If an Intent is used to start another application, then the Dictionary contains the arguments from the Intent. :suspend — ( Lang.Boolean ) — If true, the app has been suspended and the current state can be resumed at a later time. 
 
 
 
 See Also: Toybox.System.Intent 
 
 Since: API Level 1.0.0 onStorageChanged() as Void 
 Called when Application storage is changed by the other running instance, of the app i.e Background Process while the CIQ app is running or vice-versa. Override this function to receive a callback when the storage is updated. Use this function to reload storage data from the application storage. Since: API Level 3.2.0 onValidateProperty(key as Lang.String , value as Application.PropertyValueType ) as Lang.Boolean or Lang.String 
 Called when a property needs to be validated by the application. Returns: true if the property is valid, return an error message otherwise. Returning false causes a generic error to be displayed on settings configuration app 
 
 Since: API Level 4.1.0 openAppSettingsEditor() as Void 
 Function to open application settings editor Since: API Level 4.1.0 saveProperties() as Void 
 This has been deprecated This method may be removed after System 4. Save the properties for the application Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.0.0 setProperty(key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void 
 This has been deprecated This method may be removed after System 4. Store the given data in the object. Keys can be of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 
 Values can be of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 Array 
 Dictionary 
 
 Array and Dictionary values may contain null values or any of the above listed types. There is a limit on the size of the Properties of 32 KB. If this limit is reached, the properties will not be saved or reloaded. Note: Background processes cannot save properties. Note: Symbols can change from build to build and are not to be used for for Keys or Values. Parameters: key — The key used to store and retrieve the value from the object store (cannot be a Symbol) 
 value — The value to put into the object store 
 
 Example: using Toybox.Application; var app = Application.getApp(); app.setProperty("number", 2); // set value for "number" key app.setProperty("float", 3.14); // set value for "float" key app.setProperty("string", "Hello World!"); // set value for "string" key app.setProperty("boolean", true); // set value for "boolean" key var int = app.getProperty("number"); // get value for "number" key var float = app.getProperty("float"); // get value for "float" key var string = app.getProperty("string"); // get value for "string" key var boolean = app.getProperty("boolean"); // get value for "boolean" key Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: getProperty() 
 Toybox.Background 
 Core Topics - Persisting Data 
 Toybox.Application.Properties 
 Toybox.Application.Storage 
 
 Since: API Level 1.0.0 Throws: ( Application.ObjectStoreAccessException ) — Thrown if called from a background process on device that does not have ConnectIQ 3.2.0 support. Data can always be passed to the foreground process from a background process with Background.exit() . 
 ( Lang.UnexpectedTypeException ) — Thrown if called with a key or value of a disallowed type 
 
 validateProperty(key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void 
 Validate a property being stored. Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [AudioContentProviderApp (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/AudioContentProviderApp.html)nClass: Toybox.Application.AudioContentProviderApp
 Inherits: Toybox.Application.AppBase Toybox.Lang.Object 
 Toybox.Application.AppBase 
 Toybox.Application.AudioContentProviderApp 
 
 show all Overview
 The base class for audio content provider apps. This object extends AppBase and adds new methods for getting different initial view types based on what mode the app needs to be started in. Since: API Level 3.0.0 App Types: Audio Content Provider 
 Background 
 
 Instance Method Summary collapse 
 getContentDelegate (args as Application.PersistableType ) as Media.ContentDelegate Get a ContentDelegate for use by the system to get and iterate through media content on the device. 
 getPlaybackConfigurationView () as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] Override to provide the initial View and Input Delegate for configuring playback. 
 getProviderIconInfo () as Media.ProviderIconInfo or Null Get audio provider icon information. 
 getSyncConfigurationView () as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] Override to provide the initial View and Input Delegate for configuring sync. 
 getSyncDelegate () as Communications.SyncDelegate or Null deprecated Get a SyncDelegate object that communicates sync status to the system for syncing media content to the device. 
 initialize () Constructor. 
 
 Instance Method Details
 getContentDelegate(args as Application.PersistableType ) as Media.ContentDelegate 
 Get a ContentDelegate for use by the system to get and iterate through media content on the device. Note: This method must be overridden in derived classes. If called, this function will cause the application to crash. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Media.ContentDelegate 
 
 Since: API Level 3.0.0 getPlaybackConfigurationView() as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] 
 Override to provide the initial View and Input Delegate for configuring playback. Note: This method must be overridden in derived classes. If called, this function will cause the application to crash. Returns: Lang.Array — An Array containing a WatchUi.View and an optional WatchUi.BehaviorDelegate , WatchUi.ConfirmationDelegate , WatchUi.InputDelegate , WatchUi.MenuInputDelegate , WatchUi.NumberPickerDelegate , WatchUi.PickerDelegate , WatchUi.TextPickerDelegate , or WatchUi.WatchFaceDelegate 
 
 Since: API Level 3.0.0 getProviderIconInfo() as Media.ProviderIconInfo or Null 
 Get audio provider icon information. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Toybox::Media::ProviderIconInfo The icon for the audio content provider 
 
 Since: API Level 3.0.0 getSyncConfigurationView() as [ WatchUi.Views ] or [ WatchUi.Views , WatchUi.InputDelegates ] 
 Override to provide the initial View and Input Delegate for configuring sync. Note: This method must be overridden in derived classes. If called, this function will cause the application to crash. Returns: Lang.Array — An Array containing a WatchUi.View and an optional WatchUi.BehaviorDelegate , WatchUi.ConfirmationDelegate , WatchUi.InputDelegate , WatchUi.MenuInputDelegate , WatchUi.NumberPickerDelegate , WatchUi.PickerDelegate , WatchUi.TextPickerDelegate , or WatchUi.WatchFaceDelegate 
 
 Since: API Level 3.0.0 getSyncDelegate() as Communications.SyncDelegate or Null 
 This has been deprecated This method may be removed after System 9. Get a SyncDelegate object that communicates sync status to the system for syncing media content to the device. Returns: Communications.SyncDelegate 
 
 See Also: AppBase.getSyncDelegate() 
 
 Since: API Level 3.0.0 initialize() 
 Constructor Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [ObjectStoreAccessException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/ObjectStoreAccessException.html)nClass: Toybox.Application.ObjectStoreAccessException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Application.ObjectStoreAccessException 
 
 show all Overview
 Indicates a Background process has attempted to access or modify the object store. See Also:
 Toybox.Background 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [Properties (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/Properties.html)nModule: Toybox.Application.Properties
 Overview
 The Properties module provides access to application properties. Storage provides access to properties defined in application properties. Since: API Level 2.4.0 Classes Under Namespace
 Classes: InvalidKeyException Instance Method Summary collapse 
 getValue (key as Application.PropertyKeyType ) as Application.PropertyValueType Get the data associated with a given key from application settings. 
 setValue (key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void Store the given Application Property. 
 
 Instance Method Details
 getValue(key as Application.PropertyKeyType ) as Application.PropertyValueType 
 Get the data associated with a given key from application settings. Property values must be defined in the application settings xml. If a key that is not present in application settings is passed to getValue(), an exception will be thrown. Parameters: key — ( Lang.Object ) — The key of the value to retrieve from Application Properties 
 
 Returns: Lang.Object — The content associated with the key 
 
 See Also: setValue() 
 
 Since: API Level 2.4.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if key is a disallowed data type 
 ( Properties.InvalidKeyException ) — Thrown if key does not exist in Application Settings 
 
 setValue(key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void 
 Store the given Application Property. Note: Background processes cannot save Application Properties Parameters: key — ( Lang.Object ) — The key used to store and retrieve the value from Application Properties 
 value — ( Lang.Object ) — The value to put into Application Properties 
 
 Since: API Level 2.4.0 Throws: ( Application.ObjectStoreAccessException ) — Thrown if called from a background process on device that does not have ConnectIQ 3.2.0 support. Data can always be passed to the foreground process from a background process with Background.exit() . 
 ( Lang.UnexpectedTypeException ) — Thrown if key is a disallowed data type 
 ( Properties.InvalidKeyException ) — Thrown if key does not exist in Application Properties 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [InvalidKeyException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/Properties/InvalidKeyException.html)nClass: Toybox.Application.Properties.InvalidKeyException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Application.Properties.InvalidKeyException 
 
 show all Overview
 Indicates a the application attempted to access a key that does not exist in Application Settings Since: API Level 2.4.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:42 AM


# [Storage (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Application/Storage.html)nModule: Toybox.Application.Storage
 Overview
 The Storage module provides persistent storage to applications. Storage provides access to persistent disk storage. Since: API Level 2.4.0 Instance Method Summary collapse 
 clearValues () as Void Clear the object store for the application. 
 deleteValue (key as Application.PropertyKeyType ) as Void Delete the given key from the object store. 
 getValue (key as Application.PropertyKeyType ) as Application.PropertyValueType Get the data associated with a given key from the object store. 
 setValue (key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void Store the given data in the object. 
 
 Instance Method Details
 clearValues() as Void 
 Clear the object store for the application. Since: API Level 2.4.0 Throws: ( Application.ObjectStoreAccessException ) — Thrown if called from a background process on device that does not have ConnectIQ 3.2.0 support. 
 
 deleteValue(key as Application.PropertyKeyType ) as Void 
 Delete the given key from the object store. Parameters: key — ( Lang.Object ) — The key to delete 
 
 See Also: setValue() 
 
 Since: API Level 2.4.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if key is a disallowed data type 
 ( Application.ObjectStoreAccessException ) — Thrown if called from a background process on device that does not have ConnectIQ 3.2.0 support 
 
 getValue(key as Application.PropertyKeyType ) as Application.PropertyValueType 
 Get the data associated with a given key from the object store. Keys can be of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 
 Values must first be set with setValue() before they are can be obtained with getValue . Note: Symbols can change from build to build and are not to be used for for Keys or Values Parameters: key — ( Lang.Object ) — The key of the value to retrieve from the object store (cannot be a Symbol) 
 
 Returns: Lang.Object — The content associated with the key, or null if the key is not in the object store 
 
 See Also: setValue() 
 Toybox.Background 
 
 Since: API Level 2.4.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if key is a disallowed data type 
 
 setValue(key as Application.PropertyKeyType , value as Application.PropertyValueType ) as Void 
 Store the given data in the object. Keys can be of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 
 Values can be of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 BitmapResource (Since 3.0.0) 
 AnimationResource (Since 3.0.8) 
 ScanResult (Since 3.2.0) 
 null 
 
 Values can also be of type Array or Dictionary containing the above listed types, excluding BitmapResource and AnimationResource . There is a limit on the size of the Object Store that can vary between devices. If you reach this limit, the value will not be saved and an exception will be thrown. Also, values are limited to 32 KB in size. Note: Symbols can change from build to build and are not to be used for for Keys or Values Parameters: key — ( Lang.Object ) — The key used to store and retrieve the value from the object store (cannot be a Symbol) 
 value — ( Lang.Object ) — The value to put into the object store 
 
 Example: using Toybox.Application.Storage; Storage.setValue("number", 2); // set value for "number" key Storage.setValue("float", 3.14); // set value for "float" key Storage.setValue("string", "Hello World!"); // set value for "string" key Storage.setValue("boolean", true); // set value for "boolean" key var int = Storage.getValue("number"); // get value for "number" key var float = Storage.getValue("float"); // get value for "float" key var string = Storage.getValue("string"); // get value for "string" key var boolean = Storage.getValue("boolean"); // get value for "boolean" key See Also: getValue() 
 Toybox.Background 
 Core Topics - Persisting Data 
 
 Since: API Level 2.4.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if key is a disallowed data type 
 ( Lang.StorageFullException ) — Thrown if there is not enough remaining space in the Object Store for the given key and value 
 ( Application.ObjectStoreAccessException ) — Thrown if called from a background process on device that does not have ConnectIQ 3.2.0 support. Data can always be passed to the foreground process from a background process with Background.exit() . 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Attention (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Attention.html)nModule: Toybox.Attention
 Overview
 The Attention module provides the ability to play pre-defined sounds, methods for managing vibration, and control of the back light. Not all devices fully support this module, so has checks are recommended. For example, the vivoactive does not have a tone generator and will trigger an error if an app attempts to play sounds. Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Data Field 
 Widget 
 
 Classes Under Namespace
 Classes: BacklightOnTooLongException , ToneProfile , VibeProfile Constant Summary
 Tone
 Since: API Level 1.0.0 Name Value Since Description See Also 
 TONE_KEY 0 API Level 1.0.0 Indicates that a key was pressed 
 TONE_START 1 API Level 1.0.0 Indicates that an activity has started 
 TONE_STOP 2 API Level 1.0.0 Indicates that an activity has stopped 
 TONE_MSG 3 API Level 1.0.0 Indicates that a message is available 
 TONE_ALERT_HI 4 API Level 1.0.0 An alert ending with a high note 
 TONE_ALERT_LO 5 API Level 1.0.0 An alert ending with a low note 
 TONE_LOUD_BEEP 6 API Level 1.0.0 A loud beep 
 TONE_INTERVAL_ALERT 7 API Level 1.0.0 Indicates a change in interval 
 TONE_ALARM 8 API Level 1.0.0 Indicates an alarm has triggered 
 TONE_RESET 9 API Level 1.0.0 Indicates that the activity was reset 
 TONE_LAP 10 API Level 1.0.0 Indicates that the user has completed a lap 
 TONE_CANARY 11 API Level 1.0.0 An annoying sound to get the users attention 
 TONE_TIME_ALERT 12 API Level 1.0.0 An alert that a time threshold has been met 
 TONE_DISTANCE_ALERT 13 API Level 1.0.0 An alert that a distance threshold has been met 
 TONE_FAILURE 14 API Level 1.0.0 Indicates that the activity was a failure 
 TONE_SUCCESS 15 API Level 1.0.0 Indicates that the activity was a success 
 TONE_POWER 16 API Level 1.0.0 The power on tone 
 TONE_LOW_BATTERY 17 API Level 1.0.0 Indicates that the device has low battery power 
 TONE_ERROR 18 API Level 1.0.0 Indicates an error occurred 
 FlashlightMode
 Flashlight modes Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_MODE_OFF 0 API Level 3.4.3 
 FLASHLIGHT_MODE_ON 1 API Level 3.4.3 
 FLASHLIGHT_MODE_STROBE 2 API Level 3.4.3 
 FlashlightColor
 Flashlight colors Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_COLOR_WHITE 0xFFFFFF API Level 3.4.3 
 FLASHLIGHT_COLOR_GREEN 0x00FF00 API Level 3.4.3 
 FLASHLIGHT_COLOR_RED 0xFF0000 API Level 3.4.3 
 FlashlightBrightness
 Flashlight brightness Constants map to device-specific brightness levels Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_BRIGHTNESS_LOW 255 API Level 3.4.3 
 FLASHLIGHT_BRIGHTNESS_MEDIUM 254 API Level 3.4.3 
 FLASHLIGHT_BRIGHTNESS_HIGH 253 API Level 3.4.3 
 FlashlightStrobeMode
 Flashlight strobe modes Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_STROBE_MODE_BLINK 0 API Level 3.4.3 
 FLASHLIGHT_STROBE_MODE_PULSE 1 API Level 3.4.3 
 FLASHLIGHT_STROBE_MODE_BEACON 2 API Level 3.4.3 
 FLASHLIGHT_STROBE_MODE_BLITZ 3 API Level 3.4.3 
 FlashlightStrobeSpeed
 Flashlight strobe speeds Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_STROBE_SPEED_SLOW 0 API Level 3.4.3 
 FLASHLIGHT_STROBE_SPEED_MEDIUM 1 API Level 3.4.3 
 FLASHLIGHT_STROBE_SPEED_FAST 2 API Level 3.4.3 
 FlashlightResult
 Flashlight result codes Since: API Level 3.4.3 Name Value Since Description See Also 
 FLASHLIGHT_RESULT_SUCCESS 0 API Level 3.4.3 
 FLASHLIGHT_RESULT_INVALID_COLOR 1 API Level 3.4.3 
 FLASHLIGHT_RESULT_INVALID_BRIGHTNESS 2 API Level 3.4.3 
 FLASHLIGHT_RESULT_INVALID_MODE 3 API Level 3.4.3 
 FLASHLIGHT_RESULT_INVALID_SPEED 4 API Level 3.4.3 
 FLASHLIGHT_RESULT_FAILURE 5 API Level 3.4.3 
 Instance Method Summary collapse 
 backlight (setting as Lang.Boolean or Lang.Float ) as Void Control the display backlight. 
 hasFlashlightColor (color as Attention.FlashlightColor ) as Lang.Boolean Determine if a given flashlight color is supported by this device. 
 playTone (options as Attention.Tone or { :toneProfile as Lang.Array &lt; Attention.ToneProfile &gt;, :repeatCount as Lang.Number }) as Void Play a tone. 
 setFlashlightMode (mode as Attention.FlashlightMode , options as { :color as Attention.FlashlightColor , :brightness as Lang.Number or Attention.FlashlightBrightness , :strobeMode as Attention.FlashlightStrobeMode , :strobeSpeed as Attention.FlashlightStrobeSpeed } or Null ) as Attention.FlashlightResult 
 vibrate (vibeProfiles as Lang.Array &lt; Attention.VibeProfile &gt;) as Void Engage the vibration motor. 
 
 Instance Method Details
 backlight(setting as Lang.Boolean or Lang.Float ) as Void 
 Control the display backlight. The backlight will always respect the backlight timeout settings on the device. Behavior of this feature may also change depending on device settings. For example, if a device is set to activate the back light with key presses, the backlight will toggle on with key presses even if the app is written to turn off the back light with a key press. On products that use a gesture enabled display, calling this API will suppress the gesture detection for the period that the backlight is on. Calling this repeatedly can hold the display on, but if the product has burn in protection an exception will be thrown if you attempt to keep the display enabled for too long (e.g. over 1 minute). Note: Passing a Float is only supported with ConnectIQ 3.2.1 and later. Parameters: setting — ( Lang.Boolean , Lang.Float ) — If setting is a Boolean , false will disable the backlight and true will enable the backlight at the system backlight level. 
 If setting is a Float , the value 0.0 will disable the backlight and values greater than 0.0 and less than or equal to 1.0 will enable the backlight at the specified brightness. 
 
 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.0.0 Throws: BacklightOnTooLongException On products with burn in protection, this exception is thrown if the backlight is held on for too long continuously 
 InvalidOptionsException If the Float value is outside the valid range. 
 
 hasFlashlightColor(color as Attention.FlashlightColor ) as Lang.Boolean 
 Determine if a given flashlight color is supported by this device Parameters: color — ( Attention.FlashlightColor ) — Color to check 
 
 Supported Devices: [ View devices ] Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2X Solar
 
 Returns: Returns true if the given color is supported, otherwise false. 
 
 Since: API Level 3.4.3 Throws: ( Lang.OperationNotAllowedException ) — Raised if called from an app type other than watch-app. 
 
 playTone(options as Attention.Tone or { :toneProfile as Lang.Array &lt; Attention.ToneProfile &gt;, :repeatCount as Lang.Number }) as Void 
 Play a tone. Note: Passing an options Dictionary is only supported with ConnectIQ 3.1.0 and later. Parameters: options — ( Attention.Tone , Lang.Dictionary ) — A TONE_* value or Dictionary of options. :toneProfile — ( Lang.Array ) — Array containing at least one ToneProfile object to be played in sequence. 
 :repeatCount — ( Lang.Number ) — Number of times to repeat the given tone sequence. 
 
 
 
 Example: using Toybox.Attention; // Play a predefined tone if (Attention has :playTone) { Attention.playTone(Attention.TONE_LOUD_BEEP); } // Use an array of ToneProfile objects to build and play a custom tone if (Attention has :ToneProfile) { var toneProfile = [ new Attention.ToneProfile( 2500, 250), new Attention.ToneProfile( 5000, 250), new Attention.ToneProfile(10000, 250), new Attention.ToneProfile( 5000, 250), new Attention.ToneProfile( 2500, 250), ]; Attention.playTone({:toneProfile=&gt;toneProfile}); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 3
 Venu® 3S
 
 Since: API Level 1.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if passing an options hash with invalid values when using new ToneProfile objects 
 
 setFlashlightMode(mode as Attention.FlashlightMode , options as { :color as Attention.FlashlightColor , :brightness as Lang.Number or Attention.FlashlightBrightness , :strobeMode as Attention.FlashlightStrobeMode , :strobeSpeed as Attention.FlashlightStrobeSpeed } or Null ) as Attention.FlashlightResult 
 Parameters: mode — ( Attention.FlashlightMode ) 
 options — ( Lang.Dictionary ) — Flashlight mode options :color — ( Attention.FlashlightColor ) — Color of flashlight. Default is FLASHLIGHT_COLOR_WHITE. 
 :strobeMode — ( Attention.FlashlightStrobeMode ) — Mode of strobe. Default is FLASHLIGHT_STROBE_MODE_BLINK. 
 :strobeSpeed — ( Attention.FlashlightStrobeSpeed ) — Speed of strobe. Default is FLASHLIGHT_STROBE_SPEED_MEDIUM. 
 :brightness — ( Lang.Number , Attention.FlashlightBrightness ) — Intensity of the flashlight. Default is FLASHLIGHT_BRIGHTNESS_MEDIUM. 
 
 
 
 Supported Devices: [ View devices ] Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2X Solar
 
 Returns: Attention.FlashlightResult — A FlashlightResult value indicating the operation status. 
 
 Since: API Level 3.4.3 Throws: ( Lang.OperationNotAllowedException ) — Raised if called from an app type other than watch-app. 
 
 vibrate(vibeProfiles as Lang.Array &lt; Attention.VibeProfile &gt;) as Void 
 Engage the vibration motor. The vibrate method takes an Array containing at least one VibeProfile object, up to a maximum of 8, and runs them in sequence. Note: Forerunner devices do not support vibration patterns. Vibration may still be used, but the vibration will always run at the same duty cycle. Parameters: vibeProfiles — ( Lang.Array ) — An Array of VibeProfile objects 
 
 Example: Vibrate in an on/off pattern if (Attention has :vibrate) { vibeData = [ new Attention.VibeProfile(50, 2000), // On for two seconds new Attention.VibeProfile(0, 2000), // Off for two seconds new Attention.VibeProfile(50, 2000), // On for two seconds new Attention.VibeProfile(0, 2000), // Off for two seconds new Attention.VibeProfile(50, 2000) // on for two seconds ]; } Attention.vibrate(vibeData); Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Toybox.Attention.VibeProfile 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [BacklightOnTooLongException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Attention/BacklightOnTooLongException.html)nClass: Toybox.Attention.BacklightOnTooLongException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Attention.BacklightOnTooLongException 
 
 show all Overview
 Exception thrown on products with burn in protection if the display is enabled for too long (e.g. over a minute) Since: API Level 3.2.1 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.2.1 Generated Dec 11, 2024, 8:58:42 AM


# [ToneProfile (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Attention/ToneProfile.html)nClass: Toybox.Attention.ToneProfile
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Attention.ToneProfile 
 
 show all Overview
 Define a tone pattern. Tones have two characteristics: frequency and duration. These characteristics are used to define a single ToneProfile object, which can then be passed with a collection of other ToneProfile objects in an Array to the playTone() method. The playTone() method will play through each of the ToneProfile objects within the Array in order. Example: Build a set of ToneProfile objects if (Attention has :ToneProfile) { var toneProfile = [ new Attention.ToneProfile( 2500, 250), new Attention.ToneProfile( 5000, 250), new Attention.ToneProfile(10000, 250), new Attention.ToneProfile( 5000, 250), new Attention.ToneProfile( 2500, 250), ]; Attention.playTone({:toneProfile=&gt;toneProfile}); } Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Venu® 2 Plus
 Venu® 3
 Venu® 3S
 
 Instance Member Summary collapse 
 duration as Lang.Number The duration of the tone in milliseconds (ms). 
 frequency as Lang.Number The frequency of the tone in hertz (hz). 
 
 Instance Method Summary collapse 
 initialize (aFrequency as Lang.Number , aDuration as Lang.Number ) Constructor. 
 
 Instance Attribute Details
 var duration as Lang.Number 
 The duration of the tone in milliseconds (ms). Since: API Level 3.1.0 var frequency as Lang.Number 
 The frequency of the tone in hertz (hz). Since: API Level 3.1.0 Instance Method Details
 initialize(aFrequency as Lang.Number , aDuration as Lang.Number ) 
 Constructor Parameters: aFrequency — ( Lang.Number ) — The frequency of the tone in hertz (hz) 
 aDuration — ( Lang.Number ) — The duration of the tone in milliseconds (ms) 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [VibeProfile (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Attention/VibeProfile.html)nClass: Toybox.Attention.VibeProfile
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Attention.VibeProfile 
 
 show all Overview
 Define a vibration pattern. Vibrations have two characteristics: duty cycle and length. These characteristics are used to define a single VibeProfile object, which can then be passed with a collection of other VibeProfile objects in an Array to the vibrate() method. The vibrate() method will play through each of the VibeProfile objects within the Array in order. Example: Build a set of VibeProfile objects if (Attention has :vibrate) { vibeData = [ new Attention.VibeProfile(25, 2000), new Attention.VibeProfile(50, 2000), new Attention.VibeProfile(100, 2000) ]; } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Member Summary collapse 
 dutyCycle as Lang.Number The strength of the vibration. 
 length as Lang.Number Length of the vibration in milliseconds (ms). 
 
 Instance Method Summary collapse 
 initialize (dutyCycleVal as Lang.Number , lengthVal as Lang.Number ) Constructor. 
 
 Instance Attribute Details
 var dutyCycle as Lang.Number 
 The strength of the vibration. Duty cycle is the felt strength of the vibration, and is analogous in practice to the frequency of the vibration. It is specified as a value from 0 to 100%, 0 indicating no vibration and 100 indicating the strongest vibration. Since: API Level 1.0.0 See Also: Duty Cycle 
 
 var length as Lang.Number 
 Length of the vibration in milliseconds (ms). Since: API Level 1.0.0 Instance Method Details
 initialize(dutyCycleVal as Lang.Number , lengthVal as Lang.Number ) 
 Constructor Parameters: dutyCycleVal — ( Lang.Number ) — The strength of the vibration 
 lengthVal — ( Lang.Number ) — The length of the vibration in milliseconds (ms) 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [Authentication (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Authentication.html)nModule: Toybox.Authentication
 Overview
 The Authentication Module provides tools for authentication. With the Authentication module, Connect IQ apps will be able to make OAuth requests redirected through Connect IQ mobile app. Since: API Level 3.3.0 Classes Under Namespace
 Classes: Message , OAuthMessage Constant Summary
 OAuthResultType
 Since: API Level 3.3.0 Name Value Since Description See Also 
 OAUTH_RESULT_TYPE_URL 0 API Level 3.3.0 How the OAuth token will be returned in the final step. 
 OAuthSigningMethod
 Since: API Level 3.3.0 Name Value Since Description See Also 
 OAUTH_SIGNING_METHOD_HMAC_SHA1 0 API Level 3.3.0 How the OAuth request will be signed 
 Instance Method Summary collapse 
 makeOAuthRequest (requestUrl as Lang.String , requestParams as Lang.Dictionary &lt; Lang.String , Lang.String &gt;, resultUrl as Lang.String , resultType as Authentication.OAuthResultType , resultKeys as Lang.Dictionary &lt; Lang.String , Lang.String &gt;) as Void Request an OAuth sign-in through Garmin Connect IQ Mobile App A notification will trigger on the phone, that when clicked, provides a web view that shows requestUrl . 
 registerForOAuthMessages (method as Lang.Method (message as Authentication.OAuthMessage ) as Void ) as Void Register a callback for receiving OAuth messages. 
 
 Instance Method Details
 makeOAuthRequest(requestUrl as Lang.String , requestParams as Lang.Dictionary &lt; Lang.String , Lang.String &gt;, resultUrl as Lang.String , resultType as Authentication.OAuthResultType , resultKeys as Lang.Dictionary &lt; Lang.String , Lang.String &gt;) as Void 
 Request an OAuth sign-in through Garmin Connect IQ Mobile App A notification will trigger on the phone, that when clicked, provides a web view that shows requestUrl . If the user grants permission to the app, then the callback registered by registerForOAuthMessages() will be called with an OAuthMessage from the OAuth response. Parameters: requestUrl — ( Lang.String ) — The URL to load in the web view to begin authentication 
 requestParams — ( Lang.Dictionary ) — Non-URL encoded parameters for the requestUrl 
 resultUrl — ( Lang.String ) — The URL of the final page of authentication that contains the resultKeys 
 resultType — ( Authentication.OAuthResultType ) — An OAUTH_RESULT_TYPE_* value that specifies the format of the result 
 resultKeys — ( Lang.Dictionary ) — The desired OAuth response values passed to the callback method. The keys map to the actual OAuth response keys, and the values map to the keys of the OAuthMessage data. 
 
 Example: using Toybox.Authentication; using Toybox.System; const CLIENT_ID = "myClientID"; const OAUTH_CODE = "myOAuthCode"; const OAUTH_ERROR = "myOAuthError"; // register a callback to capture results from OAuth requests Authentication.registerForOAuthMessages(method(:onOAuthMessage)); // wrap the OAuth request in a function function getOAuthToken() { status = "Look at OAuth screen\n"; Ui.requestUpdate(); // set the makeOAuthRequest parameters var params = { "redirect_uri" =&gt; "connectiq://oauth", "response_type" =&gt; "code", "client_id" =&gt; $.CLIENT_ID }; // makeOAuthRequest triggers login prompt on mobile device. // "responseCode" and "responseError" are the parameters passed // to the resultUrl. Check the oauth provider's documentation // to determine the correct strings to use. Auth.makeOAuthRequest( "https://requesturl.com", params, "http://resulturl.com", Auth.OAUTH_RESULT_TYPE_URL, {"responseCode" =&gt; $.OAUTH_CODE, "responseError" =&gt; $.OAUTH_ERROR} ); } // implement the OAuth callback method function onOAuthMessage(message) { if (message.data != null) { var code = message.data[$.OAUTH_CODE]; var error = message.data[$.OAUTH_ERROR]; } else { // return an error } } // the OAuth service can now be used with a makeWebRequest() call Since: API Level 3.3.0 registerForOAuthMessages(method as Lang.Method (message as Authentication.OAuthMessage ) as Void ) as Void 
 Register a callback for receiving OAuth messages. The callback will be called once for each received OAuth message. If there are messages waiting for the app when this function is called, the callback will immediately be called once for each waiting message. Parameters: method — ( Lang.Method ) — A reference to a callback, which must receive a data argument of the type OAuthMessage . 
 
 Example: using Toybox.Authentication; function onOAuthMessage(message) { if (message.data != null) { var code = message.data[OAUTH_CODE]; var error = message.data[OAUTH_ERROR]; } else { // return an error } } Authentication.registerForOAuthMessages(method(:onOAuthMessage)); Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [Message (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Authentication/Message.html)nClass: Toybox.Authentication.Message
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Authentication.Message 
 
 show all Overview
 The base class for messages. Since: API Level 3.3.0 Direct Known Subclasses
 Authentication.OAuthMessage Instance Member Summary collapse 
 data as Lang.Object or Null The data delivered by the message. 
 
 Instance Attribute Details
 var data as Lang.Object or Null 
 The data delivered by the message. Since: API Level 3.3.0 Returns: Lang.Object 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [OAuthMessage (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Authentication/OAuthMessage.html)nClass: Toybox.Authentication.OAuthMessage
 Inherits: Toybox.Authentication.Message Toybox.Lang.Object 
 Toybox.Authentication.Message 
 Toybox.Authentication.OAuthMessage 
 
 show all Overview
 An OAuthMessage received by the callback registered in registerForOAuthMessages() . Unlike the data in the Message parent class, data in an OAuthMessage should always be a Dictionary . Since: API Level 3.3.0 Instance Member Summary collapse 
 responseCode as Lang.Number An HTTP response code (positive value) or BLE error code (negative value). 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var responseCode as Lang.Number 
 An HTTP response code (positive value) or BLE error code (negative value). Note: The value in this field is unreliable and should not be referenced. It is generally safer to examine the message payload to check the status of the response. Since: API Level 3.3.0 Returns: Lang.Number 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [Background (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Background.html)nModule: Toybox.Background
 Overview
 Background events are special events that trigger in the background when either certain system events occur, such as when an activity goal has been met, or at certain times (called temporal events). This allows an application to update its data even when the application is not active. See Also:
 Toybox.System.ServiceDelegate 
 AppBase.onBackgroundData() 
 
 Since: API Level 2.3.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Requires Permission: Background 
 
 Classes Under Namespace
 Classes: ExitDataSizeLimitException , InvalidBackgroundTimeException , MessageSizeLimitException Instance Method Summary collapse 
 deleteActivityCompletedEvent () as Void Stops the application from receiving activity completed events. 
 deleteGoalEvent (goalType as Application.GoalType ) as Void Remove the active goal background event of specified type for the application. 
 deleteOAuthResponseEvent () as Void Remove the OAuth response background event. 
 deletePhoneAppMessageEvent () as Void Stops the application from receiving background phone app messages. 
 deletePushNotificationEvent () as Void Stops the application from receiving silent and actionable push notifications. 
 deleteSleepEvent () as Void Remove the active sleep background event for the application. 
 deleteStepsEvent () as Void Remove the active steps background event for the application. 
 deleteTemporalEvent () as Void Remove the active temporal background event for the application. 
 deleteWakeEvent () as Void Remove the active wake background event for the application. 
 exit (backgroundData as Application.PropertyValueType ) as Void Terminates the current background process. 
 getActivityCompletedEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForActivityCompletedEvent() . 
 getBackgroundData () as Application.PropertyValueType Get data previously saved by a background process. 
 getGoalEventRegistered (goalType as Application.GoalType ) as Lang.Boolean Get whether a background event is registered with registerForGoalEvent() . 
 getLastTemporalEventTime () as Time.Moment or Null Get the time the last temporal background event was triggered. 
 getOAuthResponseEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForOAuthResponseEvent() . 
 getPhoneAppMessageEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForPhoneAppMessageEvent() . 
 getPushNotificationEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForPushNotificationEvent() . 
 getSleepEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForSleepEvent() . 
 getStepsEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForStepsEvent() . 
 getTemporalEventRegisteredTime () as Time.Moment or Time.Duration or Null Get the Moment or Duration with which a background event is registered by registerForTemporalEvent() . 
 getWakeEventRegistered () as Lang.Boolean Get whether a background event is registered with registerForWakeEvent() . 
 registerForActivityCompletedEvent () as Void Registers the application to receive an event whenever an activity is completed. 
 registerForGoalEvent (goalType as Application.GoalType ) as Void Register a background event that triggers when the user reaches a specified goal. 
 registerForOAuthResponseEvent () as Void Registers a background event that triggers each time an OAuth login request completes and the token becomes available on the system for use. 
 registerForPhoneAppMessageEvent () as Void Registers the application to receive an event whenever a phone app message is received. 
 registerForPushNotificationEvent () as Void Registers the application to receive silent and actionable push notifications. 
 registerForSleepEvent () as Void Register a background event that triggers at the sleep time configured on the device. 
 registerForStepsEvent () as Void Registers a background event that triggers each time a multiple of 1000 steps is reached. 
 registerForTemporalEvent (time as Time.Moment or Time.Duration ) as Void Register a background event that triggers at a specific time or at a regular interval. 
 registerForWakeEvent () as Void Register a background event that triggers at the wake time configured on the device. 
 requestApplicationWake (message as Lang.String ) as Void Display a confirmation dialog requesting to launch the application to which the background task belongs. 
 
 Instance Method Details
 deleteActivityCompletedEvent() as Void 
 Stops the application from receiving activity completed events. Since: API Level 3.0.10 deleteGoalEvent(goalType as Application.GoalType ) as Void 
 Remove the active goal background event of specified type for the application. Parameters: goalType — ( Application.GoalType ) — An Application.GOAL_TYPE_* value representing the goal type of the event to remove 
 
 Example: Background.deleteGoalEvent(GOAL_TYPE_STEPS); Since: API Level 2.3.0 deleteOAuthResponseEvent() as Void 
 Remove the OAuth response background event. Since: API Level 2.3.0 deletePhoneAppMessageEvent() as Void 
 Stops the application from receiving background phone app messages. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 deletePushNotificationEvent() as Void 
 Stops the application from receiving silent and actionable push notifications. Since: API Level 3.0.10 deleteSleepEvent() as Void 
 Remove the active sleep background event for the application. Since: API Level 2.3.0 deleteStepsEvent() as Void 
 Remove the active steps background event for the application. Since: API Level 2.3.0 deleteTemporalEvent() as Void 
 Remove the active temporal background event for the application. Since: API Level 2.3.0 deleteWakeEvent() as Void 
 Remove the active wake background event for the application. Since: API Level 2.3.0 exit(backgroundData as Application.PropertyValueType ) as Void 
 Terminates the current background process. All background processes should call this method when they have completed the desired tasks. Data passed to this method will either be passed immediately to the active application if it is running, or will be saved and passed to the application the next time it runs. Data must be one of the following types: String 
 Number 
 Float 
 Boolean 
 Char 
 Long 
 Double 
 Array 
 Dictionary 
 
 Arrays and Dictionaries may contain null values or any of the above listed types. If no data should be passed to the main process, null may be specified. This method will exit if called by a background process, but will do nothing if called by the main application process. Parameters: backgroundData — ( Lang.Object ) — The object to pass to the main process's AppBase.onBackgroundData() method. Passing null will not override previous data values not yet consumed by the parent application's AppBase.onBackgroundData() method. 
 
 Since: API Level 2.3.0 Throws: ( Background.ExitDataSizeLimitException ) — Indicates the data provided exceeds the data size limit (approximately 8 KB). If this exception is caught, the process will not exit and should attempt to call Background.exit() again with less data. 
 
 getActivityCompletedEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForActivityCompletedEvent() Returns: Lang.Boolean — true if a background event is registered with registerForActivityCompletedEvent(), otherwise false 
 
 Since: API Level 3.0.10 getBackgroundData() as Application.PropertyValueType 
 Get data previously saved by a background process. Data is delivered via AppBase.onBackgroundData() , and is reset to null once data has been delivered to the main process. This method always returns null in the main application's process. See Also: AppBase.onBackgroundData() 
 
 Since: API Level 2.3.0 getGoalEventRegistered(goalType as Application.GoalType ) as Lang.Boolean 
 Get whether a background event is registered with registerForGoalEvent() . Parameters: goalType — ( Application.GoalType ) — An Application.GOAL_TYPE_* value representing the goal type to check for registered background events 
 
 Returns: Lang.Boolean — true if a background event is registered with registerForGoalEvent(), otherwise false 
 
 Since: API Level 3.0.0 getLastTemporalEventTime() as Time.Moment or Null 
 Get the time the last temporal background event was triggered. This is useful for ensuring new events are not scheduled within the five minute minimum time allowed between temporal events. Example: Register a new temporal background event as soon as allowed using Toybox.Background; using Toybox.Time; const FIVE_MINUTES = new Time.Duration(5 * 60); var lastTime = Background.getLastTemporalEventTime(); if (lastTime != null) { // Events scheduled for a time in the past trigger immediately var nextTime = lastTime.add(FIVE_MINUTES); Background.registerForTemporalEvent(nextTime); } else { Background.registerForTemporalEvent(Time.now()); } Returns: Time.Moment — The time the last background event was triggered, but may be null if no previous temporal background event has occurred or if the device app or widget has been started since the event was last triggered 
 
 See Also: registerForTemporalEvent() 
 Toybox.Time 
 
 Since: API Level 2.3.0 getOAuthResponseEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForOAuthResponseEvent() Returns: Lang.Boolean — true if a background event is registered with registerForOAuthResponseEvent(), otherwise false 
 
 Since: API Level 3.0.0 getPhoneAppMessageEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForPhoneAppMessageEvent() Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Boolean — true if a background event is registered with registerForPhoneAppMessageEvent(), otherwise false 
 
 Since: API Level 3.2.0 getPushNotificationEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForPushNotificationEvent() Returns: Lang.Boolean — true if a background event is registered with registerForPushNotificationEvent(), otherwise false 
 
 Since: API Level 3.0.10 getSleepEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForSleepEvent() . Returns: Lang.Boolean — true if a background event is registered with registerForSleepEvent(), otherwise false 
 
 Since: API Level 3.0.0 getStepsEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForStepsEvent() . Returns: Lang.Boolean — true if a background event is registered with registerForStepsEvent(), otherwise false 
 
 Since: API Level 3.0.0 getTemporalEventRegisteredTime() as Time.Moment or Time.Duration or Null 
 Get the Moment or Duration with which a background event is registered by registerForTemporalEvent() . Returns: Time.Moment , Time.Duration — The specific Moment in time at which a background event is registered to trigger, or the interval Duration at which to repeat a background event. May be null if no temporal background event is registered. 
 
 See Also: Toybox.Time 
 
 Since: API Level 3.0.0 getWakeEventRegistered() as Lang.Boolean 
 Get whether a background event is registered with registerForWakeEvent() . Returns: Lang.Boolean — true if a background event is registered with registerForWakeEvent(), otherwise false 
 
 Since: API Level 3.0.0 registerForActivityCompletedEvent() as Void 
 Registers the application to receive an event whenever an activity is completed. Since: API Level 3.0.10 registerForGoalEvent(goalType as Application.GoalType ) as Void 
 Register a background event that triggers when the user reaches a specified goal. Parameters: goalType — ( Application.GoalType ) — An Application.GOAL_TYPE_* value representing the goal type on which to trigger the background event 
 
 Example: Background.registerForGoalEvent(GOAL_TYPE_STEPS); Since: API Level 2.3.0 registerForOAuthResponseEvent() as Void 
 Registers a background event that triggers each time an OAuth login request completes and the token becomes available on the system for use. This event is triggered when a OAuth response is received by the system. Since: API Level 2.3.0 registerForPhoneAppMessageEvent() as Void 
 Registers the application to receive an event whenever a phone app message is received. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 registerForPushNotificationEvent() as Void 
 Registers the application to receive silent and actionable push notifications. Since: API Level 3.0.10 registerForSleepEvent() as Void 
 Register a background event that triggers at the sleep time configured on the device. Since: API Level 2.3.0 registerForStepsEvent() as Void 
 Registers a background event that triggers each time a multiple of 1000 steps is reached. This event is triggered only by device-recorded steps, and will not trigger based on synced steps. Since: API Level 2.3.0 registerForTemporalEvent(time as Time.Moment or Time.Duration ) as Void 
 Register a background event that triggers at a specific time or at a regular interval. Temporal background events may be registered to run at a specific point in time by providing a Moment at which the event should trigger, or may be registered to run at a periodically by specifying an interval Duration . If a temporal event is scheduled for a time in the past, the event will trigger immediately. Temporal events cannot be set to occur less than 5 minutes after the last temporal event occurred. For watch-apps and widgets the 5 minute restriction is cleared on application startup if the event was specified using a Moment . Only one temporal event may be registered at a time. Calling registerForTemporalEvent will overwrite any previously registered temporal events. Parameters: time — ( Time.Moment , Time.Duration ) — The specific Moment in time at which to run a background event, or the interval Duration at which to repeat a background event 
 
 Example: Schedule a background event to run five minutes from now using Toybox.Background; using Toybox.Time; const FIVE_MINUTES = new Time.Duration(5 * 60); var eventTime = Time.now().add(FIVE_MINUTES); Background.registerForTemporalEvent(eventTime); See Also: Toybox.Time 
 
 Since: API Level 2.3.0 Throws: ( Background.InvalidBackgroundTimeException ) — Indicates an application has attempted to schedule a background event which either: * Occurs less than five minutes after the last background event occurred * Has a duration of less than five minutes 
 
 registerForWakeEvent() as Void 
 Register a background event that triggers at the wake time configured on the device. Since: API Level 2.3.0 requestApplicationWake(message as Lang.String ) as Void 
 Display a confirmation dialog requesting to launch the application to which the background task belongs. If the dialog is confirmed, the application will open. If the dialog is declined, the application will not open and the dialog will be dismissed. This request is only valid for widget or device app background tasks, and will be ignored by watch face apps. Background.exit() must be called at some point in the background process after this method is invoked because the confirmation dialog will only trigger after the background task exits. Parameters: message — ( Lang.String ) — The message to display in the dialog when requesting to launch the app 
 
 Example: using Toybox.Background; (:background) class BackgroundServiceDelegate extends System.ServiceDelegate { function initialize() { ServiceDelegate.initialize(); } function onTemporalEvent() { Background.requestApplicationWake("Launch Cool App?"); Background.exit(null); } } See Also: Toybox.System.ServiceDelegate 
 Background.exit() 
 
 Since: API Level 2.3.0 Throws: ( Background.MessageSizeLimitException ) — Indicates the provided message exceeds the size limit (255 Bytes). Note that some characters may be larger than 1 Byte 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [ExitDataSizeLimitException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Background/ExitDataSizeLimitException.html)nClass: Toybox.Background.ExitDataSizeLimitException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Background.ExitDataSizeLimitException 
 
 show all Overview
 Indicates the data payload provided to Background.exit() exceeds the maximum allowed data size (approximately 8 KB). Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [InvalidBackgroundTimeException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Background/InvalidBackgroundTimeException.html)nClass: Toybox.Background.InvalidBackgroundTimeException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Background.InvalidBackgroundTimeException 
 
 show all Overview
 Indicates a invalid time was provided to registerForTemporalEvent() , which may be invalid because it either: Occurs less than five minutes after the last background event occurred 
 Has a duration of less than five minutes 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [MessageSizeLimitException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Background/MessageSizeLimitException.html)nClass: Toybox.Background.MessageSizeLimitException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Background.MessageSizeLimitException 
 
 show all Overview
 Indicates the message provided to Background.requestApplicationWake() exceeds the maximum allowed message size (255 Bytes). Note: Some characters may be larger than 1 Byte. Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:42 AM


# [BluetoothLowEnergy (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy.html)nModule: Toybox.BluetoothLowEnergy
 Overview
 The BluetoothLowEnergy module provides access to Generic BLE communication functionality in the central role. Including the ability to scan for peripheral devices, pair with sensors, and performing GATTC operations on a peripheral This module also provides several sets of constants: Since: API Level 3.1.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Data Field 
 Widget 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Requires Permission: BluetoothLowEnergy 
 
 Classes Under Namespace
 Classes: BleDelegate , Characteristic , Descriptor , Device , DevicePairException , InvalidRequestException , Iterator , ProfileRegistrationException , ScanResult , Service , Uuid , UuidFormatException Constant Summary
 Status
 Since: API Level 3.1.0 Name Value Since Description See Also 
 STATUS_SUCCESS 0 API Level 3.1.0 Operation Successful 
 STATUS_NOT_ENOUGH_RESOURCES 1 API Level 3.1.0 Operation failed due to lack of resources 
 STATUS_READ_FAIL 12 API Level 3.1.0 Read Request Failed 
 STATUS_WRITE_FAIL 14 API Level 3.1.0 Write Request Failed 
 STATUS_GATT_INSUFFICIENT_AUTHENTICATION_FAIL 18 API Level 4.2.5 GATT operation failed due to insufficent authentication 
 STATUS_GATT_INSUFFICIENT_ENCRYPTION_FAIL 19 API Level 4.2.5 GATT operation failed due to insufficent encryption 
 STATUS_ENCRYPTION_BOND_FAIL 100 API Level 4.2.5 Initial Bond Procedure Failed 
 STATUS_ENCRYPTION_PEER_KEYS_LOST 101 API Level 4.2.5 Peer reports that its keys have been lost. 
 STATUS_ENCRYPTION_SECURITY_INSUFFICIENT 102 API Level 4.2.5 Peer Attempted to Reduce Key Security Level from a previous bond 
 ScanState
 Since: API Level 3.1.0 Name Value Since Description See Also 
 SCAN_STATE_OFF 0 API Level 3.1.0 BLE scanning disabled 
 SCAN_STATE_SCANNING 1 API Level 3.1.0 BLE scanning active 
 ConnectionState
 Since: API Level 3.1.0 Name Value Since Description See Also 
 CONNECTION_STATE_DISCONNECTED 0 API Level 3.1.0 Device is Disconnected 
 CONNECTION_STATE_CONNECTED 1 API Level 3.1.0 Device is Connected 
 WriteType
 Since: API Level 3.1.0 Name Value Since Description See Also 
 WRITE_TYPE_WITH_RESPONSE 0 API Level 3.1.0 Write with response 
 WRITE_TYPE_DEFAULT 1 API Level 3.1.0 Write without response (Default write type) 
 Instance Method Summary collapse 
 cccdUuid () as BluetoothLowEnergy.Uuid Retrieves the CCCD Uuid. 
 getAvailableConnectionCount () as Lang.Number Accessor for determining the number of available connections. 
 getBondedDevices () as BluetoothLowEnergy.Iterator Retrieve an Iterator of devices that the Application has bonded with that the system has saved bond information for. 
 getPairedDevices () as BluetoothLowEnergy.Iterator Retrieve an Iterator of all currently paired devices accessible to the Application. 
 longToUuid (mostSigBits as Lang.Long , leastSigBits as Lang.Long ) as BluetoothLowEnergy.Uuid Converts long representation of a UUID to a Uuid object. 
 pairDevice (scanResult as BluetoothLowEnergy.ScanResult ) as BluetoothLowEnergy.Device or Null Pairs a peripheral device seen in scanning with the system. 
 registerProfile (profile as { :uuid as BluetoothLowEnergy.Uuid , :characteristics as Lang.Array &lt;{ :uuid as BluetoothLowEnergy.Uuid , :descriptors as Lang.Array &lt; BluetoothLowEnergy.Uuid &gt; }&gt; }) as Void Registers a Bluetooth Profile Definition Call this function to define all of the Profiles that will be used in the application. 
 setDelegate (delegate as BluetoothLowEnergy.BleDelegate ) as Void Sets the Delegate Handler for Bluetooth Asynchronous Callbacks An application can only have 1 registered delegate. 
 setScanState (scanState as BluetoothLowEnergy.ScanState ) as Void Starts the BLE Scanning Operations Once scanning is started onScanResults() will be called on the registered BleDelegate as Advertising data is received. 
 stringToUuid (str as Lang.String ) as BluetoothLowEnergy.Uuid Converts the String Representation of a UUID into a Uuid Object. 
 unpairDevice (device as BluetoothLowEnergy.Device ) as Void Unpairs a peripheral device from the system If the device is connected the BLE Subsystem will disconnect from the device and will not attempt to reconnect. 
 
 Instance Method Details
 cccdUuid() as BluetoothLowEnergy.Uuid 
 Retrieves the CCCD Uuid Returns: BluetoothLowEnergy.Uuid — Uuid Object for the Client Characteristic Configuration Descriptor 
 
 See Also: Toybox.BluetoothLowEnergy.Uuid 
 
 Since: API Level 3.1.0 getAvailableConnectionCount() as Lang.Number 
 Accessor for determining the number of available connections Returns: Lang.Number — The number of available connections 
 
 Since: API Level 3.1.0 getBondedDevices() as BluetoothLowEnergy.Iterator 
 Retrieve an Iterator of devices that the Application has bonded with that the system has saved bond information for. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 
 Returns: BluetoothLowEnergy.Iterator — Bonded devices available to the App as ScanResults 
 
 Since: API Level 4.2.5 getPairedDevices() as BluetoothLowEnergy.Iterator 
 Retrieve an Iterator of all currently paired devices accessible to the Application Returns: BluetoothLowEnergy.Iterator — All paired devices available to the App 
 
 Since: API Level 3.1.0 longToUuid(mostSigBits as Lang.Long , leastSigBits as Lang.Long ) as BluetoothLowEnergy.Uuid 
 Converts long representation of a UUID to a Uuid object Parameters: mostSigBits — ( Lang.Long ) — Most Significant 64-bits of the UUID 
 leastSigBits — ( Lang.Long ) — Least Significant 64-bits of the UUID 
 
 Returns: BluetoothLowEnergy.Uuid — Uuid Object 
 
 See Also: Toybox.BluetoothLowEnergy.Uuid 
 
 Since: API Level 3.1.0 pairDevice(scanResult as BluetoothLowEnergy.ScanResult ) as BluetoothLowEnergy.Device or Null 
 Pairs a peripheral device seen in scanning with the system. The BLE Subsystem will begin to search for the device specified by the scanResult parameter. Once the device is found and connected, onConnectedStateChanged() will be called on the registered BleDelegate with the associated Device object This pairing does not persist across application instances. Parameters: scanResult — ( BluetoothLowEnergy.ScanResult ) — A scan result for the device that should be paired. Cannot be null . 
 
 Returns: BluetoothLowEnergy.Device — the device that was added to the paired list or null if the device could not be paired. 
 
 Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.DevicePairException ) — Thrown if the maximum number of paired devices has already been reached, or if pairing failed for unkown reason 
 
 registerProfile(profile as { :uuid as BluetoothLowEnergy.Uuid , :characteristics as Lang.Array &lt;{ :uuid as BluetoothLowEnergy.Uuid , :descriptors as Lang.Array &lt; BluetoothLowEnergy.Uuid &gt; }&gt; }) as Void 
 Registers a Bluetooth Profile Definition Call this function to define all of the Profiles that will be used in the application. Only registered characteristics and descriptors will be available when performing GATT operations When the operation is completed, onProfileRegister() will be called on the registered BleDelegate with the UUID and a Status. Registration can fail if too many profiles are registered, the current limit is 3. Parameters: profile — ( Lang.Dictionary ) — Profile Definition. Defines the expected Profile UUID, Profile Characteristics and Characteristic Descriptors. Cannot be null . 
 
 Example: using Toybox.BluetoothLowEnergy; function registerProfiles() { var profile = { // Set the Profile :uuid =&gt; Ble.stringToUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"), :characteristics =&gt; [ { // Define the characteristics :uuid =&gt; Ble.stringToUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"), // UUID of the first characteristic :descriptors =&gt; [ // Descriptors of the characteristic Ble.stringToUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"), Ble.stringToUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx") ] }, { :uuid =&gt; Ble.stringToUuid("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx") }] // UUID of the second characteristic }; // Make the registerProfile call BluetoothLowEnergy.registerProfile( profile ); } Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.ProfileRegistrationException ) — If registration could not be completed 
 
 setDelegate(delegate as BluetoothLowEnergy.BleDelegate ) as Void 
 Sets the Delegate Handler for Bluetooth Asynchronous Callbacks An application can only have 1 registered delegate. Subsequent calls to this function will override the current delegate Parameters: delegate — ( BluetoothLowEnergy.BleDelegate ) — An implementation of the BleDelegate class to register as the handler for callbacks, or null to deregister the current handler. 
 
 Example: using Toybox.BluetoothLowEnergy as Ble; class Handler extends Ble.BleDelegate { function initialize() { BleDelegate.initialize(); } } var handler = new Handler(); Ble.setDelegate(handler); Since: API Level 3.1.0 setScanState(scanState as BluetoothLowEnergy.ScanState ) as Void 
 Starts the BLE Scanning Operations Once scanning is started onScanResults() will be called on the registered BleDelegate as Advertising data is received. Since: API Level 3.1.0 stringToUuid(str as Lang.String ) as BluetoothLowEnergy.Uuid 
 Converts the String Representation of a UUID into a Uuid Object Parameters: str — ( Lang.String ) — String Representation of the Uuid formatted as "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX" 
 
 Returns: BluetoothLowEnergy.Uuid — Uuid Object 
 
 See Also: Toybox.BluetoothLowEnergy.Uuid 
 
 Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.UuidFormatException ) — If string is not in valid format 
 
 unpairDevice(device as BluetoothLowEnergy.Device ) as Void 
 Unpairs a peripheral device from the system If the device is connected the BLE Subsystem will disconnect from the device and will not attempt to reconnect. If the device is not connected the system will stop searching for the device. Parameters: device — ( BluetoothLowEnergy.Device ) — the device to remove from the paired device store. Cannot be null 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [BleDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/BleDelegate.html)nClass: Toybox.BluetoothLowEnergy.BleDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.BleDelegate 
 
 show all Overview
 Delegate Class for Bluetooth Low Energy Callbacks. Applications must extend this Class and register an instance with the BLE Subsystem using setDelegate() to support asynchronous operations. Since: API Level 3.1.0 Instance Method Summary collapse 
 initialize () Constructor. 
 onCharacteristicChanged (characteristic as BluetoothLowEnergy.Characteristic , value as Lang.ByteArray ) as Void After enabling notifications or indications on a characteristic by enabling the appropriate bit of the CCCD of the characteristic this function will be called after every change to the characteristic. 
 onCharacteristicRead (characteristic as BluetoothLowEnergy.Characteristic , status as BluetoothLowEnergy.Status , value as Lang.ByteArray ) as Void After requesting a read operation on a Characteristic with requestRead() , this function will be called when the operation is completed. 
 onCharacteristicWrite (characteristic as BluetoothLowEnergy.Characteristic , status as BluetoothLowEnergy.Status ) as Void After requesting a write operation on a Characteristic with requestWrite() , this function will be called when the operation is completed. 
 onConnectedStateChanged (device as BluetoothLowEnergy.Device , state as BluetoothLowEnergy.ConnectionState ) as Void After pairing a device this will be called after the connection is made. 
 onDescriptorRead (descriptor as BluetoothLowEnergy.Descriptor , status as BluetoothLowEnergy.Status , value as Lang.ByteArray ) as Void After requesting a read operation on a Descriptor with requestRead() this function will be called when the operation is completed. 
 onDescriptorWrite (descriptor as BluetoothLowEnergy.Descriptor , status as BluetoothLowEnergy.Status ) as Void After requesting a write operation on a Descriptor with requestWrite() this function will be called when the operation is completed. 
 onEncryptionStatus (device as BluetoothLowEnergy.Device , status as BluetoothLowEnergy.Status ) as Void After requesting a new bond or reconnecting to a device with a previously established bond, this function will be called with the current encryption status. 
 onProfileRegister (uuid as BluetoothLowEnergy.Uuid , status as BluetoothLowEnergy.Status ) as Void After Registering a UUID this callback will notify of the result of the registration request. 
 onScanResults (scanResults as BluetoothLowEnergy.Iterator ) as Void If a scan is running this will be called when new ScanResults are received. 
 onScanStateChange (scanState as BluetoothLowEnergy.ScanState , status as BluetoothLowEnergy.Status ) as Void When the state of scanning is modified the system will call this function with the new state and a status indicating the result of the last call to setScanState() . 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.1.0 onCharacteristicChanged(characteristic as BluetoothLowEnergy.Characteristic , value as Lang.ByteArray ) as Void 
 After enabling notifications or indications on a characteristic by enabling the appropriate bit of the CCCD of the characteristic this function will be called after every change to the characteristic. Parameters: characteristic — ( BluetoothLowEnergy.Characteristic ) — The characteristic that changed 
 value — ( Lang.ByteArray ) — The updated value of the characteristic 
 
 Since: API Level 3.1.0 onCharacteristicRead(characteristic as BluetoothLowEnergy.Characteristic , status as BluetoothLowEnergy.Status , value as Lang.ByteArray ) as Void 
 After requesting a read operation on a Characteristic with requestRead() , this function will be called when the operation is completed. Parameters: characteristic — ( BluetoothLowEnergy.Characteristic ) — The characteristic that was read. 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the result of the operation 
 value — ( Lang.ByteArray ) — Characteristic value that was read. null if status is not STATUS_SUCCESS 
 
 Since: API Level 3.1.0 onCharacteristicWrite(characteristic as BluetoothLowEnergy.Characteristic , status as BluetoothLowEnergy.Status ) as Void 
 After requesting a write operation on a Characteristic with requestWrite() , this function will be called when the operation is completed. Parameters: characteristic — ( BluetoothLowEnergy.Characteristic ) — The characteristic that was written. 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the result of the operation 
 
 Since: API Level 3.1.0 onConnectedStateChanged(device as BluetoothLowEnergy.Device , state as BluetoothLowEnergy.ConnectionState ) as Void 
 After pairing a device this will be called after the connection is made Parameters: device — ( BluetoothLowEnergy.Device ) — the device state that was changed 
 state — ( BluetoothLowEnergy.ConnectionState ) — A CONNECTION_STATE_* indicating the state of the connection 
 
 Since: API Level 3.1.0 onDescriptorRead(descriptor as BluetoothLowEnergy.Descriptor , status as BluetoothLowEnergy.Status , value as Lang.ByteArray ) as Void 
 After requesting a read operation on a Descriptor with requestRead() this function will be called when the operation is completed. Parameters: descriptor — ( BluetoothLowEnergy.Descriptor ) — The descriptor that was read 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the result of the operation 
 value — ( Lang.ByteArray ) — Descriptor value that was read. null if status is not STATUS_SUCCESS 
 
 Since: API Level 3.1.0 onDescriptorWrite(descriptor as BluetoothLowEnergy.Descriptor , status as BluetoothLowEnergy.Status ) as Void 
 After requesting a write operation on a Descriptor with requestWrite() this function will be called when the operation is completed. Parameters: descriptor — ( BluetoothLowEnergy.Descriptor ) — The descriptor that was written 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the result of the operation 
 
 Since: API Level 3.1.0 onEncryptionStatus(device as BluetoothLowEnergy.Device , status as BluetoothLowEnergy.Status ) as Void 
 After requesting a new bond or reconnecting to a device with a previously established bond, this function will be called with the current encryption status. Parameters: device — ( BluetoothLowEnergy.Device ) — the device state that was changed 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the status of the encryption operation. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 
 Since: API Level 4.2.5 onProfileRegister(uuid as BluetoothLowEnergy.Uuid , status as BluetoothLowEnergy.Status ) as Void 
 After Registering a UUID this callback will notify of the result of the registration request Parameters: uuid — ( BluetoothLowEnergy.Uuid ) — Profile UUID that this callback is related to 
 status — ( BluetoothLowEnergy.Status ) — A STATUS_* indicating the result of a call to registerProfile() 
 
 Since: API Level 3.1.0 onScanResults(scanResults as BluetoothLowEnergy.Iterator ) as Void 
 If a scan is running this will be called when new ScanResults are received Parameters: scanResults — ( BluetoothLowEnergy.Iterator ) — An iterator of ScanResult objects for all of the advertisements seen since the last call to this callback 
 
 Since: API Level 3.1.0 onScanStateChange(scanState as BluetoothLowEnergy.ScanState , status as BluetoothLowEnergy.Status ) as Void 
 When the state of scanning is modified the system will call this function with the new state and a status indicating the result of the last call to setScanState() . Parameters: scanState — ( BluetoothLowEnergy.ScanState ) — A SCAN_STATE_* enum value indicating the new Scan State of the system 
 status — ( BluetoothLowEnergy.Status ) — The STATUS_* result of the last call to setScanState() 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [Characteristic (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Characteristic.html)nClass: Toybox.BluetoothLowEnergy.Characteristic
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Characteristic 
 
 show all Overview
 Encapsulates a characteristic on a service Since: API Level 3.1.0 Instance Method Summary collapse 
 getDescriptor (uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Descriptor or Null Retrieves the Descriptor with a specified UUID. 
 getDescriptors () as BluetoothLowEnergy.Iterator Retrieves an Iterator over the Descriptors discovered in the Characteristic This will only provide descriptors that have been registered using registerProfile() . 
 getService () as BluetoothLowEnergy.Service Retrieves the Characteristic's Service Retrieve the Service that this characteristic belongs to. 
 getUuid () as BluetoothLowEnergy.Uuid Return the UUID of the Characteristic. 
 requestRead () as Void Requests a read operation on the characteristic Once the operation is completed, onCharacteristicRead() will be called on the registered BleDelegate with the status of the operation Support for long reads is not implemented. 
 requestWrite (value as Lang.ByteArray , options as { :writeType as BluetoothLowEnergy.WriteType }) as Void Requests a write operation Once the operation is completed, onCharacteristicWrite() will be called on the registered BleDelegate with the status of the operation Support for long writes is not implemented. 
 
 Instance Method Details
 getDescriptor(uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Descriptor or Null 
 Retrieves the Descriptor with a specified UUID Parameters: uuid — ( BluetoothLowEnergy.Uuid ) — the UUID to search for. 
 
 Returns: BluetoothLowEnergy.Descriptor — The Descriptor represented by the UUID provided or, null if the descriptor does not exist or the UUID has not be registered. 
 
 Since: API Level 3.1.0 getDescriptors() as BluetoothLowEnergy.Iterator 
 Retrieves an Iterator over the Descriptors discovered in the Characteristic This will only provide descriptors that have been registered using registerProfile() Returns: BluetoothLowEnergy.Iterator — Iterator of Descriptor objects for the descriptors discovered in the Characteristic 
 
 Since: API Level 3.1.0 getService() as BluetoothLowEnergy.Service 
 Retrieves the Characteristic's Service Retrieve the Service that this characteristic belongs to Returns: BluetoothLowEnergy.Service — Parent characteristic object 
 
 Since: API Level 3.1.0 getUuid() as BluetoothLowEnergy.Uuid 
 Return the UUID of the Characteristic Returns: BluetoothLowEnergy.Uuid — The UUID of the Characteristic 
 
 Since: API Level 3.1.0 requestRead() as Void 
 Requests a read operation on the characteristic Once the operation is completed, onCharacteristicRead() will be called on the registered BleDelegate with the status of the operation Support for long reads is not implemented. Since: API Level 3.1.0 requestWrite(value as Lang.ByteArray , options as { :writeType as BluetoothLowEnergy.WriteType }) as Void 
 Requests a write operation Once the operation is completed, onCharacteristicWrite() will be called on the registered BleDelegate with the status of the operation Support for long writes is not implemented. Requesting a write on a characteristic longer than 20 bytes will cause an InvalidRequestException Parameters: value — ( Lang.ByteArray ) — New value to store. 
 options — ( Lang.Dictionary ) — A Dictionary containing write options :writeType — ( BluetoothLowEnergy.WriteType ) — A WRITE_TYPE_* indicating the write type to use when writing to the characteristic. Cannot be null . 
 
 
 
 Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.InvalidRequestException ) — if the request is invalid 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Descriptor (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Descriptor.html)nClass: Toybox.BluetoothLowEnergy.Descriptor
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Descriptor 
 
 show all Overview
 Encapsulates a Descriptor from on a Characteristic Since: API Level 3.1.0 Instance Method Summary collapse 
 getCharacteristic () as BluetoothLowEnergy.Characteristic Retrieves the Descriptors Characteristic Retrieve the Characteristic that this descriptor belongs to. 
 getUuid () as BluetoothLowEnergy.Uuid Returns the UUID of the Descriptor. 
 requestRead () as Void Requests a read operation on the descriptor Once the operation is completed, onDescriptorRead() will be called on the registered BleDelegate with the status of the operation. 
 requestWrite (value as Lang.ByteArray ) as Void Requests a write operation Writes the locally stored value to the remote descriptor. 
 
 Instance Method Details
 getCharacteristic() as BluetoothLowEnergy.Characteristic 
 Retrieves the Descriptors Characteristic Retrieve the Characteristic that this descriptor belongs to Returns: BluetoothLowEnergy.Characteristic — Parent characteristic object 
 
 Since: API Level 3.1.0 getUuid() as BluetoothLowEnergy.Uuid 
 Returns the UUID of the Descriptor Returns: BluetoothLowEnergy.Uuid — the UUID of the Descriptor 
 
 Since: API Level 3.1.0 requestRead() as Void 
 Requests a read operation on the descriptor Once the operation is completed, onDescriptorRead() will be called on the registered BleDelegate with the status of the operation Since: API Level 3.1.0 requestWrite(value as Lang.ByteArray ) as Void 
 Requests a write operation Writes the locally stored value to the remote descriptor. Once the operation is completed, onDescriptorWrite() will be called on the registered BleDelegate with the status of the operation Support for long writes is not implemented. Requesting a write on a characteristic longer than 20 bytes will cause an InvalidRequestException Parameters: value — ( Lang.ByteArray ) — New value to store. 
 
 Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.InvalidRequestException ) — if the request is invalid 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [Device (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Device.html)nClass: Toybox.BluetoothLowEnergy.Device
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Device 
 
 show all Overview
 Represents a Bluetooth Low Energy Device that has been paired with the system. This class cannot be instantiated, access to paired system devices is done through the use of getPairedDevices() or by calling pairDevice() after receiving a ScanResult for a device Since: API Level 3.1.0 Instance Method Summary collapse 
 getName () as Lang.String or Null Retrieves the Name of the sensor according to the device name that is available in the GAP Service. 
 getService (uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Service or Null Retrieves the service with a specified UUID If access to a specific service is required, use this function to directly access the service based on a UUID. 
 getServices () as BluetoothLowEnergy.Iterator Retrieves an Iterator over the services provided by the device. 
 isBonded () as Lang.Boolean Gets the Bonded State of the Device. 
 isConnected () as Lang.Boolean Gets the connected status of the device. 
 requestBond () as Void Requests that a bond is formed with the Device If the device is not currently bonded this will initiate the bonding procedure. 
 
 Instance Method Details
 getName() as Lang.String or Null 
 Retrieves the Name of the sensor according to the device name that is available in the GAP Service Returns: Lang.String — the name of the device. null if the device is not connected or name has not been received yet. 
 
 Since: API Level 3.1.0 getService(uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Service or Null 
 Retrieves the service with a specified UUID If access to a specific service is required, use this function to directly access the service based on a UUID. Parameters: uuid — ( BluetoothLowEnergy.Uuid ) — The UUID of the service to search for 
 
 Returns: BluetoothLowEnergy.Service — The service represented by the UUID if the service exists or, null if the service does not exist or the UUID has not been registered 
 
 Since: API Level 3.1.0 getServices() as BluetoothLowEnergy.Iterator 
 Retrieves an Iterator over the services provided by the device. This will only provide Services that have been registered using registerProfile() Returns: BluetoothLowEnergy.Iterator — Iterator of Service objects provided by a device. 
 
 Since: API Level 3.1.0 isBonded() as Lang.Boolean 
 Gets the Bonded State of the Device Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 
 Returns: Lang.Boolean — true if the device is bonded false if the device is not bonded 
 
 Since: API Level 4.2.5 isConnected() as Lang.Boolean 
 Gets the connected status of the device Returns: Lang.Boolean — true if the sensor is connected false if sensor is disconnected 
 
 Since: API Level 3.1.0 requestBond() as Void 
 Requests that a bond is formed with the Device If the device is not currently bonded this will initiate the bonding procedure. Once the operation is completed, onEncryptionStatus() will be called on the registered BleDelegate with the status of the operation Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 
 Since: API Level 4.2.5 Throws: ( BluetoothLowEnergy.InvalidRequestException ) — if the device is not connected or is already bonded. 
 
 Generated Dec 11, 2024, 8:58:42 AM


# [DevicePairException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/DevicePairException.html)nClass: Toybox.BluetoothLowEnergy.DevicePairException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.BluetoothLowEnergy.DevicePairException 
 
 show all Overview
 This exception indicates that attempting to pair a device has failed See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [InvalidRequestException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/InvalidRequestException.html)nClass: Toybox.BluetoothLowEnergy.InvalidRequestException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.BluetoothLowEnergy.InvalidRequestException 
 
 show all Overview
 This exception indicates that a Bluetooth Request is not valid See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [Iterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Iterator.html)nClass: Toybox.BluetoothLowEnergy.Iterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Iterator 
 
 show all Overview
 Content iterator for Bluetooth Low Energy Data Since: API Level 3.1.0 Instance Method Summary collapse 
 next () as Lang.Object or Null Get the next item in the list. 
 
 Instance Method Details
 next() as Lang.Object or Null 
 Get the next item in the list Returns: Lang.Object — The next item, or null if end of list 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [ProfileRegistrationException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/ProfileRegistrationException.html)nClass: Toybox.BluetoothLowEnergy.ProfileRegistrationException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.BluetoothLowEnergy.ProfileRegistrationException 
 
 show all Overview
 This exception indicates that the profile registration failed due to developer error See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [ScanResult (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/ScanResult.html)nClass: Toybox.BluetoothLowEnergy.ScanResult
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.ScanResult 
 
 show all Overview
 Encapsulates an Advertisement seen during scanning. Cannot be instantiated. Used as an argument to pairDevice() to add a new device to the System's Paired Devices list Since: API Level 3.1.0 Instance Method Summary collapse 
 equals (other as Lang.Object or Null ) as Lang.Boolean Compares the ScanResult to another object for equality. 
 getAppearance () as Lang.Number Gets the Advertised Appearance of the sensor. 
 getDeviceName () as Lang.String or Null Gets the advertised device name If no device name is advertised this function will return null . 
 getManufacturerSpecificData (manufacturerId as Lang.Number ) as Lang.ByteArray Gets Manufacturer Specific Data for a given Manufacturer Manufacturer Specific Data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.11. 
 getManufacturerSpecificDataIterator () as BluetoothLowEnergy.Iterator Gets an iterator over all of the Manufacturer Specific Data AD Entries in the advertising packet Manufacturer Specific Data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.11. 
 getRawData () as Lang.ByteArray Gets the Raw Data that was retrieved in the advertising packet. 
 getRssi () as Lang.Number Gets the received signal strength indication (RSSI) value of the received advertisement. 
 getServiceData (uuid as BluetoothLowEnergy.Uuid ) as Lang.ByteArray Gets Service Data for a specific UUID Service data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.10. 
 getServiceUuids () as BluetoothLowEnergy.Iterator Gets service UUIDs advertised by the device If the advertising data contains any service UUID values. 
 hasAddress (address as Lang.ByteArray or Lang.String ) as Lang.Boolean Check that advertised device BLE address matches. 
 isSameDevice (other as BluetoothLowEnergy.ScanResult ) as Lang.Boolean Determines if another scan result represents the same device as another. 
 
 Instance Method Details
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Compares the ScanResult to another object for equality Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if other is a scan result for the same device, otherwise false 
 
 Since: API Level 3.2.0 getAppearance() as Lang.Number 
 Gets the Advertised Appearance of the sensor Returns: Lang.Number — A number representing the appearance of the sensor 
 
 Since: API Level 3.1.0 getDeviceName() as Lang.String or Null 
 Gets the advertised device name If no device name is advertised this function will return null Returns: Lang.String — The device name if present or null otherwise 
 
 Since: API Level 3.1.0 getManufacturerSpecificData(manufacturerId as Lang.Number ) as Lang.ByteArray 
 Gets Manufacturer Specific Data for a given Manufacturer Manufacturer Specific Data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.11 Parameters: manufacturerId — ( Lang.Number ) — The manufacturer id to retrieve the manufacturer specific data for. 
 
 Returns: Lang.ByteArray — Manufacturer Specific Data. 
 
 Since: API Level 3.1.0 getManufacturerSpecificDataIterator() as BluetoothLowEnergy.Iterator 
 Gets an iterator over all of the Manufacturer Specific Data AD Entries in the advertising packet Manufacturer Specific Data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.11 Returns: BluetoothLowEnergy.Iterator — Iterator of Dictionary objects for each AD entry. Dictionary will have keys for :companyId and :data 
 
 Since: API Level 3.1.0 getRawData() as Lang.ByteArray 
 Gets the Raw Data that was retrieved in the advertising packet Returns: Lang.ByteArray — Raw bytes that were received in the advertising packet 
 
 Since: API Level 3.1.0 getRssi() as Lang.Number 
 Gets the received signal strength indication (RSSI) value of the received advertisement. Returns: Lang.Number — the RSSI Value of the advertisement associated with the scan result. In dBM 
 
 Since: API Level 3.1.0 getServiceData(uuid as BluetoothLowEnergy.Uuid ) as Lang.ByteArray 
 Gets Service Data for a specific UUID Service data is decoded according to the BLE Core Specification V4.0 Volume 3 Part C Section 18.10 Parameters: uuid — ( BluetoothLowEnergy.Uuid ) — Service UUID to search for 
 
 Returns: Lang.ByteArray — Service Data for a specific UUID. 
 
 Since: API Level 3.1.0 getServiceUuids() as BluetoothLowEnergy.Iterator 
 Gets service UUIDs advertised by the device If the advertising data contains any service UUID values. They can be accessed through this iterator. If there are no advertised UUIDs this function will return an empty iterator. Returns: BluetoothLowEnergy.Iterator — Iterator of Uuid objects advertised in the ScanResult 
 
 Since: API Level 3.1.0 hasAddress(address as Lang.ByteArray or Lang.String ) as Lang.Boolean 
 Check that advertised device BLE address matches Parameters: address — ( Lang.ByteArray , Lang.String ) — Address to check for as a big-endian byte array or a string in the format "00:01:02:03:04:05" 
 
 Returns: Lang.Boolean — true if the parameter provided is the same as the address associated with this ScanResult, otherwise false 
 
 Since: API Level 3.2.0 isSameDevice(other as BluetoothLowEnergy.ScanResult ) as Lang.Boolean 
 Determines if another scan result represents the same device as another. Parameters: other — ( BluetoothLowEnergy.ScanResult ) — The other scan result to compare 
 
 Returns: Lang.Boolean — Indicating if this scan result represents the same device as another 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [Service (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Service.html)nClass: Toybox.BluetoothLowEnergy.Service
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Service 
 
 show all Overview
 Encapsulates a service provided by a device Since: API Level 3.1.0 Instance Method Summary collapse 
 getCharacteristic (uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Characteristic or Null Retrieves the Characteristic with a specified UUID. 
 getCharacteristics () as BluetoothLowEnergy.Iterator Retrieves an Iterator over the Characteristics in a Service This will only provide Characteristics that have been registered using registerProfile() . 
 getDevice () as BluetoothLowEnergy.Device Retrieves the Service's Device Retrieve the Device that this service belongs to. 
 getUuid () as BluetoothLowEnergy.Uuid Returns the UUID of the service. 
 
 Instance Method Details
 getCharacteristic(uuid as BluetoothLowEnergy.Uuid ) as BluetoothLowEnergy.Characteristic or Null 
 Retrieves the Characteristic with a specified UUID Parameters: uuid — ( BluetoothLowEnergy.Uuid ) — the UUID to search for. 
 
 Returns: BluetoothLowEnergy.Characteristic — The Characteristic represented by the UUID provided or, null if the characteristic does not exist or the UUID has not be registered. 
 
 Since: API Level 3.1.0 getCharacteristics() as BluetoothLowEnergy.Iterator 
 Retrieves an Iterator over the Characteristics in a Service This will only provide Characteristics that have been registered using registerProfile() Returns: BluetoothLowEnergy.Iterator — Iterator of Characteristic objects for the Characteristics discovered in the Service 
 
 Since: API Level 3.1.0 getDevice() as BluetoothLowEnergy.Device 
 Retrieves the Service's Device Retrieve the Device that this service belongs to Returns: BluetoothLowEnergy.Device — Parent characteristic object 
 
 Since: API Level 3.1.0 getUuid() as BluetoothLowEnergy.Uuid 
 Returns the UUID of the service Returns: BluetoothLowEnergy.Uuid — the UUID of the service 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [Uuid (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/Uuid.html)nClass: Toybox.BluetoothLowEnergy.Uuid
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.BluetoothLowEnergy.Uuid 
 
 show all Overview
 Encapsulates a Bluetooth UUID and provides various helper methods for interacting with UUID within the Bluetooth Low Energy Subsystem Since: API Level 3.1.0 Instance Method Summary collapse 
 equals (other as Lang.Object or Null ) as Lang.Boolean Compares the Uuid to another object for equality. 
 hashCode () as Lang.Number Retrieve a hash code of the UUID Optimized for BLE standard. 
 toByteArray () as Lang.ByteArray Convert UUID to a Little Endian Byte Array. 
 toString () as Lang.String Convert a UUID to a String. 
 
 Instance Method Details
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Compares the Uuid to another object for equality Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if the parameter provided is an equivalent Uuid or equivalent UUID String, false otherwise. 
 
 Since: API Level 3.1.0 Throws: ( BluetoothLowEnergy.UuidFormatException ) 
 
 hashCode() as Lang.Number 
 Retrieve a hash code of the UUID Optimized for BLE standard Since: API Level 3.1.0 toByteArray() as Lang.ByteArray 
 Convert UUID to a Little Endian Byte Array Returns: Lang.ByteArray — A Byte Array Representation of the UUID 
 
 Since: API Level 3.1.0 toString() as Lang.String 
 Convert a UUID to a String Returns: Lang.String — A String representation of the UUID 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [UuidFormatException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/BluetoothLowEnergy/UuidFormatException.html)nClass: Toybox.BluetoothLowEnergy.UuidFormatException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.BluetoothLowEnergy.UuidFormatException 
 
 show all Overview
 This exception indicates that the provided initializer for the Uuid was not valid See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:42 AM


# [Communications (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications.html)nModule: Toybox.Communications
 Overview
 The Communications Module provides tools for communication. With the Communications module, widgets and apps will be able to communicate with a mobile phone via Bluetooth Low Energy (BLE). The mobile phone may be sharing data with the device, or it may act as a bridge between the app and the Internet. This allows the device to become part of the Internet of Things. Note: This module was made available to foreground data fields with API 5.0.0 Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Data Field 
 Widget 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Requires Permission: Communications 
 
 Classes Under Namespace
 Classes: ConnectionListener , MailboxIterator , Message , OAuthMessage , PhoneAppMessage , SyncDelegate Constant Summary
 Error
 Since: API Level 1.0.0 Name Value Since Description See Also 
 UNKNOWN_ERROR 0 API Level 1.0.0 An unknown error has occurred. 
 BLE_ERROR -1 API Level 1.0.0 A generic BLE error has occurred. 
 BLE_HOST_TIMEOUT -2 API Level 1.0.0 We timed out waiting for a response from the host. 
 BLE_SERVER_TIMEOUT -3 API Level 1.0.0 We timed out waiting for a response from a server. 
 BLE_NO_DATA -4 API Level 1.0.0 Response contained no data. 
 BLE_REQUEST_CANCELLED -5 API Level 1.0.0 The request was cancelled at the request of the system. 
 BLE_QUEUE_FULL -101 API Level 1.0.0 Too many requests have been made. 
 BLE_REQUEST_TOO_LARGE -102 API Level 1.0.0 Serialized input data for the request was too large. 
 BLE_UNKNOWN_SEND_ERROR -103 API Level 1.0.0 Send failed for an unknown reason. 
 BLE_CONNECTION_UNAVAILABLE -104 API Level 1.0.0 No BLE connection is available. 
 INVALID_HTTP_HEADER_FIELDS_IN_REQUEST -200 API Level 1.0.0 Request contained invalid http header fields. 
 INVALID_HTTP_BODY_IN_REQUEST -201 API Level 1.0.0 Request contained an invalid http body. 
 INVALID_HTTP_METHOD_IN_REQUEST -202 API Level 1.0.0 Request used an invalid http method. 
 NETWORK_REQUEST_TIMED_OUT -300 API Level 1.0.0 Request timed out before a response was received. 
 INVALID_HTTP_BODY_IN_NETWORK_RESPONSE -400 API Level 1.0.0 Response body data is invalid for the request type. 
 INVALID_HTTP_HEADER_FIELDS_IN_NETWORK_RESPONSE -401 API Level 1.0.0 Response contained invalid http header fields. 
 NETWORK_RESPONSE_TOO_LARGE -402 API Level 1.0.0 Serialized response was too large. 
 NETWORK_RESPONSE_OUT_OF_MEMORY -403 API Level 3.0.0 Ran out of memory processing network response. 
 STORAGE_FULL -1000 API Level 2.2.0 Filesystem too full to store response data. 
 SECURE_CONNECTION_REQUIRED -1001 API Level 2.3.0 Indicates an https connection is required for the request. 
 UNSUPPORTED_CONTENT_TYPE_IN_RESPONSE -1002 API Level 2.4.1 Content type given in response is not supported or does not match what is expected. 
 REQUEST_CANCELLED -1003 API Level 2.4.2 Http request was cancelled by the system. 
 REQUEST_CONNECTION_DROPPED -1004 API Level 3.0.0 Connection was lost before a response could be obtained. 
 UNABLE_TO_PROCESS_MEDIA -1005 API Level 3.0.2 Downloaded media file was unable to be read. 
 UNABLE_TO_PROCESS_IMAGE -1006 API Level 3.0.3 Downloaded image file was unable to be processed. 
 UNABLE_TO_PROCESS_HLS -1007 API Level 3.0.10 HLS content could not be downloaded. Most often occurs when requested and provided bit rates do not match. 
 TokenResult
 Since: API Level 1.0.0 Name Value Since Description See Also 
 OAUTH_RESULT_TYPE_URL 0 API Level 1.3.0 How the OAuth token will be returned in the final step. 
 SigningMethod
 Since: API Level 1.0.0 Name Value Since Description See Also 
 OAUTH_SIGNING_METHOD_HMAC_SHA1 0 API Level 1.3.0 How the OAuth request will be signed 
 HttpRequestMethod
 Since: API Level 1.0.0 Name Value Since Description See Also 
 HTTP_REQUEST_METHOD_GET 1 API Level 1.2.0 Specifies a request be executed using the GET method. 
 HTTP_REQUEST_METHOD_PUT 2 API Level 1.2.0 Specifies a request be executed using the PUT method. 
 HTTP_REQUEST_METHOD_POST 3 API Level 1.2.0 Specifies a request be executed using the POST method. 
 HTTP_REQUEST_METHOD_DELETE 4 API Level 1.2.0 Specifies a request be executed using the DELETE method. 
 HttpResponseContentType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 HTTP_RESPONSE_CONTENT_TYPE_JSON 0 API Level 1.3.0 Content type specifier for response is expected to be a json type. Content type string must be "application/json". 
 HTTP_RESPONSE_CONTENT_TYPE_URL_ENCODED 1 API Level 1.3.0 Content type specifier for response is expected to indicate url encoding. Content type string must be "application/x-www-form-urlencoded". 
 HTTP_RESPONSE_CONTENT_TYPE_GPX 2 API Level 2.2.0 Content type specifier for response is expected to be a gpx type. 
 HTTP_RESPONSE_CONTENT_TYPE_FIT 3 API Level 2.2.0 Content type specifier for response is expected to be a FIT type. 
 HTTP_RESPONSE_CONTENT_TYPE_AUDIO 4 API Level 3.0.0 Content type specifier for response is expected to be an audio type. Content type string must be of the "audio/*" format. 
 HTTP_RESPONSE_CONTENT_TYPE_TEXT_PLAIN 5 API Level 3.0.0 Content type specifier for response is expected to be plain text type. Content type string must be "text/plain" 
 HTTP_RESPONSE_CONTENT_TYPE_HLS_DOWNLOAD 6 API Level 3.0.10 Content type specifier for response is expected to be an HLS data type. Content type string must be either "application/vnd.apple.mpegurl" or "audio/mpegurl". 
 HTTP_RESPONSE_CONTENT_TYPE_ANIMATION_MANIFEST 7 API Level 3.1.0 Content type specifier for response is expected to be a CIQ animation manifest data type. Content type string must be "application/vnd.garmin.connectiq.animation.manifest". 
 HTTP_RESPONSE_CONTENT_TYPE_ANIMATION 8 API Level 3.1.0 Content type specifier for response is expected to be a CIQ animation data type. Content type string must be "image/vnd.garmin.connectiq.animation". 
 WifiConnectionStatus
 Since: API Level 1.0.0 Name Value Since Description See Also 
 WIFI_CONNECTION_STATUS_LOW_BATTERY 1 API Level 3.2.0 Specifies an error condition, battery is too low to start a WIFI connection. 
 WIFI_CONNECTION_STATUS_NO_ACCESS_POINTS 2 API Level 3.2.0 Specifies an error condition, no access-point is stored on the device. 
 WIFI_CONNECTION_STATUS_UNSUPPORTED 3 API Level 3.2.0 Specifies an error condition, WIFI is not supported on current device. 
 WIFI_CONNECTION_STATUS_USER_DISABLED 4 API Level 3.2.0 Specifies an error condition, WIFI is disabled by user. 
 WIFI_CONNECTION_STATUS_BATTERY_SAVER_ACTIVE 5 API Level 3.2.0 Specifies an error condition, WIFI is disabled by battery saver. 
 WIFI_CONNECTION_STATUS_STEALTH_MODE_ACTIVE 6 API Level 3.2.0 Specifies an error condition, WIFI is disabled by stealth mode. 
 WIFI_CONNECTION_STATUS_AIRPLANE_MODE_ACTIVE 7 API Level 3.2.0 Specifies an error condition, WIFI is disabled by airplane mode. 
 WIFI_CONNECTION_STATUS_POWERED_DOWN 8 API Level 3.2.0 Specifies an error condition, WIFI is disabled by the device. 
 WIFI_CONNECTION_STATUS_UNKNOWN 9 API Level 3.2.0 Specifies an error condition, WIFI is not usable but status is unknown. 
 WIFI_CONNECTION_STATUS_CANNOT_CONNECT_TO_ACCESS_POINT 10 API Level 3.3.0 Specifies an error condition, WIFI can not connect to saved AccessPoint. 
 WIFI_CONNECTION_STATUS_TRANSFER_ALREADY_IN_PROGRESS 11 API Level 3.3.0 Specifies an error condition, WIFI transfer already in progress 
 HttpRequestContentType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 REQUEST_CONTENT_TYPE_URL_ENCODED 0 API Level 1.2.0 Specifies a content type of application/x-www-form-urlencoded 
 REQUEST_CONTENT_TYPE_JSON 1 API Level 1.2.0 Specifies a content type of application/json 
 PackingFormat
 Image packing format used for image request. The packing format describes the encoding a requested image should use when being transmitted. The encoding used affects the transfer size, decoding time, and image quality. Since: API Level 1.0.0 Name Value Since Description See Also 
 PACKING_FORMAT_DEFAULT 0 API Level 4.2.0 Image data is encoded in the device native format, a lossless encoding that available on all devices. It is very efficient to decode, but often results in large transfer sizes so is slow to download. 
 PACKING_FORMAT_YUV 1 API Level 4.2.0 Image data is encoded in YUV format. This is a lossy encoding that is compressed, and is fast to load. It is ideal for photographic imagery with transparency. 
 PACKING_FORMAT_PNG 2 API Level 4.2.0 Image data is encoded in PNG format. This is a lossless encoding that is compressed, but is relatively slow to load. It is ideal for non-photographic imagery. 
 PACKING_FORMAT_JPG 3 API Level 4.2.0 Image data is encoded in JPG format. This is a lossy encoding that is compressed, and is reasonably fast to load. It is ideal for photographic imagery. 
 Dithering
 Since: API Level 1.0.0 Name Value Since Description See Also 
 IMAGE_DITHERING_NONE 1 API Level 1.2.0 Do not apply dithering to an image. 
 IMAGE_DITHERING_FLOYD_STEINBERG 2 API Level 1.2.0 Apply Floyd-Steinberg dithering to an image. 
 Typedef Summary collapse 
 PhoneMessageCallback as Lang.Method (msg as Communications.PhoneAppMessage ) as Void 
 
 Instance Method Summary collapse 
 cancelAllRequests () as Void Cancel all pending JSON and Image requests. 
 checkWifiConnection (connectionStatusCallback as Lang.Method (result as { :wifiAvailable as Lang.Boolean , :errorCode as Communications.WifiConnectionStatus }) as Void ) as Void Checks if an internet-enabled WIFI access point is visible and can be connected to. 
 emptyMailbox () as Void deprecated Clear the contents of the mailbox. 
 encodeURL (url as Lang.String ) as Lang.String Convert a URL String into a percent-encoded string. 
 generateSignedOAuthHeader (url as Lang.String , params as Lang.Dictionary &lt; Lang.String , Lang.Object &gt;, requestMethod as Communications.HttpRequestMethod , signatureMethod as Communications.SigningMethod , token as Lang.String or Null , tokenSecret as Lang.String , consumerKey as Lang.String , consumerSecret as Lang.String ) as Lang.String Generate the value for the "Authorization" header in an OAuth 1.0a request. 
 getMailbox () as Communications.MailboxIterator deprecated Get the MailboxIterator for this Application's mailbox. 
 makeImageRequest (url as Lang.String , parameters as Lang.Dictionary or Null , options as { :palette as Lang.Array &lt; Lang.Number &gt;, :maxWidth as Lang.Number , :maxHeight as Lang.Number , :dithering as Communications.Dithering , :packingFormat as Communications.PackingFormat }, responseCallback as Lang.Method (responseCode as Lang.Number , data as WatchUi.BitmapResource or Graphics.BitmapReference or Null ) as Void ) as Void Initiate an image download request. 
 makeJsonRequest (url as Lang.String , parameters as Lang.Dictionary &lt; Lang.Object , Lang.Object &gt; or Null , options as { :method as Communications.HttpRequestMethod , :headers as Lang.Dictionary } or Null , responseCallback as Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null ) as Void ) as Void deprecated Initiate a download request. 
 makeOAuthRequest (requestUrl as Lang.String , requestParams as Lang.Dictionary , resultUrl as Lang.String , resultType as Communications.TokenResult , resultKeys as Lang.Dictionary &lt; Lang.String , Lang.String &gt;) as Void Request an OAuth sign-in through Garmin Connect Mobile. 
 makeWebRequest (url as Lang.String , parameters as Lang.Dictionary &lt; Lang.Object , Lang.Object &gt; or Null , options as { :method as Communications.HttpRequestMethod , :headers as Lang.Dictionary , :responseType as Communications.HttpResponseContentType , :context as Lang.Object or Null , :maxBandwidth as Lang.Number , :fileDownloadProgressCallback as Lang.Method (totalBytesTransferred as Lang.Number , fileSize as Lang.Number or Null ) as Void } or Null , responseCallback as Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null ) as Void or Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null , context as Lang.Object ) as Void ) as Void Initiate a download request. 
 notifySyncComplete (errorMessage as Lang.String or Null ) as Void Send a system notification to indicate that the sync completed. 
 notifySyncProgress (percentageComplete as Lang.Number ) as Void Send a system notification to indicate overall sync progress. 
 openWebPage (url as Lang.String , params as Lang.Dictionary or Null , options as Lang.Dictionary or Null ) as Void Request that GCM issue a phone notification that will open a web page. 
 registerForOAuthMessages (method as Lang.Method (data as Communications.OAuthMessage ) as Void ) as Void Register a callback for receiving OAuth messages. 
 registerForPhoneAppMessages (method as Communications.PhoneMessageCallback or Null ) as Void Register a callback for receiving Phone App messages. 
 setMailboxListener (listener as Lang.Method (mailboxIterator as Communications.MailboxIterator ) as Void ) as Void deprecated Add a listener for mailbox events. 
 startSync () as Void Exit the AppBase and launch it in sync mode. 
 startSync2 (options as { :message as Lang.String } or Null ) as Void Exit the AppBase and launch it in sync mode with the provided message. 
 transmit (content as Application.PersistableType , options as Lang.Dictionary or Null , listener as Communications.ConnectionListener ) as Void Send data across the the BLE link. 
 
 Typedef Details
 PhoneMessageCallback as Lang.Method (msg as Communications.PhoneAppMessage ) as Void 
 Since: API Level 1.0.0 Instance Method Details
 cancelAllRequests() as Void 
 Cancel all pending JSON and Image requests. The number of active requests running in parallel is limited in the Connect IQ platform. This call will cancel all outstanding requests. Since: API Level 1.2.0 checkWifiConnection(connectionStatusCallback as Lang.Method (result as { :wifiAvailable as Lang.Boolean , :errorCode as Communications.WifiConnectionStatus }) as Void ) as Void 
 Checks if an internet-enabled WIFI access point is visible and can be connected to Parameters: connectionStatusCallback — ( Lang.Method ) — A callback that will be invoked after the connection test has completed. This callback accepts a single dictionary parameter. This dictionary has two keys: :wifiAvailable true if an access point with internet access could be connected to, false otherwise 
 :errorCode If :wifiAvailable is false the value will be a WIFI_CONNECTION_STATUS_* indicating why the connection is not available. 
 
 
 
 Since: API Level 3.2.0 emptyMailbox() as Void 
 This has been deprecated This method may be removed after System 4. Clear the contents of the mailbox. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 130 Plus
 Edge® 130
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Communications.registerForPhoneAppMessages() 
 
 Since: API Level 1.0.0 encodeURL(url as Lang.String ) as Lang.String 
 Convert a URL String into a percent-encoded string. The reserved characters in the string will be replaced with their corresponding hex-value pairs. This follows the URI-encoding scheme as detailed by RFC 3986. Parameters: url — ( Lang.String ) — The URL String to be encoded 
 
 Returns: Lang.String — A percent-encoded String 
 
 See Also: RFC 3986 
 
 Since: API Level 1.1.2 generateSignedOAuthHeader(url as Lang.String , params as Lang.Dictionary &lt; Lang.String , Lang.Object &gt;, requestMethod as Communications.HttpRequestMethod , signatureMethod as Communications.SigningMethod , token as Lang.String or Null , tokenSecret as Lang.String , consumerKey as Lang.String , consumerSecret as Lang.String ) as Lang.String 
 Generate the value for the "Authorization" header in an OAuth 1.0a request. The returned value can be set as the "Authorization" header for makeWebRequest() . Parameters: url — ( Lang.String ) — The request URL 
 params — ( Lang.Dictionary ) — The parameters of the request 
 requestMethod — ( Communications.HttpRequestMethod ) — An HTTP_REQUEST_METHOD_* value 
 signatureMethod — ( Communications.SigningMethod ) — An OAUTH_SIGNING_METHOD_* value 
 token — ( Lang.String , null) — The token given by the OAuth service Can be null 
 
 
 tokenSecret — ( Lang.String ) — The token secret given by the OAuth service. Used to sign the request 
 consumerKey — ( Lang.String ) — The key that identifies your application 
 consumerSecret — ( Lang.String ) — The consumer secret that is used to sign the request 
 
 Returns: Lang.String — The value for the "Authorization" header 
 
 Since: API Level 1.3.0 getMailbox() as Communications.MailboxIterator 
 This has been deprecated This method may be removed after System 4. Get the MailboxIterator for this Application's mailbox. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 130 Plus
 Edge® 130
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Communications.MailboxIterator — Iterator for the mailbox 
 
 See Also: Communications.registerForPhoneAppMessages() 
 
 Since: API Level 1.0.0 makeImageRequest(url as Lang.String , parameters as Lang.Dictionary or Null , options as { :palette as Lang.Array &lt; Lang.Number &gt;, :maxWidth as Lang.Number , :maxHeight as Lang.Number , :dithering as Communications.Dithering , :packingFormat as Communications.PackingFormat }, responseCallback as Lang.Method (responseCode as Lang.Number , data as WatchUi.BitmapResource or Graphics.BitmapReference or Null ) as Void ) as Void 
 Initiate an image download request. GCM will scale and dither the image based on the capabilities of the device, but the user will be able to pass additional options (like dithering it down to a one color image) Note: This method can be used when connected to WiFi or a mobile device over Bluetooth. Parameters: url — ( Lang.String ) — The URL of an image to request 
 parameters — ( Lang.Dictionary , null) — The Dictionary of keys and values Appended to the URL 
 Can be null 
 
 
 options — ( Lang.Dictionary ) — Additional image options :palette — ( Lang.Array ) — The color palette to restrict the image dithering to. Using a smaller palette can reduce the size of the image data to speed up transfers 
 :maxWidth — ( Lang.Number ) — The maximum width an image should be scaled to 
 :maxHeight — ( Lang.Number ) — The maximum height an image should be scaled to 
 :dithering — ( Communications.Dithering ) — The type of dithering to use when processing the image. Defaults to IMAGE_DITHERING_FLOYD_STEINBERG 
 :packingFormat — ( Communications.PackingFormat ) — The format of the image data to request. Defaults to PACKING_FORMAT_DEFAULT 
 
 
 responseCallback — ( Lang.Method ) — A reference to a callback method which must accept two arguments: responseCode: The server response code or a BLE_* error type 
 data: A BitmapResource or BitmapReference from a successful request, or null on error 
 
 
 
 Example: using Toybox.System; using Toybox.Communications; var image; var responseCode; // Set up the responseCallback function to return an image or null function responseCallback(responseCode, data) { responseCode = responseCode; if (responseCode == 200) { image = data; } else { image = null; } } // wrap the request in a function function makeRequest() { var url = "http://www.garmin.com/image-path"; // set the image url var parameters = null; // set the parameters var options = { // set the options :palette =&gt; [ Gfx.COLOR_ORANGE, // set the palette Gfx.COLOR_DK_BLUE, Gfx.COLOR_BLUE, Gfx.COLOR_BLACK ], :maxWidth =&gt; 100, // set the max width :maxHeight =&gt; 100, // set the max height :dithering =&gt; Communications.IMAGE_DITHERING_NONE // set the dithering }; // Make the image request Communications.makeImageRequest(url, parameters, options, method(:responseCallback)); } Since: API Level 1.2.0 makeJsonRequest(url as Lang.String , parameters as Lang.Dictionary &lt; Lang.Object , Lang.Object &gt; or Null , options as { :method as Communications.HttpRequestMethod , :headers as Lang.Dictionary } or Null , responseCallback as Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null ) as Void ) as Void 
 This has been deprecated This method may be removed after System 4. Initiate a download request. The request is asynchronous; the responseCallback will be called when the request returns. Note: This method can be used when connected to WiFi or a mobile device over Bluetooth. Parameters: url — ( Lang.String ) — The URL being requested 
 parameters — ( Lang.Dictionary ) — A Dictionary of keys and values Appended to the URL for GET/DELETE request 
 Set as the body for a POST/PUT request 
 These values must be URL encoded 
 Can be null 
 
 
 options — ( Lang.Dictionary ) — A Dictionary of options Can be null 
 
 :method — ( Communications.HttpRequestMethod ) — The HTTP method of the request. This option should be an HTTP_REQUEST_METHOD_* value. 
 :headers — ( Lang.Dictionary ) — A Dictionary of HTTP headers to include in the request The "Content-Type" header for the body of the request can be specified using a REQUEST_CONTENT_TYPE_* value 
 This is only valid for methods PUT and POST (you cannot set a body for a GET or DELETE request) 
 If the content type is not specified, it will default to "application/json" for GET and DELETE requests, and will default to "application/x-www-form-urlencoded" for POST and PUT requests 
 
 
 
 
 
 responseCallback — ( Lang.Method ) — A reference to a callback method which must accept two arguments: responseCode: the server response code 
 data: the content if the request was successful, or null 
 
 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Communications.makeWebRequest(). 
 
 Since: API Level 1.0.0 makeOAuthRequest(requestUrl as Lang.String , requestParams as Lang.Dictionary , resultUrl as Lang.String , resultType as Communications.TokenResult , resultKeys as Lang.Dictionary &lt; Lang.String , Lang.String &gt;) as Void 
 Request an OAuth sign-in through Garmin Connect Mobile. A notification will trigger on the phone, that when clicked, provides a web view that shows requestUrl . If the user grants permission to the app, then the callback registered by registerForOAuthMessages() will be called with an OAuthMessage from the OAuth response. Note: This method can only be used when connected to a mobile device over Bluetooth. Parameters: requestUrl — ( Lang.String ) — The URL to load in the web view to begin authentication 
 requestParams — ( Lang.Dictionary ) — Non-URL encoded parameters for the requestUrl 
 resultUrl — ( Lang.String ) — The URL of the final page of authentication that contains the resultKeys 
 resultType — (TokenResult) — An OAUTH_RESULT_TYPE_* value that specifies the format of the result 
 resultKeys — ( Lang.Dictionary ) — The desired OAuth response values passed to the callback method. The keys map to the actual OAuth response keys, and the values map to the keys of the OAuthMessage data. 
 
 Example: using Toybox.Communications; using Toybox.System; const CLIENT_ID = "myClientID"; const OAUTH_CODE = "myOAuthCode"; const OAUTH_ERROR = "myOAuthError"; // register a callback to capture results from OAuth requests Communications.registerForOAuthMessages(method(:onOAuthMessage)); // wrap the OAuth request in a function function getOAuthToken() { status = "Look at OAuth screen\n"; Ui.requestUpdate(); // set the makeOAuthRequest parameters var params = { "scope" =&gt; Comm.encodeURL("https://www.serviceurl.com/"), "redirect_uri" =&gt; "https://localhost", "response_type" =&gt; "code", "client_id" =&gt; $.CLIENT_ID }; // makeOAuthRequest triggers login prompt on mobile device. // "responseCode" and "responseError" are the parameters passed // to the resultUrl. Check the oauth provider's documentation // to determine the correct strings to use. Comm.makeOAuthRequest( "https://requesturl.com", params, "http://resulturl.com", Comm.OAUTH_RESULT_TYPE_URL, {"responseCode" =&gt; $.OAUTH_CODE, "responseError" =&gt; $.OAUTH_ERROR} ); } // implement the OAuth callback method function onOAuthMessage(message) { if (message.data != null) { var code = message.data[$.OAUTH_CODE]; var error = message.data[$.OAUTH_ERROR]; } else { // return an error } } // the OAuth service can now be used with a makeWebRequest() call Since: API Level 1.3.0 makeWebRequest(url as Lang.String , parameters as Lang.Dictionary &lt; Lang.Object , Lang.Object &gt; or Null , options as { :method as Communications.HttpRequestMethod , :headers as Lang.Dictionary , :responseType as Communications.HttpResponseContentType , :context as Lang.Object or Null , :maxBandwidth as Lang.Number , :fileDownloadProgressCallback as Lang.Method (totalBytesTransferred as Lang.Number , fileSize as Lang.Number or Null ) as Void } or Null , responseCallback as Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null ) as Void or Lang.Method (responseCode as Lang.Number , data as Lang.Dictionary or Lang.String or PersistedContent.Iterator or Null , context as Lang.Object ) as Void ) as Void 
 Initiate a download request. Web requests are asynchronous. The supplied response callback method will be called when the request returns. Note: This method can be used when connected to WiFi or a mobile device over Bluetooth. Parameters: url — ( Lang.String ) — The URL being requested 
 parameters — ( Lang.Dictionary ) — A Dictionary of keys and values. These values should not be URL encoded. 
 Can be null . 
 
 
 options — ( Lang.Dictionary ) — A Dictionary of options. :method — ( Communications.HttpRequestMethod ) — The HTTP method of the request. This should be an HTTP_REQUEST_METHOD_* value. 
 :headers — ( Lang.Dictionary ) — A Dictionary of HTTP headers to include in the request. The "Content-Type" header for the body of the request can be specified using a REQUEST_CONTENT_TYPE_* value. 
 If the content type is not specified, it will default to "application/json" for GET and DELETE requests, and will default to "application/x-www-form-urlencoded" for POST and PUT requests. 
 By default, DELETE requests will have their parameters appended to the URL. 
 Setting the method as DELETE as well as a "Content-Type" header will result in the parameters being set in the body of the request and they will not be appended to the URL. 
 GET requests can only have their parameters appended to the URL, specifying the "Content-Type" header will not set the body. 
 
 
 :responseType — ( Communications.HttpResponseContentType ) — The format of the response. This should be an HTTP_RESPONSE_CONTENT_TYPE_* value. 
 If HTTP_RESPONSE_CONTENT_TYPE_FIT or HTTP_RESPONSE_CONTENT_TYPE_GPX is given, the system will attempt to download and parse a FIT or GPX file and store the contained data in the device, based on the contents of the file. 
 If not given, the system will use the Content-Type header from the server response to determine the format of the response body. If the Content-Type header from the response is not one of the known HTTP_RESPONSE_CONTENT_TYPE_* types, an error will occur. 
 
 
 :context — ( Lang.Object ) — A user-specific context object to be passed to the response callback. The callback will need to accept a third parameter if this value is populated. 
 :mediaEncoding — ( Media.Encoding ) — The encoding of the audio content that is being downloaded. Should be a Media.ENCODING_* value. 
 :maxBandwidth — ( Lang.Number ) — maximum bandwidth. TVM will select the audio stream with the highest bandwidth that's less than or equal to the maximum This option is only effective when processing HLS content 
 :fileDownloadProgressCallback — ( Lang.Method ) — a callback method which must accept two parameters totalBytesTransferred: The total number of bytes transferred for the current file download 
 fileSize: The size of the file being downloaded. Note that this can be null if file size cannot be determined from the server. 
 This option is only supported for media file download progress 
 This option is supported since CIQ 3.2.0 
 
 
 
 
 responseCallback — ( Lang.Method ) — A reference to a callback method which must accept two arguments: responseCode: The server response code or a BLE_* error type 
 data: The content if the request was successful, or null 
 
 
 
 Example: // It is common for developers to wrap a makeWebRequest() call in a function // as displayed below. The function defines the variables for each of the // necessary arguments in a Communications.makeWebRequest() call, then passes // these variables as the arguments. This allows for a clean layout of your web // request and expandability. using Toybox.System; using Toybox.Communications; // set up the response callback function function onReceive(responseCode, data) { if (responseCode == 200) { System.println("Request Successful"); // print success } else { System.println("Response: " + responseCode); // print response code }; }; function makeRequest() { var url = "https://www.garmin.com"; // set the url var params = { // set the parameters "definedParams" =&gt; "123456789abcdefg" }; var options = { // set the options :method =&gt; Communications.HTTP_REQUEST_METHOD_GET, // set HTTP method :headers =&gt; { // set headers "Content-Type" =&gt; Communications.REQUEST_CONTENT_TYPE_URL_ENCODED}, // set response type :responseType =&gt; Communications.HTTP_RESPONSE_CONTENT_TYPE_URL_ENCODED }; var responseCallback = method(:onReceive); // set responseCallback to // onReceive() method // Make the Communications.makeWebRequest() call Communications.makeWebRequest(url, params, options, responseCallback); } Since: API Level 1.3.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if a required option for a particular request is omitted 
 ( Lang.SymbolNotAllowedException ) — Thrown if a given :responseType option is not supported for the device the reqest is being made from. An example would be using HTTP_RESPONSE_CONTENT_TYPE_AUDIO on a device that does not support audio content provider apps 
 
 notifySyncComplete(errorMessage as Lang.String or Null ) as Void 
 Send a system notification to indicate that the sync completed. Parameters: errorMessage — ( Lang.String ) — A descriptive error message if a failure occurred. If the sync completes successfully, null should be passed to this method. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.1.0 notifySyncProgress(percentageComplete as Lang.Number ) as Void 
 Send a system notification to indicate overall sync progress. Parameters: percentageComplete — ( Lang.Number ) — An integer from 0 to 100 indicating the completion percentage. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.1.0 openWebPage(url as Lang.String , params as Lang.Dictionary or Null , options as Lang.Dictionary or Null ) as Void 
 Request that GCM issue a phone notification that will open a web page. This method will push a phone notification that must be accepted by the user. If the used accepts it, a web page defined by this method will be opened in the default browser on the phone. Note: This method can only be used when connected to a mobile device over Bluetooth. Parameters: url — ( Lang.String ) — The URL to open. 
 params — ( Lang.Dictionary ) — The URL parameters used to add to the pages web page URL. Parameters should not be URL encoded. 
 options — ( Lang.Dictionary ) — Additional options for the request 
 
 Example: using Toybox.Communications; Communications.openWebPage( "http://www.bing.com/images/search", {"q" =&gt; "cute kitten"}, null ); // passes the url: http://bing.com/images/search?q=cute kitten to the // browser on the phone Since: API Level 1.3.0 registerForOAuthMessages(method as Lang.Method (data as Communications.OAuthMessage ) as Void ) as Void 
 Register a callback for receiving OAuth messages. The callback will be called once for each received OAuth message. If there are messages waiting for the app when this function is called, the callback will immediately be called once for each waiting message. Parameters: method — ( Lang.Method ) — A reference to a callback, which must receive a data argument of the type OAuthMessage . 
 
 Example: using Toybox.Communications; function onOAuthMessage(message) { if (message.data != null) { var code = message.data[OAUTH_CODE]; var error = message.data[OAUTH_ERROR]; } else { // return an error } } Communications.registerForOAuthMessages(method(:onOAuthMessage)); Since: API Level 1.3.0 registerForPhoneAppMessages(method as Communications.PhoneMessageCallback or Null ) as Void 
 Register a callback for receiving Phone App messages. The callback will be called once for each message received. If there are messages waiting for the app when this function is called, the callback will immediately be called once for each waiting message. Parameters: method — ( Lang.Method ) — A reference to a callback, which must receive a data argument of the type PhoneAppMessage . 
 
 Example: using Communications; // set up somewhere to store the message var message = new Communications.PhoneAppMessage; // set up phoneMessageCallback function phoneMessageCallback(msg) { message = msg.data; } // register the messages from the callback to capture the results Communications.registerForPhoneAppMessages(method(:phoneMessageCallback)); Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Toybox.Communications.PhoneAppMessage 
 
 Since: API Level 1.4.0 setMailboxListener(listener as Lang.Method (mailboxIterator as Communications.MailboxIterator ) as Void ) as Void 
 This has been deprecated This method may be removed after System 4. Add a listener for mailbox events. The listener method is called whenever a new message is received. Parameters: listener — ( Lang.Method ) — A reference to a callback method which must accept an iterator. The iterator is the mailbox iterator for the app 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 130 Plus
 Edge® 130
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 See Also: Communications.registerForPhoneAppMessages() 
 
 Since: API Level 1.0.0 startSync() as Void 
 Exit the AppBase and launch it in sync mode. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.1.0 startSync2(options as { :message as Lang.String } or Null ) as Void 
 Exit the AppBase and launch it in sync mode with the provided message. Parameters: options — ( Lang.Dictionary ) — a dictionary of options, can be null :message — ( Lang.Number ) — the sync message to display 
 
 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 vívoactive® 5
 
 Since: API Level 4.0.4 transmit(content as Application.PersistableType , options as Lang.Dictionary or Null , listener as Communications.ConnectionListener ) as Void 
 Send data across the the BLE link. Parameters: content — ( Lang.Object ) — The object to be sent 
 options — ( Lang.Dictionary ) — Additional transmit options for future proofing. For now, an empty Dictionary is used. 
 listener — ( Communications.ConnectionListener ) — An extension of the ConnectionListener class 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:42 AM


# [ConnectionListener (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/ConnectionListener.html)nClass: Toybox.Communications.ConnectionListener
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Communications.ConnectionListener 
 
 show all Overview
 Provide a callback function for communications operations. Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 onComplete () as Void Callback when a communications operation completes. 
 onError () as Void Callback when a communications operation error occurs. 
 
 Instance Method Details
 onComplete() as Void 
 Callback when a communications operation completes. Since: API Level 1.0.0 onError() as Void 
 Callback when a communications operation error occurs. Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [MailboxIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/MailboxIterator.html)nClass: Toybox.Communications.MailboxIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Communications.MailboxIterator 
 
 show all Overview
 Get the messages out of the Mailbox. This has been deprecated This class may be removed after System 4. See Also:
 Communications.registerForPhoneAppMessages() 
 
 Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 130 Plus
 Edge® 130
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Typedef Summary collapse 
 MailboxKeyType as Lang.Number or Lang.Float or Lang.Long or Lang.Double or Lang.String or Lang.Boolean or Lang.Char 
 MailboxValueType as MailboxIterator.MailboxKeyType or Lang.Array &lt; MailboxIterator.MailboxValueType &gt; or Lang.Dictionary &lt; MailboxIterator.MailboxKeyType , MailboxIterator.MailboxValueType &gt; 
 
 Instance Method Summary collapse 
 next () as MailboxIterator.MailboxValueType or Null Get the next message from the mailbox. 
 
 Typedef Details
 MailboxKeyType as Lang.Number or Lang.Float or Lang.Long or Lang.Double or Lang.String or Lang.Boolean or Lang.Char 
 Since: API Level 1.0.0 MailboxValueType as MailboxIterator.MailboxKeyType or Lang.Array &lt; MailboxIterator.MailboxValueType &gt; or Lang.Dictionary &lt; MailboxIterator.MailboxKeyType , MailboxIterator.MailboxValueType &gt; 
 Since: API Level 1.0.0 Instance Method Details
 next() as MailboxIterator.MailboxValueType or Null 
 Get the next message from the mailbox. Returns: Message content, or null if no messages 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Message (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/Message.html)nClass: Toybox.Communications.Message
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Communications.Message 
 
 show all Overview
 The base class for messages. Since: API Level 1.3.0 Direct Known Subclasses
 Communications.OAuthMessage , Communications.PhoneAppMessage Instance Member Summary collapse 
 data as Lang.Object or Null The data delivered by the message. 
 
 Instance Attribute Details
 var data as Lang.Object or Null 
 The data delivered by the message. Since: API Level 1.3.0 Returns: Lang.Object 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [OAuthMessage (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/OAuthMessage.html)nClass: Toybox.Communications.OAuthMessage
 Inherits: Toybox.Communications.Message Toybox.Lang.Object 
 Toybox.Communications.Message 
 Toybox.Communications.OAuthMessage 
 
 show all Overview
 An OAuthMessage received by the callback registered in registerForOAuthMessages() . Unlike the data in the Message parent class, data in an OAuthMessage should always be a Dictionary . Since: API Level 1.3.0 Instance Member Summary collapse 
 responseCode as Lang.Number or Null An HTTP response code (positive value) or BLE error code (negative value). 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var responseCode as Lang.Number or Null 
 An HTTP response code (positive value) or BLE error code (negative value). Note: The value in this field is unreliable and should not be referenced. It is generally safer to examine the message payload to check the status of the response. Since: API Level 1.3.0 Returns: Lang.Number 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 1.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [PhoneAppMessage (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/PhoneAppMessage.html)nClass: Toybox.Communications.PhoneAppMessage
 Inherits: Toybox.Communications.Message Toybox.Lang.Object 
 Toybox.Communications.Message 
 Toybox.Communications.PhoneAppMessage 
 
 show all Overview
 A PhoneAppMessage received by the callback registered in registerForPhoneAppMessages() Since: API Level 1.4.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 1.4.0 Generated Dec 11, 2024, 8:58:43 AM


# [SyncDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Communications/SyncDelegate.html)nClass: Toybox.Communications.SyncDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Communications.SyncDelegate 
 
 show all Overview
 A delegate object that the user implements to respond to sync requests from the system. Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 isSyncNeeded () as Lang.Boolean Check if a sync is needed. 
 onStartSync () as Void Called when a sync is started by the system. 
 onStopSync () as Void Called when an active sync is cancelled. 
 
 Instance Method Details
 isSyncNeeded() as Lang.Boolean 
 Check if a sync is needed. Returns: Lang.Boolean — When true , a sync is needed 
 When false a sync is not needed and onStartSync will not be called if a sync is triggered for this application 
 
 
 
 Since: API Level 3.1.0 onStartSync() as Void 
 Called when a sync is started by the system. This method should be used to kick-off the application sync process. This includes any setup required to fetch the data needed to prepare the sync, as well as the initial call to makeWebRequest() to download the first piece of content. Note that, when using this method, you must chain your makeWebRequest() calls together manually. Additionally, you must call notifySyncProgress() intermittently to enable sync progress updates to be displayed in the native user interface for the device. Finally, notifySyncComplete() must be called either when the sync has successfully completed, or if an error occurs, so that the device can be properly notified that the sync process is finished. Since: API Level 3.1.0 onStopSync() as Void 
 Called when an active sync is cancelled. This method will be called when an active sync is being cancelled by the user. The app is responsible for calling the cancelAllRequests() to cancel any requests made for a sync process. The app is also responsible to let the system know that sync has successfully been cancelled by calling notifySyncComplete() . Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [Complications (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Complications.html)nModule: Toybox.Complications
 Overview
 The Complications module allows apps to both subscribe to and publish complications. Complications are exposed via an iterator, or can be queried by identifier. Watch faces can register a callback and subscribe to multiple complications. Device apps and audio content providers can publish complication information. Since: API Level 4.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Classes Under Namespace
 Classes: Complication , ComplicationNotFoundException , Id , Iterator Constant Summary
 Unit
 Units reported by a complication Since: API Level 4.2.0 Name Value Since Description See Also 
 UNIT_INVALID 0 API Level 4.2.0 
 UNIT_DISTANCE 1 API Level 4.2.0 Complication is a distance; value is in meters 
 UNIT_ELEVATION 2 API Level 4.2.0 Complication is a elevation; value is in meters 
 UNIT_HEIGHT 3 API Level 4.2.0 Complication is a height; value is in meters 
 UNIT_SPEED 4 API Level 4.2.0 Complication is a speed; value is in meters/second 
 UNIT_TEMPERATURE 5 API Level 4.2.0 Complication is a temperature; value is in degrees Celsius 
 UNIT_WEIGHT 6 API Level 4.2.0 Complication is a weight; value is in grams 
 Type
 System build-in complication type Since: API Level 4.2.0 Name Value Since Description See Also 
 COMPLICATION_TYPE_INVALID 0 API Level 4.2.0 Invalid build-in complication type 
 COMPLICATION_TYPE_BATTERY 1 API Level 4.2.0 Value is a non-negative Number percent 0 to 100 representing battery charge or null 
 COMPLICATION_TYPE_STEPS 2 API Level 4.2.0 Value is a non-negative Number of steps for the current day, not available in wheelchair mode 
 COMPLICATION_TYPE_CALORIES 3 API Level 4.2.0 Value is a non-negative Number of calories burned for the current day 
 COMPLICATION_TYPE_FLOORS_CLIMBED 4 API Level 4.2.0 Value is a non-negative Number of floors climbed, not available in wheelchair mode 
 COMPLICATION_TYPE_INTENSITY_MINUTES 5 API Level 4.2.0 Value is a non-negative Number of intensity minutes that resets weekly 
 COMPLICATION_TYPE_DATE 6 API Level 4.2.0 Value is a String with the day of the month and the month e.g., 28 Mar 
 COMPLICATION_TYPE_WEEKDAY_MONTHDAY 7 API Level 4.2.0 Value is a String with the day of the week and the day of the month e.g., Mon 28 
 COMPLICATION_TYPE_CURRENT_WEATHER 8 API Level 4.2.0 Value is a Weather.CONDITION_* for the current weather 
 COMPLICATION_TYPE_FORECAST_WEATHER_1DAY 9 API Level 4.2.0 Value is a Weather.CONDITION_* for the forecast weather one day in the future 
 COMPLICATION_TYPE_FORECAST_WEATHER_2DAY 10 API Level 4.2.0 Value is a Weather.CONDITION_* for the forecast weather two days in the future 
 COMPLICATION_TYPE_FORECAST_WEATHER_3DAY 11 API Level 4.2.0 Value is a Weather.CONDITION_* for the forecast weather three days in the future 
 COMPLICATION_TYPE_CALENDAR_EVENTS 12 API Level 4.2.0 Value is a String with the time of your next calendar event or null 
 COMPLICATION_TYPE_SUNRISE 13 API Level 4.2.0 Value is a non-negative Number representing seconds since midnight local time of the sunrise or null 
 COMPLICATION_TYPE_SUNSET 14 API Level 4.2.0 Value is a non-negative Number representing seconds since midnight local time of the sunset or null 
 COMPLICATION_TYPE_ALTITUDE 15 API Level 4.2.0 Value is a Number of the current altitude in meters or null 
 COMPLICATION_TYPE_SEA_LEVEL_PRESSURE 16 API Level 4.2.0 Value is a Float in pascals of the current pressure or null 
 COMPLICATION_TYPE_NOTIFICATION_COUNT 17 API Level 4.2.0 Value is a non-negative Number of notifications or null 
 COMPLICATION_TYPE_HEART_RATE 18 API Level 4.2.0 Value is a non-negative Number in beats per minute or null 
 COMPLICATION_TYPE_WEEKLY_RUN_DISTANCE 19 API Level 4.2.0 Value is a Float of your weekly run distance in meters 
 COMPLICATION_TYPE_WEEKLY_BIKE_DISTANCE 20 API Level 4.2.0 Value is a Float of your weekly bike distance in meters 
 COMPLICATION_TYPE_RECOVERY_TIME 21 API Level 4.2.0 Value is a Number of minutes remaining in your recovery time 
 COMPLICATION_TYPE_STRESS 22 API Level 4.2.0 Value is a Number representing your current stress level or null 
 COMPLICATION_TYPE_BODY_BATTERY 23 API Level 4.2.0 Value is a Number representing your current body battery or null 
 COMPLICATION_TYPE_VO2MAX_RUN 24 API Level 4.2.0 Value is a Number representing your running VO2 max or null 
 COMPLICATION_TYPE_VO2MAX_BIKE 25 API Level 4.2.0 Value is a Number representing your cycling VO2 max or null 
 COMPLICATION_TYPE_TRAINING_STATUS 26 API Level 4.2.0 Value is a String representing your training status 
 COMPLICATION_TYPE_RACE_PREDICTOR_5K 27 API Level 4.2.0 Value is a Number representing your predicted 5K time in seconds 
 COMPLICATION_TYPE_RACE_PREDICTOR_10K 28 API Level 4.2.0 Value is a Number representing your predicted 10k time in seconds 
 COMPLICATION_TYPE_RACE_PREDICTOR_HALF_MARATHON 29 API Level 4.2.0 Value is a Number representing your predicted half marathon time in seconds 
 COMPLICATION_TYPE_RACE_PREDICTOR_MARATHON 30 API Level 4.2.0 Value is a Number representing your predicted your marathon time in seconds 
 COMPLICATION_TYPE_RACE_PACE_PREDICTOR_5K 31 API Level 4.2.0 Value is a Float representing your 5k pace in meters/second 
 COMPLICATION_TYPE_RACE_PACE_PREDICTOR_10K 32 API Level 4.2.0 Value is a Float representing your 10k pace in meters/second 
 COMPLICATION_TYPE_RACE_PACE_PREDICTOR_HALF_MARATHON 33 API Level 4.2.0 Value is a Float representing your half marathon pace in meters/second 
 COMPLICATION_TYPE_RACE_PACE_PREDICTOR_MARATHON 34 API Level 4.2.0 Value is a Float representing your marathon pace in meters/second 
 COMPLICATION_TYPE_PULSE_OX 35 API Level 4.2.0 Value is a non-negative Number as a percent from 0 to 100 representing your blood oxygen or null 
 COMPLICATION_TYPE_RESPIRATION_RATE 36 API Level 4.2.0 Value is a non-negative Number representing your breaths per minute or null 
 COMPLICATION_TYPE_SOLAR_INPUT 37 API Level 4.2.0 Value is a non-negative Number representing percent between 0 to 100 of solar charge or null 
 COMPLICATION_TYPE_CURRENT_TEMPERATURE 38 API Level 4.2.0 Value is a Numeric representing temperature in degrees Celsius or null 
 COMPLICATION_TYPE_HIGH_LOW_TEMPERATURE 39 API Level 4.2.0 Value is a String providing the high and low temperature values in a format similar to "H &lt;high&gt; / L &lt;low&gt;" 
 COMPLICATION_TYPE_WHEELCHAIR_PUSHES 40 API Level 4.2.3 Value is a non-negative Number of pushes for the current day, only available in wheelchair mode 
 COMPLICATION_TYPE_LAST_GOLF_ROUND_SCORE 41 API Level 5.0.0 Value is a String in the format "&lt;LastRoundTotalScore&gt;(&lt;Offset&gt;)" where Offset is "E" for even-par, a negative value for under par, or a positive value for over par 
 Typedef Summary collapse 
 ComplicationChangedCallback as Lang.Method (id as Complications.Id ) as Void Callback for subscribers to be notified of complication updates. 
 Data as { :shortLabel as Complications.Label , :value as Complications.Value , :unit as Complications.Unit or Lang.String , :ranges as Complications.Ranges } 
 Icon as WatchUi.BitmapResource or Graphics.BitmapReference 
 Label as Lang.String 
 RangeValue as Lang.Number or Lang.Float or Lang.Long or Lang.Double 
 Ranges as Lang.Array &lt; Complications.RangeValue &gt; 
 Value as Lang.String or Complications.RangeValue 
 
 Instance Method Summary collapse 
 exitTo (id as Complications.Id ) as Void Launches the app associated with the complication. 
 getComplication (id as Complications.Id ) as Complications.Complication Given a complication Id, get the complication. 
 getComplications () as Complications.Iterator Provide an iterator over complication id that we have access to. 
 registerComplicationChangeCallback (callback as Complications.ComplicationChangedCallback or Null ) as Void Register callback for notifications of complication updates. 
 subscribeToUpdates (id as Complications.Id ) as Lang.Boolean Subscribes to complication. 
 unsubscribeFromAllUpdates () as Void Unsubscribes from all subscribed complications. 
 unsubscribeFromUpdates (id as Complications.Id ) as Void Unsubscribes from complication. 
 updateComplication (index as Lang.Number , data as Complications.Data ) as Void Update the complication data Values not specified in `data` will not be updated from the last update or what is specified in the resource definition. 
 
 Typedef Details
 ComplicationChangedCallback as Lang.Method (id as Complications.Id ) as Void 
 Callback for subscribers to be notified of complication updates Since: API Level 4.2.0 Data as { :shortLabel as Complications.Label , :value as Complications.Value , :unit as Complications.Unit or Lang.String , :ranges as Complications.Ranges } 
 Since: API Level 4.2.0 Icon as WatchUi.BitmapResource or Graphics.BitmapReference 
 Since: API Level 4.2.0 Label as Lang.String 
 Since: API Level 4.2.0 RangeValue as Lang.Number or Lang.Float or Lang.Long or Lang.Double 
 Since: API Level 4.2.0 Ranges as Lang.Array &lt; Complications.RangeValue &gt; 
 Since: API Level 4.2.0 Value as Lang.String or Complications.RangeValue 
 Since: API Level 4.2.0 Instance Method Details
 exitTo(id as Complications.Id ) as Void 
 Launches the app associated with the complication Parameters: id — ( Complications.Id ) — The complication Id to launch 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 See Also: Toybox.System.exitTo 
 
 Since: API Level 4.2.0 Throws: ( Lang.InvalidValueException ) — Thrown if complication id is not a from a valid app 
 
 getComplication(id as Complications.Id ) as Complications.Complication 
 Given a complication Id, get the complication Parameters: id — ( Complications.Id ) — Complication Id to fetch 
 
 Returns: Complications.Complication — Complication 
 
 Since: API Level 4.2.0 Throws: ( Complications.ComplicationNotFoundException ) — Thrown if the given complication is not found. 
 
 getComplications() as Complications.Iterator 
 Provide an iterator over complication id that we have access to Returns: Complications.Iterator — Iterator instance 
 
 Since: API Level 4.2.0 registerComplicationChangeCallback(callback as Complications.ComplicationChangedCallback or Null ) as Void 
 Register callback for notifications of complication updates Parameters: callback — ( Complications.ComplicationChangedCallback ) — Callback to be invoked when complication is changed or becomes unavailable. 
 
 Since: API Level 4.2.0 subscribeToUpdates(id as Complications.Id ) as Lang.Boolean 
 Subscribes to complication. Information is sent to registered ComplicationChangedCallback method. Make sure you have registered your change callback. Returns: Lang.Boolean — true if subscribed successfully, false if given complication could not be subscribed to 
 
 See Also: Toybox.Complications.registerComplicationChangeCallback 
 
 Since: API Level 4.2.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if too many active subscriptions 
 ( Complications.ComplicationNotFoundException ) — Thrown if the given complication is not found. 
 
 unsubscribeFromAllUpdates() as Void 
 Unsubscribes from all subscribed complications Since: API Level 4.2.0 unsubscribeFromUpdates(id as Complications.Id ) as Void 
 Unsubscribes from complication Parameters: id — ( Complications.Id ) — Complication Td to unsubscribe from 
 
 Since: API Level 4.2.0 updateComplication(index as Lang.Number , data as Complications.Data ) as Void 
 Update the complication data Values not specified in `data` will not be updated from the last update or what is specified in the resource definition. Parameters: index — ( Lang.Number ) — Application complication to be updated 
 data — ( Complications.Data ) — Updated values for the complication 
 
 Since: API Level 4.2.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if the id of the complication is not associated with this application 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Complication (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Complications/Complication.html)nClass: Toybox.Complications.Complication
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Complications.Complication 
 
 show all Overview
 Complication object Since: API Level 4.2.0 Instance Member Summary collapse 
 complicationId as Complications.Id or Null 
 longLabel as Complications.Label or Null 
 ranges as Complications.Ranges or Null 
 shortLabel as Complications.Label or Null 
 unit as Complications.Unit or Lang.String or Null 
 value as Complications.Value or Null 
 
 Instance Method Summary collapse 
 getIcon () as Complications.Icon or Null Get the complication icon. 
 getType () as Complications.Type or Null Get the complication type. 
 
 Instance Attribute Details
 var complicationId as Complications.Id or Null 
 Since: API Level 4.2.0 var longLabel as Complications.Label or Null 
 Since: API Level 4.2.0 var ranges as Complications.Ranges or Null 
 Since: API Level 4.2.0 var shortLabel as Complications.Label or Null 
 Since: API Level 4.2.0 var unit as Complications.Unit or Lang.String or Null 
 Since: API Level 4.2.0 var value as Complications.Value or Null 
 Since: API Level 4.2.0 Instance Method Details
 getIcon() as Complications.Icon or Null 
 Get the complication icon. This is only available for user complications Returns: Complications.Icon — An icon for a user complication, or null for if this is a native complication complications. 
 
 Since: API Level 4.2.0 Throws: ( Complications.ComplicationNotFoundException ) — Thrown if the given complication is not found. 
 
 getType() as Complications.Type or Null 
 Get the complication type Returns: Complications.Type — The complication type of a system complication, or COMPLICATION_TYPE_INVALID for user complications. 
 
 Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [ComplicationNotFoundException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Complications/ComplicationNotFoundException.html)nClass: Toybox.Complications.ComplicationNotFoundException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Complications.ComplicationNotFoundException 
 
 show all Overview
 This exception indicates that the requested complication was not found. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 4.2.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Id (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Complications/Id.html)nClass: Toybox.Complications.Id
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Complications.Id 
 
 show all Overview
 Unique identifier for complications Since: API Level 4.2.0 Instance Method Summary collapse 
 equals (other as Lang.Object or Null ) as Lang.Boolean Equals implementation. 
 getType () as Complications.Type or Null Get the complication type. 
 initialize (id as Complications.Type ) Constructor. 
 
 Instance Method Details
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Equals implementation Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if the other parameter is a complication id that is equal, otherwise false 
 
 Since: API Level 4.2.0 getType() as Complications.Type or Null 
 Get the complication type Returns: Complications.Type — Complication type 
 
 Since: API Level 4.2.0 initialize(id as Complications.Type ) 
 Constructor Parameters: id — ( Complications.Type ) — Complication type 
 
 Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Iterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Complications/Iterator.html)nClass: Toybox.Complications.Iterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Complications.Iterator 
 
 show all Overview
 Since: API Level 4.2.0 Instance Method Summary collapse 
 next () as Complications.Complication or Null Get the next complication. 
 
 Instance Method Details
 next() as Complications.Complication or Null 
 Get the next complication Returns: Complications.Complication — Next complication instance or null on completion 
 
 Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Cryptography (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography.html)nModule: Toybox.Cryptography
 Overview
 The Cryptography Module will allow the application to create a Cipher object that can encrypt and decrypt ByteArray objects. Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Classes Under Namespace
 Classes: Cipher , CipherBasedMessageAuthenticationCode , Hash , HashBasedMessageAuthenticationCode , InvalidBlockSizeException , Key , KeyAgreement , KeyPair Constant Summary
 HashAlgorithm
 Since: API Level 3.0.0 Name Value Since Description See Also 
 HASH_SHA1 0 API Level 3.0.0 SHA-1 implementation for Hash objects https://en.wikipedia.org/wiki/SHA-1 
 
 HASH_SHA256 1 API Level 3.0.0 SHA-256 implementation for Hash objects https://en.wikipedia.org/wiki/SHA-2 
 
 HASH_MD5 2 API Level 3.0.0 MD5 implementation for Hash objects https://en.wikipedia.org/wiki/MD5 
 
 CipherAlgorithm
 Since: API Level 3.0.0 Name Value Since Description See Also 
 CIPHER_AES128 0 API Level 3.0.0 AES128 implementation for Cipher objects https://en.wikipedia.org/wiki/Advanced_Encryption_Standard 
 
 CIPHER_AES256 1 API Level 3.0.0 AES256 implementation for Cipher objects https://en.wikipedia.org/wiki/Advanced_Encryption_Standard 
 
 EncryptionMode
 Since: API Level 3.0.0 Name Value Since Description See Also 
 MODE_ECB 0 API Level 3.0.0 Electronic Code Book (ECB) This is the simplest encryption mode. Each plaintext block is directly encrypted into a ciphertext block, independent of any other block. This mode exposes frequency of symbols in your plaintext. Other modes (e.g. CBC) are recommended. https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_Codebook_(ECB) 
 
 MODE_CBC 1 API Level 3.0.0 Cipher-Block Chaining Each ciphertext block depends on the current and all previous plaintext blocks. An Initialization Vector (IV) is required. The IV is a data block to be transmitted to the receiver. The IV can be made public, but it must be authenticated by the receiver and it should be picked randomly. https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_(CBC) 
 
 KeyPairAlgorithm
 Since: API Level 3.0.0 Name Value Since Description See Also 
 KEY_PAIR_ELLIPTIC_CURVE_SECP224R1 0 API Level 3.0.0 224-bit secp224r1 Elliptic Curve Based on the algebraic structure of elliptic curves over finite fields. ECC requires smaller keys compared to non-ECC cryptography to provide equivalent security. https://en.wikipedia.org/wiki/Elliptic-curve_cryptography 
 
 KEY_PAIR_ELLIPTIC_CURVE_SECP256R1 1 API Level 3.0.0 256-bit secp256r1 Elliptic Curve Based on the algebraic structure of elliptic curves over finite fields. ECC requires smaller keys compared to non-ECC cryptography to provide equivalent security. https://en.wikipedia.org/wiki/Elliptic-curve_cryptography 
 
 KeyAgreementProtocol
 Since: API Level 3.0.0 Name Value Since Description See Also 
 KEY_AGREEMENT_ECDH 0 API Level 3.0.0 Elliptic Curve Diffie-Hellman (ECDH) https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman 
 
 Instance Method Summary collapse 
 createPublicKey (algorithm as Cryptography.HashAlgorithm , bytes as Lang.ByteArray ) as Cryptography.Key Create a public Key object from bytes to be added to a KeyAgreement . 
 randomBytes (size as Lang.Number ) as Lang.ByteArray Generates cryptographically random bytes. 
 
 Instance Method Details
 createPublicKey(algorithm as Cryptography.HashAlgorithm , bytes as Lang.ByteArray ) as Cryptography.Key 
 Create a public Key object from bytes to be added to a KeyAgreement . If a public key is received from another party, it can be converted to a Key object using this method. Note: bytes is expected to be in little-endian byte order. Parameters: algorithm — ( Cryptography.HashAlgorithm ) — The hash algorithm to use as a KEY_PAIR_ELLIPTIC_CURVE_* constant 
 bytes — ( Lang.ByteArray ) — The public key bytes to be used to generate the Key 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Cryptography.Key 
 
 See Also: Toybox.Cryptography.KeyAgreement 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if an argument is not the correct type 
 ( Lang.InvalidValueException ) — Thrown if the ByteArray provided is not the correct size for the selected algorithm, or the algorithm selected is not supported. 
 
 randomBytes(size as Lang.Number ) as Lang.ByteArray 
 Generates cryptographically random bytes. Parameters: size — ( Lang.Number ) — The number of requested random bytes 
 
 Returns: Lang.ByteArray — A ByteArray of the requested size filled with cryptographically random bytes 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Cipher (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/Cipher.html)nClass: Toybox.Cryptography.Cipher
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.Cipher 
 
 show all Overview
 A Cipher object. See Also:
 https://en.wikipedia.org/wiki/Cipher 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 decrypt (ciphertext as Lang.ByteArray ) as Lang.ByteArray Decrypt data with the key, depending on how the cipher was initialized. 
 encrypt (plaintext as Lang.ByteArray ) as Lang.ByteArray Encrypt data with the key, depending on how the cipher was initialized. 
 initialize (options as { :algorithm as Cryptography.CipherAlgorithm , :mode as Cryptography.EncryptionMode , :key as Lang.ByteArray , :iv as Lang.ByteArray }) Constructor. 
 
 Instance Method Details
 decrypt(ciphertext as Lang.ByteArray ) as Lang.ByteArray 
 Decrypt data with the key, depending on how the cipher was initialized. Decryption can be broken up into two or more calls to decrypt(). For MODE_CBC, the ciphertext length (in bytes) must be a multiple of the block size. Parameters: ciphertext — ( Lang.ByteArray ) — The piece of data to decrypt 
 
 Returns: Lang.ByteArray — The decrypted data 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided 
 ( Cryptography.InvalidBlockSizeException ) — Thrown if ciphertext is not a valid size for the selected encryption type 
 
 encrypt(plaintext as Lang.ByteArray ) as Lang.ByteArray 
 Encrypt data with the key, depending on how the cipher was initialized. Encryption can be broken up into two or more calls to encrypt. For MODE_CBC, the plaintext length (in bytes) must be a multiple of the block size. Parameters: plaintext — ( Lang.ByteArray ) — The piece of data to encrypt 
 
 Returns: Lang.ByteArray — The encrypted data 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided 
 ( Cryptography.InvalidBlockSizeException ) — Thrown if plaintext is not a valid size for the selected encryption type 
 
 initialize(options as { :algorithm as Cryptography.CipherAlgorithm , :mode as Cryptography.EncryptionMode , :key as Lang.ByteArray , :iv as Lang.ByteArray }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options :algorithm — ( Cryptography.CipherAlgorithm ) — The encryption type this cipher object will use from the CIPHER_* enumeration (required) 
 :mode — ( Cryptography.EncryptionMode ) — The encryption mode this cipher object will use from the MODE_* enumeration (required) 
 :key — ( Lang.ByteArray ) — The secret key to use in the cipher. The key must be of the appropriate length for the encryption type selected (required) 
 :iv — ( Lang.ByteArray ) — The initialization vector to use for encryption or decryption. This will be generated by the system using secure random bytes for algorithms that require it if it is not provided (optional) 
 
 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided for the :key and :iv options 
 ( Lang.InvalidOptionsException ) — Thrown if a required option is not provided, the :algorithm and :mode options are not initialized with a valid enumeration, an invalid key size is provided for the selected algorithm, or an invalid initialization vector size is provided for the selected algorithm 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [CipherBasedMessageAuthenticationCode (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/CipherBasedMessageAuthenticationCode.html)nClass: Toybox.Cryptography.CipherBasedMessageAuthenticationCode
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.CipherBasedMessageAuthenticationCode 
 
 show all Overview
 Cipher-Based Message Authentication Code (CMAC) object. A CipherBasedMessageAuthenticationCode is an object that can be used to compute a message authentication code using the CMAC algorithm. See Also:
 http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-38b.pdf 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 digest () as Lang.ByteArray Return the digest of the authentication code. 
 initialize (options as { :algorithm as Cryptography.CipherAlgorithm , :key as Lang.ByteArray }) Constructor. 
 update (message as Lang.ByteArray ) as Void Continue the computation of the CMAC by consuming the next chunk of data. 
 
 Instance Method Details
 digest() as Lang.ByteArray 
 Return the digest of the authentication code. The state of the object is reset and can be used to compute a new authentication code with the same options. Returns: Lang.ByteArray — The computed message authentication code in network byte order 
 
 Since: API Level 3.0.0 initialize(options as { :algorithm as Cryptography.CipherAlgorithm , :key as Lang.ByteArray }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options :algorithm — ( Cryptography.CipherAlgorithm ) — A CIPHER_* value specifying the encryption algorithm used for this CMAC computation; CIPHER_AES128 is the only supported algorithm in Connect IQ 3.x. (required) 
 :key — ( Lang.ByteArray ) — The secret key used by selected cipher algorithm, which must be the appropriate length for chosen encryption type (required) 
 
 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the specified algorithm is not supported 
 ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided for the :key option, if a type other than Toybox::Lang::Number is provided for the :algorithm option, or if either option is not provided 
 
 update(message as Lang.ByteArray ) as Void 
 Continue the computation of the CMAC by consuming the next chunk of data. Repeated calls are equivalent to a single call with the concatenation of all the arguments. Parameters: message — ( Lang.ByteArray ) — The next chunk of the message being hashed 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Hash (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/Hash.html)nClass: Toybox.Cryptography.Hash
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.Hash 
 
 show all Overview
 Compute the Hash digest of a message. See Also:
 https://en.wikipedia.org/wiki/Hash_function 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 digest () as Lang.ByteArray Get the current digest of the message that has been hashed. 
 initialize (options as { :algorithm as Cryptography.HashAlgorithm }) Constructor. 
 update (message as Lang.ByteArray ) as Void Continue hashing of a message by consuming the next chunk of data. 
 
 Instance Method Details
 digest() as Lang.ByteArray 
 Get the current digest of the message that has been hashed. Note: This method resets the state of the Hash object, which can be used to compute a new hash Returns: Lang.ByteArray — The digest of the message 
 
 Since: API Level 3.0.0 initialize(options as { :algorithm as Cryptography.HashAlgorithm }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options :algorithm — ( Cryptography.HashAlgorithm ) — The type of Hash this object will compute from the HASH_* enumeration (required) 
 
 
 
 See Also: https://en.wikipedia.org/wiki/Hash_function 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the algorithm selected is not supported, or if a required option is not provided 
 
 update(message as Lang.ByteArray ) as Void 
 Continue hashing of a message by consuming the next chunk of data. Repeated calls are equivalent to a single call with the concatenation of all the arguments. Parameters: message — ( Lang.ByteArray ) — The next chunk of the message being hashed 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [HashBasedMessageAuthenticationCode (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/HashBasedMessageAuthenticationCode.html)nClass: Toybox.Cryptography.HashBasedMessageAuthenticationCode
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.HashBasedMessageAuthenticationCode 
 
 show all Overview
 Hash-Based Message Authentication Code (HMAC) object. A HashBasedMessageAuthenticationCode is an object that can be used to compute a message authentication code using the HMAC algorithm. See Also:
 http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.198-1.pdf 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 digest () as Lang.ByteArray Return the digest of the authentication code. 
 initialize (options as { :algorithm as Cryptography.HashAlgorithm , :key as Lang.ByteArray }) Constructor. 
 update (message as Lang.ByteArray ) as Void Continue computation of the HMAC by consuming the next chunk of data. 
 
 Instance Method Details
 digest() as Lang.ByteArray 
 Return the digest of the authentication code. The state of the object is reset and can be used to compute a new authentication code with the same options. Returns: Lang.ByteArray — The computed message authentication code in network byte order 
 
 Since: API Level 3.0.0 initialize(options as { :algorithm as Cryptography.HashAlgorithm , :key as Lang.ByteArray }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options :algorithm — ( Cryptography.HashAlgorithm ) — A HASH_* value specifying the type of Hash used for this HMAC computation; HASH_SHA256 is the only supported algorithm in Connect IQ 3.x (required) 
 :key — ( Lang.ByteArray ) — The secret key used to compute the message authentication code, which can be of any length in bytes (required) 
 
 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the specified algorithm is not supported 
 ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided for the :key option, if a type other than Toybox::Lang::Number is provided for the :algorithm option, or if either option is not provided 
 
 update(message as Lang.ByteArray ) as Void 
 Continue computation of the HMAC by consuming the next chunk of data. Repeated calls are equivalent to a single call with the concatenation of all the arguments. Parameters: message — ( Lang.ByteArray ) — The next chunk of the message being hashed 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray is provided 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidBlockSizeException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/InvalidBlockSizeException.html)nClass: Toybox.Cryptography.InvalidBlockSizeException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Cryptography.InvalidBlockSizeException 
 
 show all Overview
 Indicates an invalid input block size was provided. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Key (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/Key.html)nClass: Toybox.Cryptography.Key
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.Key 
 
 show all Overview
 A public key or a private key. Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getBytes () as Lang.ByteArray or Null Get the bytes of a Key object. 
 
 Instance Method Details
 getBytes() as Lang.ByteArray or Null 
 Get the bytes of a Key object. Returns: Lang.ByteArray 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [KeyAgreement (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/KeyAgreement.html)nClass: Toybox.Cryptography.KeyAgreement
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.KeyAgreement 
 
 show all Overview
 A local private key in combination with a public key to generate a shared secret. Example: Create a shared secret using KeyAgreement // &gt; openssl ec -in key.pem -text -noout // read EC key // Private-Key: (224 bit) // priv: // 00:89:01:46:f8:bd:64:ce:75:e0:83:02:d0:fc:e1: // 1d:ce:fd:eb:66:f8:81:1d:68:64:49:05:d3:ee // pub: // 04:1d:ba:39:9a:16:6e:62:0b:56:e3:16:73:f7:38: // b0:d1:b7:2d:40:ca:92:3a:f8:94:26:24:22:e6:6f: // d7:61:db:e8:9b:47:03:33:da:46:0e:6b:36:c9:34: // a6:75:6d:d1:10:9f:c2:d7:c6:07:72:bc // ASN1 OID: secp224r1 // NIST CURVE: P-224 using Toybox.Cryptography; using Toybox.System; const PRIVATE_KEY_SECP224R1 = [ // first byte is not part of the key, so it is omitted // 0x00, // byte swapped 28 byte (224 bit) word 0xee, 0xd3, 0x05, 0x49, 0x64, 0x68, 0x1d, 0x81, 0xf8, 0x66, 0xeb, 0xfd, 0xce, 0x1d, 0xe1, 0xfc, 0xd0, 0x02, 0x83, 0xe0, 0x75, 0xce, 0x64, 0xbd, 0xf8, 0x46, 0x01, 0x89, ]b; const PUBLIC_KEY_SECP224R1 = [ // first byte is not part of the key, so it is omitted // 0x04, // byte swapped 28 byte (224 bit) words 0xe6, 0x22, 0x24, 0x26, 0x94, 0xf8, 0x3a, 0x92, 0xca, 0x40, 0x2d, 0xb7, 0xd1, 0xb0, 0x38, 0xf7, 0x73, 0x16, 0xe3, 0x56, 0x0b, 0x62, 0x6e, 0x16, 0x9a, 0x39, 0xba, 0x1d, 0xbc, 0x72, 0x07, 0xc6, 0xd7, 0xc2, 0x9f, 0x10, 0xd1, 0x6d, 0x75, 0xa6, 0x34, 0xc9, 0x36, 0x6b, 0x0e, 0x46, 0xda, 0x33, 0x03, 0x47, 0x9b, 0xe8, 0xdb, 0x61, 0xd7, 0x6f, ]b; // Alice generates a key pair from a private key var keyPairAlice = new Cryptography.KeyPair({ :algorithm =&gt; Cryptography.KEY_PAIR_ELLIPTIC_CURVE_SECP224R1, :privateKey =&gt; PRIVATE_KEY_SECP224R1 }); var publicKeyAlice = PUBLIC_KEY_SECP224R1; // Sanity check Alice's public key matches what we expect System.println(keyPairAlice.getPublicKey().equals(publicKeyAlice)); // prints 'true' // Bob generates a key pair from scratch var keyPairBob = new Cryptography.KeyPair({ :algorithm =&gt; Cryptography.KEY_PAIR_ELLIPTIC_CURVE_SECP224R1 }); var publicKeyBob = keyPairBob.getPublicKey().getBytes(); // // Alice and Bob exchange public keys // // Alice creates a key agreement from her private key var keyAgreementAlice = new Cryptography.KeyAgreement({ :protocol =&gt; Cryptography.KEY_AGREEMENT_ECDH, :privateKey =&gt; keyPairAlice.getPrivateKey() }); // Alice uses Bob's public key to generate a secret known only to Bob and herself keyAgreementAlice.addKey(keyPairBob.getPublicKey()); var secretKeyAliceAndBob = keyAgreementAlice.generateSecret(); // Bob creates a key agreement from his private key var keyAgreementBob = new Cryptography.KeyAgreement({ :protocol =&gt; Cryptography.KEY_AGREEMENT_ECDH, :privateKey =&gt; keyPairBob.getPrivateKey() }); // Bob uses Alice's public key to generate a secret known only to and Alice and himself keyAgreementBob.addKey(keyPairAlice.getPublicKey()); var secretKeyBobAndAlice = keyAgreementBob.generateSecret(); // Bob and Alice now have a shared secret without exposing either of // their private keys. This secret can be used to sign or encrypt // messages between Alice and Bob. Sanity check shared secret is same // for both Alice and Bob. System.println(secretKeyAliceAndBob.equals(secretKeyBobAndAlice)); // prints 'true' Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 addKey (key as Cryptography.Key ) as Void Add a public Key to KeyAgreement. 
 generateSecret () as Lang.ByteArray Generate a shared secret for the KeyAgreement. 
 initialize (options as { :protocol as Cryptography.KeyAgreementProtocol , :privateKey as Cryptography.Key }) Constructor. 
 
 Instance Method Details
 addKey(key as Cryptography.Key ) as Void 
 Add a public Key to KeyAgreement. Parameters: key — ( Cryptography.Key ) — The public key to add to the agreement 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidValueException ) — Thrown if the specified key is not valid for the selected algorithm 
 
 generateSecret() as Lang.ByteArray 
 Generate a shared secret for the KeyAgreement. Returns: Lang.ByteArray — The secret for the KeyAgreement 
 
 Since: API Level 3.0.0 initialize(options as { :protocol as Cryptography.KeyAgreementProtocol , :privateKey as Cryptography.Key }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A dictionary of options for the KeyAgreement :protocol — ( Cryptography.KeyAgreementProtocol ) — The protocol to use as a KEY_AGREEMENT_* value 
 :privateKey — ( Cryptography.Key ) — The private key in the KeyAgreement 
 
 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if an argument is not the correct type 
 ( Lang.InvalidValueException ) — Thrown if the specified private key is not the correct size for the selected algorithm, or if the selected protocol is not supported 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [KeyPair (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Cryptography/KeyPair.html)nClass: Toybox.Cryptography.KeyPair
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Cryptography.KeyPair 
 
 show all Overview
 A public and private key pair. See Also:
 Toybox.Cryptography.KeyAgreement 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getPrivateKey () as Cryptography.Key Get the private key. 
 getPublicKey () as Cryptography.Key Get the public key. 
 initialize (options as { :algorithm as Cryptography.KeyPairAlgorithm , :privateKey as Lang.ByteArray }) Constructor A KeyPair can be initialized from a private key by passing a private key ByteArray from an initialized Key object into the :privateKey option of the initialize method for this class. 
 
 Instance Method Details
 getPrivateKey() as Cryptography.Key 
 Get the private key. Returns: Cryptography.Key — The private key as a Key object 
 
 Since: API Level 3.0.0 getPublicKey() as Cryptography.Key 
 Get the public key. Returns: Cryptography.Key — The public key as a Key object 
 
 Since: API Level 3.0.0 initialize(options as { :algorithm as Cryptography.KeyPairAlgorithm , :privateKey as Lang.ByteArray }) 
 Constructor A KeyPair can be initialized from a private key by passing a private key ByteArray from an initialized Key object into the :privateKey option of the initialize method for this class. If no private key is provided, then both a private and public key will be generated using the required :algorithm option. Note: privateKey is expected to be in little-endian byte order. Parameters: options — ( Lang.Dictionary ) — A dictionary of options :algorithm — ( Cryptography.KeyPairAlgorithm ) — The algorithm to use as a KEY_PAIR_* constant (required) 
 :privateKey — ( Lang.ByteArray ) — The private key to be used to generate the KeyPair (optional) 
 
 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the specified :algorithm is not supported, or if a required option is not provided 
 ( Lang.InvalidValueException ) — Thrown if the specified :privateKey is not the correct size for the selected algorithm 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [FitContributor (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/FitContributor.html)nModule: Toybox.FitContributor
 Overview
 The FitContributor module allows Applications and Data Fields to record Field data into FIT files on the device's file system during an activity. This is useful for recording data that is not already calculated by the device, which can be synced to a service like Garmin Connect. There are three FitContributor message types available: MESG_TYPE_SESSION Session data is written once per recording session at the end of the recording, and is used for data that pertains to the entire session (e.g. average speed). MESG_TYPE_LAP Lap data is written once for every lap in the session, and used for data that pertains to each lap (e.g. average lap speed). MESG_TYPE_RECORD Depending on the device, record data is written once per second or when new data is available (Smart Recording), but is never written faster than once per second. This message type is used for instantaneous values (e.g. current speed). Data type constants are also available for use with the createField() method. See Also:
 Session.createField() 
 Learn more about the FIT format 
 
 Example: Using a FitContributor Field in a SimpleDataField app using Toybox.FitContributor; using Toybox.WatchUi; class BananasEarnedView extends WatchUi.SimpleDataField { var bananasEarnedField = null; var totalBananas = 0.0; const CALORIES_PER_BANANA = 105.0; const BANANAS_FIELD_ID = 0; function initialize() { SimpleDataField.initialize(); // Create the custom FIT data field we want to record. bananasEarnedField = createField( "bananas_earned", BANANAS_FIELD_ID, FitContributor.DATA_TYPE_FLOAT, {:mesgType=&gt;Fit.MESG_TYPE_RECORD, :units=&gt;"B"} ); bananasEarnedField.setData(0.0); } function compute(info) { if (info != null &amp;&amp; info.calories != null) { // Calculate and set data to be written to the Field totalBananas = (info.calories / CALORIES_PER_BANANA).toFloat(); bananasEarnedField.setData(totalBananas); } // Display the data on the screen of the device return totalBananas; } } Since: API Level 1.3.0 App Types: Watch App 
 Data Field 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Requires Permission: FitContributor 
 
 Classes Under Namespace
 Classes: Field Constant Summary
 MessageType
 Since: API Level 1.3.0 Name Value Since Description See Also 
 MESG_TYPE_SESSION 18 API Level 1.3.0 The message type for session messages. 
 MESG_TYPE_LAP 19 API Level 1.3.0 The message type for lap messages. 
 MESG_TYPE_RECORD 20 API Level 1.3.0 The message type for record messages. 
 DataType
 Since: API Level 1.3.0 Name Value Since Description See Also 
 DATA_TYPE_SINT8 1 API Level 1.3.0 
 DATA_TYPE_UINT8 2 API Level 1.3.0 
 DATA_TYPE_SINT16 3 API Level 1.3.0 
 DATA_TYPE_UINT16 4 API Level 1.3.0 
 DATA_TYPE_SINT32 5 API Level 1.3.0 
 DATA_TYPE_UINT32 6 API Level 1.3.0 
 DATA_TYPE_STRING 7 API Level 1.3.0 
 DATA_TYPE_FLOAT 8 API Level 1.3.0 
 DATA_TYPE_DOUBLE 9 API Level 1.3.0 
 Generated Dec 11, 2024, 8:58:43 AM


# [Field (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/FitContributor/Field.html)nClass: Toybox.FitContributor.Field
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.FitContributor.Field 
 
 show all Overview
 A Field records custom FIT data from an Application or Data Field to a FIT file on the device's file system. Once a Field is created with the createField() method, you can submit the next Field value with setData() , which will get written to the FIT file at the next opportunity. Depending on the device, writes to the FIT file may occur once per second or when new data is available (Smart Recording). Best practice is to only call setData() when values have changed to accommodate Smart Recording. If setData() is called before the previous data is written out, the previous value will be lost and replaced by the current data. For this reason, we do not recommend using this feature for time-sensitive data requiring sub-second granularity. See Also:
 Session.createField() 
 Smart Recording vs. Every Second Recording 
 Learn more about the FIT format 
 
 Since: API Level 1.3.0 Instance Method Summary collapse 
 setData (input as Lang.Object ) as Void Set the value to write to this Field. 
 
 Instance Method Details
 setData(input as Lang.Object ) as Void 
 Set the value to write to this Field. Parameters: input — ( Lang.Object ) — The data to be written to the Field 
 
 Since: API Level 1.3.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the input type does not match the type specified in createField() at definition 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Graphics (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics.html)nModule: Toybox.Graphics
 Overview
 The Graphics module provides a set of tools that allow developers to use basic drawing functionality. This provides the ability to draw shapes, lines, fill shapes, and use dynamic layouts for graphic elements based on specific device contexts. The Device Context (Dc) is useful for developers who are interested in creating content for multiple device platforms with differing screen shapes, sizes, and color palettes. Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Data Field 
 Watch Face 
 Widget 
 
 Classes Under Namespace
 Classes: AffineTransform , BitmapReference , BitmapTexture , BoundingBox , BufferedBitmap , BufferedBitmapReference , Dc , FontReference , InvalidBitmapResourceException , InvalidPaletteException , OutOfGraphicsMemoryException , ResourceReference , VectorFont Constant Summary
 FontDefinition
 Since: API Level 1.0.0 Name Value Since Description See Also 
 FONT_XTINY 0 API Level 1.0.0 Extra tiny Connect IQ font 
 FONT_TINY 1 API Level 1.0.0 Tiny Connect IQ font 
 FONT_SMALL 2 API Level 1.0.0 Small Connect IQ font 
 FONT_MEDIUM 3 API Level 1.0.0 Medium Connect IQ font 
 FONT_LARGE 4 API Level 1.0.0 Large Connect IQ font 
 FONT_NUMBER_MILD 5 API Level 1.0.0 Normal size number only Connect IQ font 
 FONT_NUMBER_MEDIUM 6 API Level 1.0.0 Medium size number only Connect IQ font 
 FONT_NUMBER_HOT 7 API Level 1.0.0 Large size number only Connect IQ font 
 FONT_NUMBER_THAI_HOT 8 API Level 1.0.0 Huge size number only Connect IQ font 
 FONT_SYSTEM_XTINY 9 API Level 1.3.0 Extra tiny system font 
 FONT_SYSTEM_TINY 10 API Level 1.3.0 Tiny system font 
 FONT_SYSTEM_SMALL 11 API Level 1.3.0 Small system font 
 FONT_SYSTEM_MEDIUM 12 API Level 1.3.0 Medium system font 
 FONT_SYSTEM_LARGE 13 API Level 1.3.0 Large system font 
 FONT_SYSTEM_NUMBER_MILD 14 API Level 1.3.0 Normal size number only system font 
 FONT_SYSTEM_NUMBER_MEDIUM 15 API Level 1.3.0 Medium size number only system font 
 FONT_SYSTEM_NUMBER_HOT 16 API Level 1.3.0 Large size number only system font 
 FONT_SYSTEM_NUMBER_THAI_HOT 17 API Level 1.3.0 Huge size number only system font 
 FONT_GLANCE 18 API Level 3.1.8 Glance text font 
 FONT_GLANCE_NUMBER 19 API Level 3.1.8 Glance number only font 
 FONT_AUX1 20 API Level 4.2.2 Auxiliary Font 1 
 FONT_AUX2 21 API Level 4.2.2 Auxiliary Font 2 
 FONT_AUX3 22 API Level 4.2.3 Auxiliary Font 3 
 FONT_AUX4 23 API Level 4.2.3 Auxiliary Font 4 
 FONT_AUX5 24 API Level 4.2.3 Auxiliary Font 5 
 FONT_AUX6 25 API Level 4.2.3 Auxiliary Font 6 
 FONT_AUX7 26 API Level 4.2.3 Auxiliary Font 7 
 FONT_AUX8 27 API Level 4.2.3 Auxiliary Font 8 
 FONT_AUX9 28 API Level 4.2.3 Auxiliary Font 9 
 ColorValue
 Since: API Level 1.0.0 Name Value Since Description See Also 
 COLOR_WHITE 0xFFFFFF API Level 1.0.0 White 
 COLOR_LT_GRAY 0xAAAAAA API Level 1.0.0 Light Gray 
 COLOR_DK_GRAY 0x555555 API Level 1.0.0 Dark Gray 
 COLOR_BLACK 0x000000 API Level 1.0.0 Black 
 COLOR_RED 0xFF0000 API Level 1.0.0 Red 
 COLOR_DK_RED 0xAA0000 API Level 1.0.0 Dark Red 
 COLOR_ORANGE 0xFF5500 API Level 1.0.0 Orange 
 COLOR_YELLOW 0xFFAA00 API Level 1.0.0 Yellow 
 COLOR_GREEN 0x00FF00 API Level 1.0.0 Green 
 COLOR_DK_GREEN 0x00AA00 API Level 1.0.0 Dark Green 
 COLOR_BLUE 0x00AAFF API Level 1.0.0 Blue 
 COLOR_DK_BLUE 0x0000FF API Level 1.0.0 Dark Blue 
 COLOR_PURPLE 0xAA00FF API Level 1.0.0 Purple. Not valid on fenix 3 or D2 Bravo. Use 0x5500AA instead. 
 COLOR_PINK 0xFF00FF API Level 1.0.0 Pink 
 COLOR_TRANSPARENT -1 API Level 1.0.0 Transparent 
 TextJustification
 Since: API Level 1.0.0 Name Value Since Description See Also 
 TEXT_JUSTIFY_RIGHT 0 API Level 1.0.0 Right justify the text at the x/y coordinates 
 TEXT_JUSTIFY_CENTER 1 API Level 1.0.0 Center justify the text at the x/y coordinates 
 TEXT_JUSTIFY_LEFT 2 API Level 1.0.0 Left justify the text at the x/y coordinates 
 TEXT_JUSTIFY_VCENTER 4 API Level 1.0.0 Center the text vertically 
 BlendMode
 Blend mode Specifies how colors of a source pixel will be blended with the colors of a destination pixel. In the below descriptions S is source pixel D is destination pixel a is the alpha component Since: API Level 4.0.0 Name Value Since Description See Also 
 BLEND_MODE_DEFAULT 0 API Level 4.0.0 Alias for BLEND_MODE_SOURCE_OVER 
 BLEND_MODE_NO_BLEND 1 API Level 4.0.0 Alias for BLEND_MODE_SOURCE 
 BLEND_MODE_SOURCE_OVER 0 API Level 4.2.1 S + (1 - S.a) * D 
 BLEND_MODE_SOURCE 1 API Level 4.2.1 S, i.e. no blending. 
 BLEND_MODE_MULTIPLY 2 API Level 4.2.1 (S * (1 - D.a)) + (D * (1 - S.a)) + (S * D) 
 BLEND_MODE_ADDITIVE 3 API Level 4.2.1 S + D 
 AlphaBlending
 Constant representing alpha blending state for buffered bitmaps Since: API Level 4.0.0 Name Value Since Description See Also 
 ALPHA_BLENDING_FULL 0 API Level 4.0.0 Default surface for buffered bitmap with maximum alpha blending support 
 ALPHA_BLENDING_PARTIAL 1 API Level 4.0.0 Surface for buffered bitmap with at least a 1-bit alpha channel. The actual number of bits may vary by device. 
 RadialTextDirection
 Orientation for radial text Since: API Level 4.2.1 Name Value Since Description See Also 
 RADIAL_TEXT_DIRECTION_CLOCKWISE 0 API Level 4.2.1 Top of text is further from center. Typically used for upright text along the top of a circle. 
 RADIAL_TEXT_DIRECTION_COUNTER_CLOCKWISE 1 API Level 4.2.1 Bottom of text is further from center. Typically used for upright text along the bottom of a circle. 
 FilterMode
 Filter mode Specifies how many pixels to sample Since: API Level 4.2.1 Name Value Since Description See Also 
 FILTER_MODE_POINT 0 API Level 4.2.1 Point filter 
 FILTER_MODE_BILINEAR 1 API Level 4.2.1 Biliniear filter 
 ArcDirection
 Since: API Level 1.0.0 Name Value Since Description See Also 
 ARC_COUNTER_CLOCKWISE 0 API Level 1.2.0 Counter clockwise draw 
 ARC_CLOCKWISE 1 API Level 1.2.0 Clockwise draw 
 Typedef Summary collapse 
 BitmapType as WatchUi.BitmapResource or Graphics.BufferedBitmap or Graphics.BitmapReference or Graphics.BufferedBitmapReference 
 ColorType as Lang.Number or Graphics.ColorValue 
 FontType as WatchUi.FontResource or Graphics.FontDefinition or Graphics.FontReference or Graphics.VectorFont 
 Point2D as [ Lang.Numeric , Lang.Numeric ] Type alias for an Array of length 2. 
 
 Instance Method Summary collapse 
 createBufferedBitmap (options as { :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number , :bitmapResource as WatchUi.BitmapResource or Graphics.BitmapReference , :alphaBlending as Graphics.AlphaBlending }) as Graphics.BufferedBitmapReference Create a buffered bitmap object. 
 createColor (alpha as Lang.Number , red as Lang.Number , green as Lang.Number , blue as Lang.Number ) as Lang.Number Create a color with the individual channel values passed in. 
 fitTextToArea (text as Lang.String , font as Graphics.FontType , width as Lang.Numeric , height as Lang.Numeric , truncate as Lang.Boolean ) as Lang.String or Null Get a text string to fit in a specified area. 
 getFontAscent (font as Graphics.FontType ) as Lang.Number Get the recommended distance above the baseline for single spaced text. 
 getFontDescent (font as Graphics.FontType ) as Lang.Number Get the recommended distance below the baseline for single spaced text. 
 getFontHeight (font as Graphics.FontType ) as Lang.Number Get the height (ascent plus descent) of the given font. 
 getVectorFont (options as { :face as Lang.String or Lang.Array &lt; Lang.String &gt;, :size as Lang.Numeric }) as Graphics.VectorFont or Null Get a font for this device. 
 
 Typedef Details
 BitmapType as WatchUi.BitmapResource or Graphics.BufferedBitmap or Graphics.BitmapReference or Graphics.BufferedBitmapReference 
 Since: API Level 1.0.0 ColorType as Lang.Number or Graphics.ColorValue 
 Since: API Level 1.0.0 FontType as WatchUi.FontResource or Graphics.FontDefinition or Graphics.FontReference or Graphics.VectorFont 
 Since: API Level 1.0.0 Point2D as [ Lang.Numeric , Lang.Numeric ] 
 Type alias for an Array of length 2 Since: API Level 1.0.0 Instance Method Details
 createBufferedBitmap(options as { :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number , :bitmapResource as WatchUi.BitmapResource or Graphics.BitmapReference , :alphaBlending as Graphics.AlphaBlending }) as Graphics.BufferedBitmapReference 
 Create a buffered bitmap object. This function will return a Toybox::Graphics::BufferedBitmapReference object which can be used to reference the Toybox::Graphics::BufferedBitmap object. Note: The result of a draw/fill operation to a BufferedBitmap created with ALPHA_BLENDING_PARTIAL may produce inconsistent results between devices and the ConnectIQ simulator if the drawn pixels are not fully opaque or fully transparent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Must contain width and height, with optional palette, or a BitmapResource . This resource is not allowed to have an alpha channel. :width — ( Lang.Number ) — The width of the surface in pixels. Must be a positive integer value. 
 :height — ( Lang.Number ) — The height of the surface in pixels. Must be a positive integer value. 
 :palette — ( Lang.Array ) — The colors used in this surface. Using less will reduce the bitmap size. The bitmap will use the system default if not provided. The maximum palette size allowed is 256 colors. If a palette is provided, the number of colors must also be &lt;= to the number of system colors. 
 :colorDepth — ( Lang.Number ) — Color depth in terms of bits/pixel, when missing, default to system value. 
 :bitmapResource — ( WatchUi.BitmapResource ) — A BitmapResource or BitmapReference to initialize 
 :alphaBlending — ( Graphics.AlphaBlending ) — A AlphaBlending enum to specify the level of alpha blending support for this buffered bitmap object. 
 
 
 
 Returns: Toybox::Graphics::BufferedBitmapReference A reference to BufferedBitmap object 
 
 Since: API Level 4.0.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the palette size exceeds the number of system colors. 
 ( Graphics.InvalidPaletteException ) — Thrown if the palette size exceeds 256 colors. 
 ( Graphics.InvalidBitmapResourceException ) — Thrown if the BitmapResource provided has an alpha channel. 
 
 createColor(alpha as Lang.Number , red as Lang.Number , green as Lang.Number , blue as Lang.Number ) as Lang.Number 
 Create a color with the individual channel values passed in Parameters: alpha — ( Lang.Number ) — Number value ranging from 0-255 representing alpha channel 
 red — ( Lang.Number ) — Number value ranging from 0-255 representing red channel 
 green — ( Lang.Number ) — Number value ranging from 0-255 representing green channel 
 blue — ( Lang.Number ) — Number value ranging from 0-255 representing blue channel 
 
 Returns: color [Toybox::Lang::Number] 32-bit value representing the created color that can be used with Toybox.Graphics functions. 
 
 Since: API Level 4.0.0 fitTextToArea(text as Lang.String , font as Graphics.FontType , width as Lang.Numeric , height as Lang.Numeric , truncate as Lang.Boolean ) as Lang.String or Null 
 Get a text string to fit in a specified area Note: FontReference is only supported in CIQ 4.0.0 and later Parameters: text — ( Lang.String ) — The text to fit into the given area, which may include newlines 
 font — ( Graphics.FontType ) — The font to use when determining line break placement 
 width — ( Lang.Numeric ) — The width of the area to fit within 
 height — ( Lang.Numeric ) — The height of the area to fit within 
 truncate — ( Lang.Boolean ) — If true , the resulting string may be truncated to fit within the provided area using the provided font 
 
 Returns: Returns a String suitable for display in the given area. The String will be truncated if the 'truncate' parameter is true and the String cannot fit into the specified area. Otherwise, null will be returned. 
 
 Since: API Level 3.1.0 getFontAscent(font as Graphics.FontType ) as Lang.Number 
 Get the recommended distance above the baseline for single spaced text. The base line is the line on which the text sits. Note: FontReference is only supported in CIQ 4.0.0 and later Parameters: font — ( Graphics.FontType ) — The font to use 
 
 Returns: Lang.Number — The ascent of the font 
 
 Since: API Level 1.2.0 getFontDescent(font as Graphics.FontType ) as Lang.Number 
 Get the recommended distance below the baseline for single spaced text. The base line is the line on which the text sits. Note: FontReference is only supported in CIQ 4.0.0 and later Parameters: font — ( Graphics.FontType ) — The font to use 
 
 Returns: Lang.Number — The descent of the font 
 
 Since: API Level 1.2.0 getFontHeight(font as Graphics.FontType ) as Lang.Number 
 Get the height (ascent plus descent) of the given font. Note: FontReference is only supported in CIQ 4.0.0 and later Parameters: font — ( Graphics.FontType ) — The font to use 
 
 Returns: Lang.Number — The height of the font 
 
 Since: API Level 1.2.0 getVectorFont(options as { :face as Lang.String or Lang.Array &lt; Lang.String &gt;, :size as Lang.Numeric }) as Graphics.VectorFont or Null 
 Get a font for this device Parameters: options — ( Lang.Dictionary ) — A description of the font to retrieve. :face — ( Lang.String , Lang.Array ) — A String representing the face name requested, or an Array of face names that are acceptable. 
 :size — ( Lang.Numeric ) — The height of the font requested in pixels as a positive number. 
 
 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 3
 Venu® 3S
 
 Returns: Graphics.VectorFont — if a font matches the given request, otherwise null 
 
 See Also: Reference Guides - Devices Reference 
 
 Since: API Level 4.2.1 Throws: ( Lang.InvalidOptionsException ) — Thrown if invalid :size value is provided. 
 ( Lang.InvalidOptionsException ) — Thrown if invalid :face value is provided. 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [AffineTransform (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/AffineTransform.html)nClass: Toybox.Graphics.AffineTransform
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.AffineTransform 
 
 show all Overview
 A 2D affine transformation matrix This is a 2D transform, typically used for converting coordinates from one 2D coordinate system to another. These transformations can represent a sequence of rotations, scales, shears, and translations. | m00 m01 m02 | | m10 m11 m12 | | 0 0 1 | Since: API Level 4.2.0 Instance Method Summary collapse 
 concatenate (xform as Graphics.AffineTransform ) as Void Apply the given transform Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | x00 x01 x02 | | m10 m11 m12 | x | x10 x11 x12 | | 0 0 1 | | 0 0 1 |. 
 getDeterminant () as Lang.Float Get the transform determinant. 
 getMatrix () as [ Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float ] Get the transform values Get the underlying values of this transform as an Array | m00 m01 m02 | | m10 m11 m12 | =&gt; [ m00, m01, m02, m10, m11, m12 ] | 0 0 1 |. 
 initialize () initialize self to the identity transform | 1 0 0 | | 0 1 0 | | 0 0 1 |. 
 invert () as Void Invert self. 
 preConcatenate (xform as Graphics.AffineTransform ) as Void Apply the given transform Assign self to the result of the following matrix-matrix product: | x00 x01 x02 | | m00 m01 m02 | | x10 x11 x12 | x | m10 m11 m12 | | 0 0 1 | | 0 0 1 |. 
 rotate (theta as Lang.Float ) as Void Apply a rotation Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | cos -sin 0 | | m10 m11 m12 | x | sin cos 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToRotation(theta); self.concatenate(xform);. 
 scale (sx as Lang.Float , sy as Lang.Float ) as Void Apply a scale Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | sx 0 0 | | m10 m11 m12 | x | 0 sy 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToScale(sx, sy); self.concatenate(xform);. 
 setMatrix (m as [ Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float ]) as Void Set the transform values | m00 m01 m02 | [ m00, m01, m02, m10, m11, m12 ] =&gt; | m10 m11 m12 | | 0 0 1 |. 
 setToRotation (theta as Lang.Float ) as Void Set self to a rotation transform | cos -sin 0 | | sin cos 0 | | 0 0 1 |. 
 setToScale (sx as Lang.Float , sy as Lang.Float ) as Void Set self to a scale transform | sx 0 0 | | 0 sy 0 | | 0 0 1 |. 
 setToShear (shx as Lang.Float , shy as Lang.Float ) as Void Set self to a shear transform | 1 shx 0 | | shy 1 0 | | 0 0 1 |. 
 setToTranslation (tx as Lang.Float , ty as Lang.Float ) as Void Set self to a translation transform | 1 0 tx | | 0 1 ty | | 0 0 1 |. 
 shear (shx as Lang.Float , shy as Lang.Float ) as Void Apply a shear Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | 1 shx 0 | | m10 m11 m12 | x | shy 1 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToShear(shx, shy); self.concatenate(xform);. 
 transformPoint (pt as Graphics.Point2D ) as Graphics.Point2D Apply transform to a 2D coordinate Transform a single point as if by generating the following matrix-vector product: | m00 m01 m02 | | ptx | | m10 m11 m12 | x | pty | | 0 0 1 | | 1 |. 
 transformPoints (pts as Lang.Array &lt; Graphics.Point2D &gt;) as Lang.Array &lt; Graphics.Point2D &gt; Apply transform to an Array of 2D coordinates Transform an array of coordinates. 
 translate (tx as Lang.Float , ty as Lang.Float ) as Void Apply translation Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | 1 0 tx | | m10 m11 m12 | x | 0 1 ty | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToTranslation(tx, ty); self.concatenate(xform);. 
 
 Instance Method Details
 concatenate(xform as Graphics.AffineTransform ) as Void 
 Apply the given transform Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | x00 x01 x02 | | m10 m11 m12 | x | x10 x11 x12 | | 0 0 1 | | 0 0 1 | Parameters: xform — ( Graphics.AffineTransform ) 
 
 Since: API Level 4.2.0 getDeterminant() as Lang.Float 
 Get the transform determinant Since: API Level 4.2.0 getMatrix() as [ Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float ] 
 Get the transform values Get the underlying values of this transform as an Array | m00 m01 m02 | | m10 m11 m12 | =&gt; [ m00, m01, m02, m10, m11, m12 ] | 0 0 1 | Since: API Level 4.2.0 initialize() 
 initialize self to the identity transform | 1 0 0 | | 0 1 0 | | 0 0 1 | Since: API Level 4.2.0 invert() as Void 
 Invert self Since: API Level 4.2.0 Throws: ValueOutOfBoundsException if self cannot be inverted. 
 
 preConcatenate(xform as Graphics.AffineTransform ) as Void 
 Apply the given transform Assign self to the result of the following matrix-matrix product: | x00 x01 x02 | | m00 m01 m02 | | x10 x11 x12 | x | m10 m11 m12 | | 0 0 1 | | 0 0 1 | Parameters: xform — ( Graphics.AffineTransform ) 
 
 Since: API Level 4.2.0 rotate(theta as Lang.Float ) as Void 
 Apply a rotation Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | cos -sin 0 | | m10 m11 m12 | x | sin cos 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToRotation(theta); self.concatenate(xform); Parameters: theta — ( Lang.Float ) 
 
 Since: API Level 4.2.0 scale(sx as Lang.Float , sy as Lang.Float ) as Void 
 Apply a scale Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | sx 0 0 | | m10 m11 m12 | x | 0 sy 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToScale(sx, sy); self.concatenate(xform); Parameters: sx — ( Lang.Float ) 
 sy — ( Lang.Float ) 
 
 Since: API Level 4.2.0 setMatrix(m as [ Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float , Lang.Float ]) as Void 
 Set the transform values | m00 m01 m02 | m00, m01, m02, m10, m11, m12 =&gt; | m10 m11 m12 | | 0 0 1 | 
 Since: API Level 4.2.0 Throws: UnexpectedTypeException if parameter is not an Array 
 InvalidValueException if parameter does not have exactly 6 elements 
 
 setToRotation(theta as Lang.Float ) as Void 
 Set self to a rotation transform | cos -sin 0 | | sin cos 0 | | 0 0 1 | Parameters: theta — ( Lang.Float ) 
 
 Since: API Level 4.2.0 setToScale(sx as Lang.Float , sy as Lang.Float ) as Void 
 Set self to a scale transform | sx 0 0 | | 0 sy 0 | | 0 0 1 | Parameters: sx — ( Lang.Float ) 
 sy — ( Lang.Float ) 
 
 Since: API Level 4.2.0 setToShear(shx as Lang.Float , shy as Lang.Float ) as Void 
 Set self to a shear transform | 1 shx 0 | | shy 1 0 | | 0 0 1 | Parameters: shx — ( Lang.Float ) 
 shy — ( Lang.Float ) 
 
 Since: API Level 4.2.0 setToTranslation(tx as Lang.Float , ty as Lang.Float ) as Void 
 Set self to a translation transform | 1 0 tx | | 0 1 ty | | 0 0 1 | Parameters: tx — ( Lang.Float ) 
 ty — ( Lang.Float ) 
 
 Since: API Level 4.2.0 shear(shx as Lang.Float , shy as Lang.Float ) as Void 
 Apply a shear Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | 1 shx 0 | | m10 m11 m12 | x | shy 1 0 | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToShear(shx, shy); self.concatenate(xform); Parameters: shx — ( Lang.Float ) 
 shy — ( Lang.Float ) 
 
 Since: API Level 4.2.0 transformPoint(pt as Graphics.Point2D ) as Graphics.Point2D 
 Apply transform to a 2D coordinate Transform a single point as if by generating the following matrix-vector product: | m00 m01 m02 | | ptx | | m10 m11 m12 | x | pty | | 0 0 1 | | 1 | Parameters: pt — ( Graphics.Point2D ) 
 
 Returns: Graphics.Point2D 
 
 Since: API Level 4.2.0 transformPoints(pts as Lang.Array &lt; Graphics.Point2D &gt;) as Lang.Array &lt; Graphics.Point2D &gt; 
 Apply transform to an Array of 2D coordinates Transform an array of coordinates Parameters: pts — ( Lang.Array ) 
 
 Returns: Lang.Array 
 
 Since: API Level 4.2.0 translate(tx as Lang.Float , ty as Lang.Float ) as Void 
 Apply translation Assign self to the result of the following matrix-matrix product: | m00 m01 m02 | | 1 0 tx | | m10 m11 m12 | x | 0 1 ty | | 0 0 1 | | 0 0 1 | Equivalent to var xform = new AffineTransform(); xform.setToTranslation(tx, ty); self.concatenate(xform); Parameters: tx — ( Lang.Float ) 
 ty — ( Lang.Float ) 
 
 Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [BitmapReference (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/BitmapReference.html)nClass: Toybox.Graphics.BitmapReference
 Inherits: Toybox.Graphics.ResourceReference Toybox.Lang.Object 
 Toybox.Graphics.ResourceReference 
 Toybox.Graphics.BitmapReference 
 
 show all Overview
 Object that references a bitmap resource allocated from the graphics memory pool Since: API Level 4.0.0 Instance Method Summary collapse 
 getHeight () as Lang.Number Load the resource, then get the height of a bitmap resource referenced. 
 getWidth () as Lang.Number Load the resource, then get the width of a bitmap resource referenced. 
 
 Instance Method Details
 getHeight() as Lang.Number 
 Load the resource, then get the height of a bitmap resource referenced Returns: Lang.Number — Height of the bitmap in pixels 
 
 Since: API Level 4.0.0 Throws: ( Graphics.OutOfGraphicsMemoryException ) — Thrown if resource cannot be loaded or restored because there isn't enough free pool to load the resource 
 
 getWidth() as Lang.Number 
 Load the resource, then get the width of a bitmap resource referenced Returns: Lang.Number — Width of the bitmap in pixels 
 
 Since: API Level 4.0.0 Throws: ( Graphics.OutOfGraphicsMemoryException ) — Thrown if resource cannot be loaded or restored because there isn't enough free pool to load the resource 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [BitmapTexture (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/BitmapTexture.html)nClass: Toybox.Graphics.BitmapTexture
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.BitmapTexture 
 
 show all Overview
 An object representing a textured area with in a bitmap that can be can be used to fill a primitive drawable object. Since: API Level 4.0.0 Instance Method Summary collapse 
 initialize (options as { :bitmap as Graphics.BitmapType or Lang.ResourceId , :offsetX as Lang.Number , :offsetY as Lang.Number }) Constructor. 
 setOffset (offsetX as Lang.Number , offsetY as Lang.Number ) as Void Set an offset for the texture. 
 
 Instance Method Details
 initialize(options as { :bitmap as Graphics.BitmapType or Lang.ResourceId , :offsetX as Lang.Number , :offsetY as Lang.Number }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A dictionary representing a bitmap with an offset to be used as a texture. :bitmap — ( Lang.ResourceId , WatchUi.BitmapResource , Graphics.BufferedBitmap , Graphics.BitmapReference ) — Bitmap to be used as a texture. 
 :offsetX — ( Lang.Number ) — An x offset with in the bitmap to be mapped to the x coordinate of the origin of the primitive object. 
 :offsetY — ( Lang.Number ) — An y offset with in the bitmap to be mapped to the y coordinate of the origin of the primitive object. 
 
 
 
 Since: API Level 4.0.0 setOffset(offsetX as Lang.Number , offsetY as Lang.Number ) as Void 
 Set an offset for the texture. Parameters: offsetX — Toybox::Lang::Number An x offset with in the bitmap to be used to render the texture 
 offsetY — Toybox::Lang::Number An y offset with in the bitmap to be used to render the texture 
 
 Since: API Level 4.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [BoundingBox (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/BoundingBox.html)nClass: Toybox.Graphics.BoundingBox
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.BoundingBox 
 
 show all Overview
 An object representing a bounding box in the UI Since: API Level 3.2.7 Instance Member Summary collapse 
 height as Lang.Number or Null Represents the height of the bounding box. 
 width as Lang.Number or Null Represents the width of the bounding box. 
 x as Lang.Number or Null Represents the x coordinate for the origin of the bounding box. 
 y as Lang.Number or Null Represents the y coordinate for the origin of the bounding box. 
 
 Instance Attribute Details
 var height as Lang.Number or Null 
 Represents the height of the bounding box Since: API Level 3.2.7 var width as Lang.Number or Null 
 Represents the width of the bounding box Since: API Level 3.2.7 var x as Lang.Number or Null 
 Represents the x coordinate for the origin of the bounding box Since: API Level 3.2.7 var y as Lang.Number or Null 
 Represents the y coordinate for the origin of the bounding box Since: API Level 3.2.7 Generated Dec 11, 2024, 8:58:43 AM


# [BufferedBitmap (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/BufferedBitmap.html)nClass: Toybox.Graphics.BufferedBitmap
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.BufferedBitmap 
 
 show all Overview
 This class represents an off-screen bitmap. It provides methods to modify the bitmap palette, and get a drawable context. See Also:
 Core Topics - Resources 
 
 Example: Sets up an off-screen buffer using resources. using Toybox.Graphics; var screenShape; var offscreenBuffer; var dateBuffer; if (Toybox.Graphics has :BufferedBitmap) { // check to see if device has BufferedBitmap enabled offscreenBuffer = new Graphics.BufferedBitmap( {:width=&gt;dc.getWidth(), :height=&gt;dc.getHeight(), :palette=&gt;[Graphics.COLOR_DK_GRAY, Graphics.COLOR_LT_GRAY, Graphics.COLOR_BLACK, Graphics.COLOR_WHITE]} ); // create an off-screen buffer with a palette of four colors stringBuffer = new Graphics.BufferedBitmap( // Buffer will have full color support as no palette is defined {:width=&gt;dc.getWidth(), :height=&gt;Graphics.getFontHeight(Graphics.FONT_MEDIUM)} ); } else { offscreenBuffer = null; // handle devices without BufferedBitmap stringBuffer = null; } Since: API Level 2.3.0 Instance Method Summary collapse 
 getDc () as Graphics.Dc Get the Dc to draw on the buffered bitmap. 
 getHeight () as Lang.Number Get the height of a bitmap. 
 getPalette () as Lang.Array &lt; Graphics.ColorType &gt; null if this surface uses the system palette. 
 getWidth () as Lang.Number Get the width of a bitmap. 
 initialize (options as { :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number , :bitmapResource as WatchUi.BitmapResource , :alphaBlending as Graphics.AlphaBlending }) Constructor. 
 isCached () as Lang.Boolean Check if the memory for the bitmap is still loaded in the memory User can invoke this method to check if the underlying resource is still available in the memory since last used if true , the resource such as BufferedBitmap has been cached and can be used directly without re-drawing. 
 setPalette (palette as Lang.Array &lt; Graphics.ColorType &gt;) as Void 
 
 Instance Method Details
 getDc() as Graphics.Dc 
 Get the Dc to draw on the buffered bitmap. Returns: Graphics.Dc — The draw context 
 
 Since: API Level 2.3.0 getHeight() as Lang.Number 
 Get the height of a bitmap. Returns: Lang.Number — Height of the bitmap in pixels 
 
 Since: API Level 4.0.0 getPalette() as Lang.Array &lt; Graphics.ColorType &gt; 
 null if this surface uses the system palette Returns: Lang.Array — The current palette for this bitmap. 
 
 Since: API Level 2.3.0 getWidth() as Lang.Number 
 Get the width of a bitmap. Returns: Lang.Number — Width of the bitmap in pixels 
 
 Since: API Level 4.0.0 initialize(options as { :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number , :bitmapResource as WatchUi.BitmapResource , :alphaBlending as Graphics.AlphaBlending }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Must contain width and height, with optional palette, or a BitmapResource . This resource is not allowed to have an alpha channel. :width — ( Lang.Number ) — The width of the surface in pixels 
 :height — ( Lang.Number ) — The height of the surface in pixels 
 :palette — ( Lang.Array ) — The colors used in this surface. Using less will reduce the bitmap size. The bitmap will use the system default if not provided. The maximum palette size allowed is 256 colors. If a palette is provided, the number of colors must also be &lt;= to the number of system colors. 
 :colorDepth — ( Lang.Number ) — Color depth in terms of bits/pixel, when missing, default to system value. 
 :bitmapResource — ( WatchUi.BitmapResource ) — A BitmapResource to initialize 
 :alphaBlending — ( Graphics.AlphaBlending ) — A AlphaBlending enum to specify the level of alpha blending support for this buffered bitmap object 
 
 
 
 Since: API Level 2.3.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the palette size exceeds the number of system colors. 
 ( Graphics.InvalidPaletteException ) — Thrown if the palette size exceeds 256 colors. 
 ( Graphics.InvalidBitmapResourceException ) — Thrown if the BitmapResource provided has an alpha channel. 
 ( Graphics.OutOfGraphicsMemoryException ) — Thrown if there isn't enough free memory available to load the resource. 
 
 isCached() as Lang.Boolean 
 Check if the memory for the bitmap is still loaded in the memory User can invoke this method to check if the underlying resource is still available in the memory since last used if true , the resource such as BufferedBitmap has been cached and can be used directly without re-drawing. Returns: Lang.Boolean — true if the object's memory has not been recycled since last usage. 
 
 Since: API Level 4.0.0 setPalette(palette as Lang.Array &lt; Graphics.ColorType &gt;) as Void 
 Parameters: palette — ( Lang.Array ) — A palette for this bitmap. The number of colors must match the current palette. Each color in the image will be replaced with the colors specified in the new palette. 
 
 Since: API Level 2.3.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the palette size does not match the current palette. 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [BufferedBitmapReference (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/BufferedBitmapReference.html)nClass: Toybox.Graphics.BufferedBitmapReference
 Inherits: Toybox.Graphics.ResourceReference Toybox.Lang.Object 
 Toybox.Graphics.ResourceReference 
 Toybox.Graphics.BufferedBitmapReference 
 
 show all Overview
 Object that references the bitmap resource allocated from the graphics memory pool rather than form the app's local memory. Since: API Level 4.0.0 Instance Method Summary collapse 
 getHeight () as Lang.Number Load the resource, then get the height of a bitmap resource referenced. 
 getWidth () as Lang.Number Load the resource, then get the width of a bitmap resource referenced. 
 
 Instance Method Details
 getHeight() as Lang.Number 
 Load the resource, then get the height of a bitmap resource referenced Returns: Lang.Number — Height of the bitmap in pixels 
 
 Since: API Level 4.0.0 Throws: ( Graphics.OutOfGraphicsMemoryException ) — Thrown if resource cannot be loaded or restored because there isn't enough free pool to load the resource 
 
 getWidth() as Lang.Number 
 Load the resource, then get the width of a bitmap resource referenced Returns: Lang.Number — Width of the bitmap in pixels 
 
 Since: API Level 4.0.0 Throws: ( Graphics.OutOfGraphicsMemoryException ) — Thrown if resource cannot be loaded or restored because there isn't enough free pool to load the resource 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Dc (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/Dc.html)nClass: Toybox.Graphics.Dc
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.Dc 
 
 show all Overview
 This class represents a device context. It provides methods to perform drawing operations on the device. Note: You should never directly instantiate a Dc object, or attempt to render to the screen outside of an onUpdate call. Example: Draws a blue rectangle using direct pixel parameters. using Toybox.Graphics; function onUpdate(dc) { dc.setColor(Graphics.COLOR_BLUE, Graphics.COLOR_BLACK); dc.fillRectangle(100, 100, 100, 100); } Example: Draws a red circle using direct pixel parameters. using Toybox.Graphics; function onUpdate(dc) { dc.setColor(Graphics.COLOR_RED, Graphics.COLOR_BLACK); dc.fillCircle(50, 100, 75); } Example: Draws "Hello World" in the center of the screen using calls to the Device Context (dc). using Toybox.Graphics; function onUpdate(dc) { dc.setColor(Graphics.COLOR_BLACK, Graphics.COLOR_TRANSPARENT); dc.drawText( dc.getWidth() / 2, // gets the width of the device and divides by 2 dc.getHeight() / 2, // gets the height of the device and divides by 2 Graphics.FONT_LARGE, // sets the font size "Hello World", // the String to display Graphics.TEXT_JUSTIFY_CENTER // sets the justification for the text ); } Example: Clears the screen of device with background color (Graphics.COLOR_BLACK). using Toybox.Graphics; function onUpdate(dc) { dc.setColor(Graphics.COLOR_BLACK, Graphics.COLOR_BLACK); dc.clear(); } Since: API Level 1.0.0 Instance Method Summary collapse 
 clear () as Void Erase the screen using the background color. 
 clearClip () as Void Reset the drawable area to the full area of the Dc. 
 drawAngledText (x as Lang.Numeric , y as Lang.Numeric , font as Graphics.VectorFont , text as Lang.String , justification as Graphics.TextJustification or Lang.Number , angle as Lang.Numeric ) as Void Draw angled text Draw text such that it is oriented perpendicular to a radial line at the given angle. 
 drawArc (x as Lang.Numeric , y as Lang.Numeric , r as Lang.Numeric , attr as Graphics.ArcDirection , degreeStart as Lang.Numeric , degreeEnd as Lang.Numeric ) as Void Draw an arc. 
 drawBitmap (x as Lang.Numeric , y as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void Draw a bitmap to the screen. 
 drawBitmap2 (x as Lang.Numeric , y as Lang.Numeric , bitmap as Graphics.BitmapType , options as { :bitmapX as Lang.Number , :bitmapY as Lang.Number , :bitmapWidth as Lang.Number , :bitmapHeight as Lang.Number , :tintColor as Graphics.ColorType , :filterMode as Graphics.FilterMode , :transform as Graphics.AffineTransform } or Null ) as Void Draw bitmap with the given options. 
 drawCircle (x as Lang.Numeric , y as Lang.Numeric , radius as Lang.Numeric ) as Void Draw a circle around a point. 
 drawEllipse (x as Lang.Numeric , y as Lang.Numeric , a as Lang.Numeric , b as Lang.Numeric ) as Void Draw an ellipse around a point. 
 drawLine (x1 as Lang.Numeric , y1 as Lang.Numeric , x2 as Lang.Numeric , y2 as Lang.Numeric ) as Void Draw a line between two points. 
 drawOffsetBitmap (x as Lang.Numeric , y as Lang.Numeric , bitmapX as Lang.Numeric , bitmapY as Lang.Numeric , bitmapWidth as Lang.Numeric , bitmapHeight as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void Draw a bitmap to the screen with an offset. 
 drawPoint (x as Lang.Numeric , y as Lang.Numeric ) as Void Draw a point on the screen. 
 drawRadialText (x as Lang.Numeric , y as Lang.Numeric , font as Graphics.VectorFont , text as Lang.String , justification as Graphics.TextJustification or Lang.Number , angle as Lang.Numeric , radius as Lang.Numeric , direction as Graphics.RadialTextDirection ) as Void Draw radial text Draw text oriented along an arc. 
 drawRectangle (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void Draw a rectangle. 
 drawRoundedRectangle (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , radius as Lang.Numeric ) as Void Draw a rounded rectangle. 
 drawScaledBitmap (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void Draw a scaled bitmap to a surface. 
 drawText (x as Lang.Numeric , y as Lang.Numeric , font as Graphics.FontType , text as Lang.Object or Null , justification as Graphics.TextJustification or Lang.Number ) as Void Draw text at the given location. 
 fillCircle (x as Lang.Numeric , y as Lang.Numeric , radius as Lang.Numeric ) as Void Fill a circle with the foreground color. 
 fillEllipse (x as Lang.Numeric , y as Lang.Numeric , a as Lang.Numeric , b as Lang.Numeric ) as Void Fill an ellipse with the foreground color. 
 fillPolygon (pts as Lang.Array &lt; Graphics.Point2D &gt;) as Void Fill a polygon with the foreground color. 
 fillRectangle (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void Fill a rectangle with the foreground color. 
 fillRoundedRectangle (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , radius as Lang.Numeric ) as Void Fill a rounded rectangle with the foreground color. 
 getFontHeight (font as Graphics.FontType ) as Lang.Number Get the height of a font. 
 getHeight () as Lang.Number Get the height of the display region that is available to the app. 
 getTextDimensions (text as Lang.String , font as Graphics.FontType ) as [ Lang.Number , Lang.Number ] Get the width and height of a String. 
 getTextWidthInPixels (text as Lang.String , font as Graphics.FontType ) as Lang.Number Get the width of a String. 
 getWidth () as Lang.Number Get the width of the display region that is available to the app. 
 setAntiAlias (enabled as Lang.Boolean ) as Void Enable anti-aliased drawing for primitives This method is not supported for a BufferedBitmap that has a palette. 
 setBlendMode (mode as Graphics.BlendMode ) as Void Set blend mode for drawing. 
 setClip (x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void Apply a clipping region to the Dc. 
 setColor (foreground as Graphics.ColorType , background as Graphics.ColorType ) as Void Set the current foreground and background colors. 
 setFill (fill as Lang.Number or Graphics.BitmapTexture ) as Void Set fill tool for drawing primitives. 
 setPenWidth (width as Lang.Numeric ) as Void Set the width of a line. 
 setStroke (stroke as Lang.Number or Graphics.BitmapTexture ) as Void Set draw tool for drawing primitives. 
 
 Instance Method Details
 clear() as Void 
 Erase the screen using the background color. Note: Starting form version 3.1.0, COLOR_TRANSPARENT will also be honored as background color, which will cause the value of pixels in the clip region to be replaced by COLOR_TRANSPARENT. For example, this can be used to clear the transparent overlay layer so animation background is visible. Since: API Level 1.0.0 clearClip() as Void 
 Reset the drawable area to the full area of the Dc. Since: API Level 2.3.0 drawAngledText(x as Lang.Numeric , y as Lang.Numeric , font as Graphics.VectorFont , text as Lang.String , justification as Graphics.TextJustification or Lang.Number , angle as Lang.Numeric ) as Void 
 Draw angled text Draw text such that it is oriented perpendicular to a radial line at the given angle. Parameters: x — ( Lang.Number ) — The x location of the text 
 y — ( Lang.Number ) — The y location of the text 
 font — ( Graphics.VectorFont ) — The font to use. 
 text — ( Lang.String ) — The String to render. 
 justification — ( Graphics.TextJustification , Lang.Number ) — Specifies how text is placed relative to the text location. 
 angle — ( Lang.Number ) — Angle of the text baseline in degrees counter-clockwise from the 3 o'clock position. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.2.1 drawArc(x as Lang.Numeric , y as Lang.Numeric , r as Lang.Numeric , attr as Graphics.ArcDirection , degreeStart as Lang.Numeric , degreeEnd as Lang.Numeric ) as Void 
 Draw an arc. 0 degrees: 3 o'clock position. 
 90 degrees: 12 o'clock position. 
 180 degrees: 9 o'clock position. 
 270 degrees: 6 o'clock position. 
 
 Parameters: x — ( Lang.Number ) — The x location of the arc center 
 y — ( Lang.Number ) — The y location of the arc center 
 r — ( Lang.Number ) — The radius of the arc 
 attr — ( Graphics.ArcDirection ) — Arc drawing attributes. (ARC_COUNTER_CLOCKWISE or ARC_CLOCKWISE) 
 degreeStart — ( Lang.Number ) — The start angle of the arc by degrees. 
 degreeEnd — ( Lang.Number ) — The end angle of the arc by degrees. 
 
 Since: API Level 1.2.0 drawBitmap(x as Lang.Numeric , y as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void 
 Draw a bitmap to the screen. Note: BitmapReference is only supported in CIQ 4.0.0 and later Parameters: x — ( Lang.Number ) — The top left x coordinate to begin the draw 
 y — ( Lang.Number ) — The top left y coordinate to begin the draw 
 bitmap — ( WatchUi.BitmapResource , Graphics.BufferedBitmap , Graphics.BitmapReference ) — The object to draw. The source color palette must be a subset of the destination color palette. 
 
 Since: API Level 1.0.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the source color palette is not a subset of the destination palette 
 
 drawBitmap2(x as Lang.Numeric , y as Lang.Numeric , bitmap as Graphics.BitmapType , options as { :bitmapX as Lang.Number , :bitmapY as Lang.Number , :bitmapWidth as Lang.Number , :bitmapHeight as Lang.Number , :tintColor as Graphics.ColorType , :filterMode as Graphics.FilterMode , :transform as Graphics.AffineTransform } or Null ) as Void 
 Draw bitmap with the given options Parameters: x — ( Lang.Number ) — The top left x coordinate to begin the draw 
 y — ( Lang.Number ) — The top left y coordinate to begin the draw 
 bitmap — ( Lang.Object ) — The BitmapResource or BufferedBitmap to render. The source color palette must be a subset of the destination color palette. 
 options — ( Lang.Dictionary ) — A dictionary of options :bitmapX — ( Lang.Number ) — The x coordinate of the top left corner of the source bitmap area. Default is 0 
 :bitmapY — ( Lang.Number ) — The y coordinate of the top left corner of the source bitmap area. Default is 0 
 :bitmapWidth — ( Lang.Number ) — The width of the source bitmap area. Default is bitmap.getWidth() 
 :bitmapHeight — ( Lang.Number ) — The height of the source bitmap area. Default is bitmap.getHeight() 
 :tintColor — ( Graphics.ColorType ) — Tint color to apply to the output If not provided, no tint is applied. 
 :filterMode — ( Graphics.FilterMode ) — Default is FILTER_MODE_POINT. 
 :transform — ( Graphics.AffineTransform ) — Transformation to apply to the source image when drawing it to the output. If not provided, no transform is applied. 
 
 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 4.2.1 Throws: InvalidValueException if one of :bitmapX , :bitmapY , :bitmapWidth , :bitmapHeight are provided and outside the bounds of bitmap . 
 
 drawCircle(x as Lang.Numeric , y as Lang.Numeric , radius as Lang.Numeric ) as Void 
 Draw a circle around a point. Parameters: x — ( Lang.Number ) — The x location of the circle center 
 y — ( Lang.Number ) — The y location of the circle center 
 radius — ( Lang.Number ) — The radius of the circle 
 
 Since: API Level 1.0.0 drawEllipse(x as Lang.Numeric , y as Lang.Numeric , a as Lang.Numeric , b as Lang.Numeric ) as Void 
 Draw an ellipse around a point. Parameters: x — ( Lang.Number ) — The x location of the ellipse center 
 y — ( Lang.Number ) — The y location of the ellipse center 
 a — ( Lang.Number ) — The radius of the ellipse along the x axis 
 b — ( Lang.Number ) — The radius of the ellipse along the y axis 
 
 Since: API Level 1.0.0 drawLine(x1 as Lang.Numeric , y1 as Lang.Numeric , x2 as Lang.Numeric , y2 as Lang.Numeric ) as Void 
 Draw a line between two points. Parameters: x1 — ( Lang.Number ) — The first x coordinate 
 y1 — ( Lang.Number ) — The first y coordinate 
 x2 — ( Lang.Number ) — The second x coordinate 
 y2 — ( Lang.Number ) — The second y coordinate 
 
 Since: API Level 1.0.0 drawOffsetBitmap(x as Lang.Numeric , y as Lang.Numeric , bitmapX as Lang.Numeric , bitmapY as Lang.Numeric , bitmapWidth as Lang.Numeric , bitmapHeight as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void 
 Draw a bitmap to the screen with an offset. Parameters: x — ( Lang.Number ) — The top left x coordinate to begin the draw 
 y — ( Lang.Number ) — The top left y coordinate to begin the draw 
 bitmapX — ( Lang.Number ) — The x offset of the upper left corner of pixels to copy from the bitmap. 
 bitmapY — ( Lang.Number ) — The y offset of the upper left corner of pixels to copy from the bitmap. 
 bitmapWidth — ( Lang.Number ) — The width of the area to copy pixels from the bitmap. 
 bitmapHeight — ( Lang.Number ) — The height of the area to copy pixels from the bitmap 
 bitmap — ( Lang.Object ) — The BitmapResource or BufferedBitmap to render. The source color palette must be a subset of the destination color palette. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.0.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the source color palette is not a subset of the destination palette 
 
 drawPoint(x as Lang.Numeric , y as Lang.Numeric ) as Void 
 Draw a point on the screen. Parameters: x — ( Lang.Number ) — The x location of the point 
 y — ( Lang.Number ) — The y location of the point 
 
 Since: API Level 1.0.0 drawRadialText(x as Lang.Numeric , y as Lang.Numeric , font as Graphics.VectorFont , text as Lang.String , justification as Graphics.TextJustification or Lang.Number , angle as Lang.Numeric , radius as Lang.Numeric , direction as Graphics.RadialTextDirection ) as Void 
 Draw radial text Draw text oriented along an arc. Parameters: x — ( Lang.Number ) — The x location of the center of circle for radial text 
 y — ( Lang.Number ) — The y location of the center of circle for radial text 
 font — ( Graphics.VectorFont ) — The font to use. 
 text — ( Lang.String ) — The String to render. 
 justification — ( Graphics.TextJustification , Lang.Number ) — Specifies how text placed relative to the text location. 
 angle — ( Lang.Number ) — Angle to a point on the circle to justify text in degrees counter-clockwise from the 3 o'clock position. 
 radius — ( Lang.Number ) — Distance from center of circle on which to draw text. 
 direction — ( Graphics.RadialTextDirection ) — Text drawing direction along the arc. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.2.1 drawRectangle(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void 
 Draw a rectangle. Parameters: x — ( Lang.Number ) — The x location of the upper corner 
 y — ( Lang.Number ) — The y location of the upper corner 
 width — ( Lang.Number ) — The width value of the rectangle 
 height — ( Lang.Number ) — The height value of the rectangle 
 
 Since: API Level 1.0.0 drawRoundedRectangle(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , radius as Lang.Numeric ) as Void 
 Draw a rounded rectangle. Parameters: x — ( Lang.Number ) — The x location of the upper corner 
 y — ( Lang.Number ) — The y location of the upper corner 
 width — ( Lang.Number ) — The width value of the rectangle 
 height — ( Lang.Number ) — The height value of the rectangle 
 radius — ( Lang.Number ) — The radius of the rounding. 
 
 Since: API Level 1.0.0 drawScaledBitmap(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , bitmap as Graphics.BitmapType ) as Void 
 Draw a scaled bitmap to a surface. Parameters: x — ( Lang.Number ) — The top left x coordinate to begin the draw 
 y — ( Lang.Number ) — The top left y coordinate to begin the draw 
 width — ( Lang.Number ) — The width of the bitmap drawn on the destination surface 
 height — ( Lang.Number ) — The height of the bitmap drawn on the destination surface 
 bitmap — ( Lang.Object ) — The BitmapResource or BufferedBitmap to render. The source color palette must be a subset of the destination color palette. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.0.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if the source color palette is not a subset of the destination palette 
 
 drawText(x as Lang.Numeric , y as Lang.Numeric , font as Graphics.FontType , text as Lang.Object or Null , justification as Graphics.TextJustification or Lang.Number ) as Void 
 Draw text at the given location. This method is not supported for anti-aliased fonts (including most built in fonts) for a BufferedBitmap that has a palette. Note: FontReference is only supported in CIQ 4.0.0 and later Parameters: x — ( Lang.Number ) — The x location of the text 
 y — ( Lang.Number ) — The y location of the text 
 font — ( Graphics.FontType ) — The font to use. This can be a custom font loaded from resources or a Graphics.FONT_* value. 
 text — ( Lang.Object ) — The Object to render. 
 justification — Mask of Graphics.TEXT_JUSTIFY_* constants. This may either be a single Graphics.TEXT_JUSTIFY_* constant, or a combination of one vertical and one horizontal justification value as a bit mask (e.g., Graphics.TEXT_JUSTIFY_CENTER | Graphics.TEXT_JUSTIFY_VCENTER). 
 
 Since: API Level 1.0.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if an anti-aliased font is used on a paletted bitmap 
 
 fillCircle(x as Lang.Numeric , y as Lang.Numeric , radius as Lang.Numeric ) as Void 
 Fill a circle with the foreground color. Parameters: x — ( Lang.Number ) — The x location of the circle center 
 y — ( Lang.Number ) — The y location of the circle center 
 radius — ( Lang.Number ) — The radius of the circle 
 
 Since: API Level 1.0.0 fillEllipse(x as Lang.Numeric , y as Lang.Numeric , a as Lang.Numeric , b as Lang.Numeric ) as Void 
 Fill an ellipse with the foreground color. Parameters: x — ( Lang.Number ) — The x location of the ellipse center 
 y — ( Lang.Number ) — The y location of the ellipse center 
 a — ( Lang.Number ) — The radius of the ellipse along the x axis 
 b — ( Lang.Number ) — The radius of the ellipse along the y axis 
 
 Since: API Level 1.0.0 fillPolygon(pts as Lang.Array &lt; Graphics.Point2D &gt;) as Void 
 Fill a polygon with the foreground color. Parameters: pts — ( Lang.Array ) — Array of coordinates with a 64 point limit 
 
 Since: API Level 1.0.0 fillRectangle(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void 
 Fill a rectangle with the foreground color. Parameters: x — ( Lang.Number ) — The x location of the upper corner 
 y — ( Lang.Number ) — The y location of the upper corner 
 width — ( Lang.Number ) — The width value of the rectangle 
 height — ( Lang.Number ) — The height value of the rectangle 
 
 Since: API Level 1.0.0 fillRoundedRectangle(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric , radius as Lang.Numeric ) as Void 
 Fill a rounded rectangle with the foreground color. Parameters: x — ( Lang.Number ) — The x location of the upper corner 
 y — ( Lang.Number ) — The y location of the upper corner 
 width — ( Lang.Number ) — The width value of the rectangle 
 height — ( Lang.Number ) — The height value of the rectangle 
 radius — ( Lang.Number ) — The radius of the rounding 
 
 Since: API Level 1.0.0 getFontHeight(font as Graphics.FontType ) as Lang.Number 
 Get the height of a font. Parameters: font — ( Graphics.FontType ) — The font to measure 
 
 Returns: Lang.Number — The height of the font in pixels 
 
 Since: API Level 1.0.0 getHeight() as Lang.Number 
 Get the height of the display region that is available to the app. Returns: Lang.Number — The height of display in pixels 
 
 Since: API Level 1.0.0 getTextDimensions(text as Lang.String , font as Graphics.FontType ) as [ Lang.Number , Lang.Number ] 
 Get the width and height of a String. This takes new lines into account when determining the height. The width is the maximum width for a given line of the String. If a String has two newline characters (\\n) in it, the height would be for three lines and the width would be the width of the longest String. Parameters: text — ( Lang.String ) — The text to get the width for 
 font — ( Graphics.FontType ) — The font of the text to measure. 
 
 Returns: Lang.Array — The [width, height] of the String in pixels 
 
 Since: API Level 1.0.0 getTextWidthInPixels(text as Lang.String , font as Graphics.FontType ) as Lang.Number 
 Get the width of a String. Parameters: text — ( Lang.String ) — The text to get width for 
 font — ( Graphics.FontType ) — The font of the text to measure. 
 
 Returns: Lang.Number — The width of String in pixels 
 
 Since: API Level 1.0.0 getWidth() as Lang.Number 
 Get the width of the display region that is available to the app. Returns: Lang.Number — The width of display in pixels 
 
 Since: API Level 1.0.0 setAntiAlias(enabled as Lang.Boolean ) as Void 
 Enable anti-aliased drawing for primitives This method is not supported for a BufferedBitmap that has a palette. Parameters: enabled — ( Lang.Boolean ) — true if AA is to be enabled, false otherwise. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 Throws: ( Graphics.InvalidPaletteException ) — Thrown if antialiasing is enabled for a paletted bitmap. 
 
 setBlendMode(mode as Graphics.BlendMode ) as Void 
 Set blend mode for drawing. Note: BLEND_MODE_NO_BLEND is only supported while drawing bitmaps Parameters: mode — ( Graphics.BlendMode ) — Graphics.BLEND_MODE_* constant. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.0.0 setClip(x as Lang.Numeric , y as Lang.Numeric , width as Lang.Numeric , height as Lang.Numeric ) as Void 
 Apply a clipping region to the Dc. Pixels outside of the region will not be affected by any operations. Parameters: x — ( Lang.Number ) — The x coordinate of the top left corner of the clipping region 
 y — ( Lang.Number ) — The y coordinate of the top left corner of the clipping region 
 width — ( Lang.Number ) — The width of the clipping region in pixels. 
 height — ( Lang.Number ) — The height of the clipping region in pixels. 
 
 Since: API Level 2.3.0 setColor(foreground as Graphics.ColorType , background as Graphics.ColorType ) as Void 
 Set the current foreground and background colors. Parameters: foreground — ( Graphics.ColorType ) — Graphics.COLOR_* constant or 24-bit integer of the form 0xRRGGBB. 
 background — ( Graphics.ColorType ) — Graphics.COLOR_* constant or 24-bit integer of the form 0xRRGGBB. 
 
 Since: API Level 1.0.0 setFill(fill as Lang.Number or Graphics.BitmapTexture ) as Void 
 Set fill tool for drawing primitives. Note: this function takes precedence over setColor(). If fill tool is not set, the foreground color will be used. Parameters: fill — ( Lang.Object ) — The BitmapTexture or Color 32-bit integer in the format 0xAARRGGBB to use for fill draws. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.0.0 setPenWidth(width as Lang.Numeric ) as Void 
 Set the width of a line. Parameters: width — ( Lang.Number ) — The pen width in pixels 
 
 Since: API Level 1.0.0 setStroke(stroke as Lang.Number or Graphics.BitmapTexture ) as Void 
 Set draw tool for drawing primitives. Note: this function takes precedence over setColor(). If draw tool is not set, the foreground color will be used. Parameters: stroke — ( Lang.Object ) — The BitmapTexture or Color 32-bit integer in the format 0xAARRGGBB to use for draws. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 
 Since: API Level 4.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [FontReference (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/FontReference.html)nClass: Toybox.Graphics.FontReference
 Inherits: Toybox.Graphics.ResourceReference Toybox.Lang.Object 
 Toybox.Graphics.ResourceReference 
 Toybox.Graphics.FontReference 
 
 show all Overview
 Object that references the font resource allocated from the system memory pool rather than form the app's local memory. Since: API Level 4.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidBitmapResourceException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/InvalidBitmapResourceException.html)nClass: Toybox.Graphics.InvalidBitmapResourceException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Graphics.InvalidBitmapResourceException 
 
 show all Overview
 This Exception indicates an invalid bitmap resource was provided. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidPaletteException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/InvalidPaletteException.html)nClass: Toybox.Graphics.InvalidPaletteException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Graphics.InvalidPaletteException 
 
 show all Overview
 This Exception indicates an incompatible palette was used. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [OutOfGraphicsMemoryException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/OutOfGraphicsMemoryException.html)nClass: Toybox.Graphics.OutOfGraphicsMemoryException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Graphics.OutOfGraphicsMemoryException 
 
 show all Overview
 This Exception indicates the graphics memory pool does not contain enough free memory for the resource. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 5.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 5.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [ResourceReference (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/ResourceReference.html)nClass: Toybox.Graphics.ResourceReference
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.ResourceReference 
 
 show all Overview
 Object represents a reference for the resource allocated from the graphics memory pool rather than from the app's local memory. The underlying resource object could be temporarily purged from the system memory pool when all strong references are destroyed. The memory allocation is performed only when ResourceReference::get() method is invoked. Since: API Level 4.0.0 Direct Known Subclasses
 Graphics.BitmapReference , Graphics.BufferedBitmapReference , Graphics.FontReference Typedef Summary collapse 
 Options as { :resource as WatchUi.FontResource or WatchUi.BitmapResource or Graphics.BufferedBitmap , :rezId as Lang.ResourceId , :bufferedBitmap as { :bitmapResource as Lang.ResourceId , :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number } } 
 
 Instance Method Summary collapse 
 get () as WatchUi.BitmapResource or Graphics.BufferedBitmap or WatchUi.FontResource or Null Get the underlying resource object referenced by the ResourceReference, this trigger either the allocate from the system memory pool or return the existing resource in the pool. 
 
 Typedef Details
 Options as { :resource as WatchUi.FontResource or WatchUi.BitmapResource or Graphics.BufferedBitmap , :rezId as Lang.ResourceId , :bufferedBitmap as { :bitmapResource as Lang.ResourceId , :width as Lang.Number , :height as Lang.Number , :palette as Lang.Array &lt; Graphics.ColorType &gt;, :colorDepth as Lang.Number } } 
 Since: API Level 4.0.0 Instance Method Details
 get() as WatchUi.BitmapResource or Graphics.BufferedBitmap or WatchUi.FontResource or Null 
 Get the underlying resource object referenced by the ResourceReference, this trigger either the allocate from the system memory pool or return the existing resource in the pool. Returns: Lang.Object — The resource object referenced, or null if failed. 
 
 Since: API Level 4.0.0 Throws: ( Graphics.OutOfGraphicsMemoryException ) — Thrown if resource cannot be loaded or restored because there isn't enough free pool to load the resource 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [VectorFont (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Graphics/VectorFont.html)nClass: Toybox.Graphics.VectorFont
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Graphics.VectorFont 
 
 show all Overview
 A representation of a vector font. VectorFont objects are returned by the getVectorFont() method. Since: API Level 4.2.1 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 3
 Venu® 3S
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Lang (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang.html)nModule: Toybox.Lang
 Overview
 The Lang module contains Monkey C language basic types, and provides a method for formatting Strings. Since: API Level 1.0.0 Classes Under Namespace
 Classes: Array , Boolean , ByteArray , Char , Dictionary , Double , Exception , Float , InvalidOptionsException , InvalidValueException , Long , Method , Number , Object , OperationNotAllowedException , ResourceId , SerializationException , StorageFullException , String , Symbol , SymbolNotAllowedException , UnexpectedTypeException , ValueOutOfBoundsException , WeakReference Constant Summary
 NumberFormat
 Since: API Level 1.0.0 Name Value Since Description See Also 
 NUMBER_FORMAT_FLOAT 0 API Level 3.1.0 IEEE 754 Single Precision Float Value (32-bits) 
 NUMBER_FORMAT_SINT16 1 API Level 3.1.0 Signed 16-bit Integer Value 
 NUMBER_FORMAT_SINT32 2 API Level 3.1.0 Signed 32-bit Integer Value 
 NUMBER_FORMAT_SINT8 3 API Level 3.1.0 Signed 8-bit Integer Value 
 NUMBER_FORMAT_UINT16 4 API Level 3.1.0 Unsigned 16-bit Integer Value 
 NUMBER_FORMAT_UINT32 5 API Level 3.1.0 Unsigned 32-bit Integer Value 
 NUMBER_FORMAT_UINT8 6 API Level 3.1.0 Unsigned 8-bit Integer Value 
 Endian
 Since: API Level 1.0.0 Name Value Since Description See Also 
 ENDIAN_LITTLE 0 API Level 3.1.0 
 ENDIAN_BIG 1 API Level 3.1.0 
 Typedef Summary collapse 
 Comparable as interface { function compareTo(other as Lang.Object ) as Lang.Number ; } Comparable defines an ordering between an object and others. 
 Comparator as interface { function compare(a as Lang.Object , b as Lang.Object ) as Lang.Number ; } Comparator defines an ordering between objects. 
 Decimal as Lang.Float or Lang.Double 
 Integer as Lang.Number or Lang.Long 
 Numeric as Lang.Number or Lang.Float or Lang.Long or Lang.Double 
 
 Instance Method Summary collapse 
 format (format as Lang.String , parameters as Lang.Array ) as Lang.String Create a formatted String by substituting the given parameters into the given format at the corresponding locations. 
 
 Typedef Details
 Comparable as interface { function compareTo(other as Lang.Object ) as Lang.Number ; } 
 Comparable defines an ordering between an object and others. Comparator can be use to specify an ordering between an object and others. Since: API Level 5.0.0 Comparator as interface { function compare(a as Lang.Object , b as Lang.Object ) as Lang.Number ; } 
 Comparator defines an ordering between objects. Comparator can be use to specify an ordering between objects. Since: API Level 5.0.0 Decimal as Lang.Float or Lang.Double 
 Since: API Level 1.0.0 Integer as Lang.Number or Lang.Long 
 Since: API Level 1.0.0 Numeric as Lang.Number or Lang.Float or Lang.Long or Lang.Double 
 Since: API Level 1.0.0 Instance Method Details
 format(format as Lang.String , parameters as Lang.Array ) as Lang.String 
 Create a formatted String by substituting the given parameters into the given format at the corresponding locations. Parameters: format — ( Lang.String ) — A string using $1$, $2$, $3$... as substitution identifiers 
 parameters — ( Lang.Array ) — The Array of content to substitute into the formatted String 
 
 Example: // Set the 'myString' variable to "Your next meeting is at 2:30 on Sep 4 in room 6820." using Toybox.Lang var myFormat = "Your next meeting is at $1$:$2$ on $3$ $4$ in room $5$."; var myParams = [2, 30, "Sep", 4, "6820"]; var myString = Lang.format(myFormat, myParams); Returns: Lang.String — A new String with the substituted content 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Array (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Array.html)nClass: Toybox.Lang.Array
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Array 
 
 show all Overview
 Array objects are fixed size, numerically indexed, single dimensional, and take any Objects (including Arrays) as members. Array keys must be Numbers, but Array values may be any type of Object. Since: API Level 1.0.0 Instance Method Summary collapse 
 add (object as Lang.Object or Null ) as Lang.Array &lt; Lang.Object or Null &gt; Add an Object to the end of an Array. 
 addAll (array as Lang.Array &lt; Lang.Object or Null &gt;) as Lang.Array &lt; Lang.Object or Null &gt; Add an Array of Objects to the end of an Array. 
 indexOf (object as Lang.Object or Null ) as Lang.Number Get the index of an Object within the Array. 
 remove (object as Lang.Object or Null ) as Lang.Boolean Remove an Object from an Array. 
 removeAll (object as Lang.Object or Null ) as Lang.Boolean Remove Objects from an Array. 
 reverse () as Lang.Array &lt; Lang.Object or Null &gt; Return a new Array that contains the elements of a source Array in reverse order. 
 size () as Lang.Number Get the size of an Array. 
 slice (startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.Array &lt; Lang.Object or Null &gt; Get a new Array containing a portion of an existing Array. 
 sort (comparator as Lang.Comparator or Null ) as Void Sort an Array. 
 toString () as Lang.String Convert an Array to a String. 
 
 Instance Method Details
 add(object as Lang.Object or Null ) as Lang.Array &lt; Lang.Object or Null &gt; 
 Add an Object to the end of an Array. When adding an Object, the Array size is increased by one and the new Object is inserted at the new index. Parameters: object — ( Lang.Object ) — The Object to be added to the Array 
 
 Returns: Lang.Array — self 
 
 Since: API Level 1.3.0 addAll(array as Lang.Array &lt; Lang.Object or Null &gt;) as Lang.Array &lt; Lang.Object or Null &gt; 
 Add an Array of Objects to the end of an Array. When adding an Array of Objects, the Array is expanded by the size of the provided Array, and all of the new elements are inserted starting at the new index. Parameters: array — ( Lang.Array ) — The Array of Objects to be added to the Array 
 
 Returns: Lang.Array — self 
 
 Since: API Level 1.3.0 indexOf(object as Lang.Object or Null ) as Lang.Number 
 Get the index of an Object within the Array. Parameters: object — ( Lang.Object ) — The Object whose index is to be found 
 
 Returns: Lang.Number — The index of the first instance of the provided Object in the Array. If the Object is not found, -1 is returned. 
 
 Since: API Level 1.3.0 remove(object as Lang.Object or Null ) as Lang.Boolean 
 Remove an Object from an Array. If the passed Object is found, the Array size is decreased by one and elements beyond it are shifted to the next lower index. If the Array has multiple matches, the matching Object at the lowest index will be removed but the other matching Objects will not be removed. Parameters: object — ( Lang.Object ) — The object to be removed from the Array 
 
 Returns: Lang.Boolean — true if instances of the object are found, otherwise false 
 
 Since: API Level 1.3.0 removeAll(object as Lang.Object or Null ) as Lang.Boolean 
 Remove Objects from an Array. For each instance of the Object that is found, the Array size is decreased by one and elements beyond it are shifted to the next lower index. Parameters: object — ( Lang.Object ) — The Object to be removed from the Array 
 
 Returns: Lang.Boolean — true if instances of the Object are found, otherwise false 
 
 Since: API Level 1.3.0 reverse() as Lang.Array &lt; Lang.Object or Null &gt; 
 Return a new Array that contains the elements of a source Array in reverse order. Returns: Lang.Array — A new Array with elements in reversed order 
 
 Since: API Level 1.3.0 size() as Lang.Number 
 Get the size of an Array. Returns: Lang.Number — The number of elements in the Array 
 
 Since: API Level 1.0.0 slice(startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.Array &lt; Lang.Object or Null &gt; 
 Get a new Array containing a portion of an existing Array. Parameters: startIndex — ( Lang.Number , null) — A zero-based index of the start of the new Array. If a negative startIndex is provided, it will offset from the end of the Array. If the startIndex is null , the slice will begin at 0. An out-of-bounds index will be truncated to the array limits. 
 endIndex — ( Lang.Number , null) — A zero-based index of the end of the new Array. Items are included up to, but not including endIndex . If a negative endIndex is provided, it will offset from the end of the Array. If endIndex is null , the the slice will end at the last element. An out-of-bounds index will be truncated to the Array limits. 
 
 Example: var myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; // Get the first five elements of the Array var newArray1 = myArray.slice(0, 5); // [1, 2, 3, 4, 5] // Get the last element of the Array var newArray2 = myArray.slice(-1, null); // [10] // Slice off the first and last elements from the Array var myArray3 = myArray.slice(1, -1); // [2, 3, 4, 5, 6, 7, 8, 9] Returns: Lang.Array — A new Array containing the elements from startIndex to endIndex 
 
 Since: API Level 1.3.0 sort(comparator as Lang.Comparator or Null ) as Void 
 Sort an Array Parameters: comparator — ( Lang.Comparator , null) — An object that can be used to specify the order of Objects relative to others. If comparator is null , a default comparator will be used. The default comparator will sort values in ascending order, and is able to compare Numeric, Boolean, and Char values, or String values. 
 
 Example: var myArray = [2, 1, 3.0f, 0.0d]; myArray.sort(null); // [0.0d, 1, 2, 3.0f] var myStrings = ["bb", "a", "aa", "b"]; myStrings.sort(null); // ["a", "aa", "b", "bb"] var myProblem = ["1", 1]; myProblem.sort(null); // UnexpectedTypeException Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the default comparator is used to compare values that are not directly comparable. 
 
 toString() as Lang.String 
 Convert an Array to a String. This does not convert the elements of the Array into Strings, but transforms the entire Array into a String. Example: using Toybox.System; var myArray = [1, 2, 3, 4, 5]; System.println(myArray[1]); // prints 1 var myString = myArray.toString(); System.println(myString); // "[1, 2, 3, 4, 5]" System.println(myString[1]); // UnexpectedTypeException System.println(myString.substring(0, 5)); // "[1, 2" Returns: Lang.String — A String representation of the Array 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Boolean (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Boolean.html)nClass: Toybox.Lang.Boolean
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Boolean 
 
 show all Overview
 Boolean objects represent a true or false value. You can use the true or false keyword to create a Boolean. Example: var myBoolean = true; Since: API Level 1.0.0 Instance Method Summary collapse 
 compareTo (other as Lang.Object ) as Lang.Number Compare the numeric value of self to some other numeric value. 
 
 Instance Method Details
 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the numeric value of self to some other numeric value. false is considered numerically zero and true is considered numerically 1. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [ByteArray (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/ByteArray.html)nClass: Toybox.Lang.ByteArray
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.ByteArray 
 
 show all Overview
 ByteArray objects are fixed size, numerically indexed, single dimensional, and take Numbers with a value &gt;= -128 and &lt;= 255 as members. Since: API Level 3.0.0 Instance Method Summary collapse 
 add (byte as Lang.Number or Lang.Char ) as Lang.ByteArray Add a byte to the end of a ByteArray. 
 addAll (array as Lang.Array or Lang.ByteArray ) as Lang.ByteArray Add a ByteArray or an Array of bytes to the end of a ByteArray. 
 decodeNumber (format as Lang.NumberFormat , options as { :offset as Lang.Number , :endianness as Lang.Endian }) as Lang.Numeric Decodes a portion of the array to a number based on a specified format. 
 encodeNumber (value as Lang.Numeric , format as Lang.NumberFormat , options as { :offset as Lang.Number , :endianness as Lang.Endian }) as Lang.ByteArray Encodes a number into the byte array. 
 equals (other as Lang.Object or Null ) as Lang.Boolean Test if an Object instance is equal to another instance of an Object. 
 hashCode () as Lang.Number Get a hash code value for a ByteArray. 
 indexOf (byte as Lang.Number or Lang.Char ) as Lang.Number Get the index of a byte within the ByteArray. 
 remove (byte as Lang.Number or Lang.Char ) as Lang.Boolean Remove a byte from a ByteArray. 
 removeAll (byte as Lang.Number or Lang.Char ) as Lang.Boolean Remove bytes from a ByteArray. 
 reverse () as Lang.ByteArray Return a new ByteArray that contains the elements of a source ByteArray in reverse order. 
 size () as Lang.Number Get the size of a ByteArray. 
 slice (startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.ByteArray Get a new ByteArray containing a portion of an existing ByteArray. 
 toString () as Lang.String Convert a ByteArray to a String. 
 
 Instance Method Details
 add(byte as Lang.Number or Lang.Char ) as Lang.ByteArray 
 Add a byte to the end of a ByteArray. When adding a byte, the ByteArray size is increased and new bytes are inserted at the end. Parameters: byte — ( Lang.Number , Lang.Char ) — The Number or Char byte to be added 
 
 Returns: Lang.ByteArray — A ByteArray composed of the original ByteArray plus the added byte 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than Number or Char is provided 
 ( Lang.ValueOutOfBoundsException ) — Thrown if a Number greater than 255 or less than -128 is provided, or if a Char with a code point greater than 127 is provided. Negative numbers added are interpreted as the positive 8-bit unsigned equivalent once added to the ByteArray. 
 
 addAll(array as Lang.Array or Lang.ByteArray ) as Lang.ByteArray 
 Add a ByteArray or an Array of bytes to the end of a ByteArray. When adding an array of bytes, the ByteArray is expanded by the size of the provided ByteArray or Array, and all of the new elements are inserted starting at the new index. Parameters: array — ( Lang.ByteArray , Lang.Array ) — The ByteArray or Array of bytes to be added to the ByteArray 
 
 Returns: Lang.ByteArray — A ByteArray composed of the original ByteArray plus the added byte(s) 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than ByteArray or an Array of bytes is provided 
 
 decodeNumber(format as Lang.NumberFormat , options as { :offset as Lang.Number , :endianness as Lang.Endian }) as Lang.Numeric 
 Decodes a portion of the array to a number based on a specified format Parameters: format — ( Lang.NumberFormat ) — A Lang.NUMBER_FORMAT_* value representing the number format to decode. 
 options — ( Lang.Dictionary ) — A Dictionary containing conversion options :offset — ( Lang.Number ) — The 0 based offset in the array to begin decode. Default value is 0. 
 :endianness — ( Lang.Endian ) — A Lang.ENDIAN_* value representing the endianness of the number to decode. Default value is Lang.ENDIAN_LITTLE . 
 
 
 
 Returns: Lang.Number , Lang.Long , Lang.Float — Converted Number. 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidOptionsException ) — Indicates that one of the options provided is not valid. 
 
 encodeNumber(value as Lang.Numeric , format as Lang.NumberFormat , options as { :offset as Lang.Number , :endianness as Lang.Endian }) as Lang.ByteArray 
 Encodes a number into the byte array Parameters: value — ( Lang.Object ) — The value to encode 
 format — ( Lang.NumberFormat ) — A Lang.NUMBER_FORMAT_* value representing the number format to encode. 
 options — ( Lang.Dictionary ) — A Dictionary containing conversion options :offset — ( Lang.Number ) — The 0 based offset in the array to begin encoding. Default value is 0. 
 :endianness — ( Lang.Endian ) — A Lang.ENDIAN_* value representing the endianness of the number to encode. Default value is Lang.ENDIAN_LITTLE . 
 
 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidOptionsException ) — Indicates that one of the options provided is not valid. 
 
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Test if an Object instance is equal to another instance of an Object. Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Example: var a = [ 1, 2 ]b; var b = [ 1, 2 ]b; var c = [ 1, 2 ]; a.equals(b); // returns true a.equals(c); // returns false Returns: Lang.Boolean — true if Objects are equal, otherwise false 
 
 Since: API Level 3.0.0 hashCode() as Lang.Number 
 Get a hash code value for a ByteArray. Returns: Lang.Number — The hash code for the ByteArray 
 
 Since: API Level 3.0.0 indexOf(byte as Lang.Number or Lang.Char ) as Lang.Number 
 Get the index of a byte within the ByteArray. Parameters: byte — ( Lang.Number , Lang.Char ) — The byte whose index is to be found 
 
 Returns: Lang.Number — The index of the first instance of the provided byte in the ByteArray. If the byte is not found, -1 is returned. 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than Number or Char is provided 
 ( Lang.ValueOutOfBoundsException ) — Thrown if a Number greater than 255 or less than -128 is provided, or if a Char with a code point greater than 127 is provided. Negative numbers provided are interpreted as the positive 8-bit unsigned equivalent when searching the ByteArray. 
 
 remove(byte as Lang.Number or Lang.Char ) as Lang.Boolean 
 Remove a byte from a ByteArray. If the passed byte is found, the ByteArray size is decreased by one and elements beyond it are shifted to the next lower index. If the ByteArray has multiple matches, the matching byte at the lowest index will be removed but the other matching bytes will not be removed. If no byte is provided as an argument, the ByteArray will remain unchanged and remove() will return false . Parameters: byte — ( Lang.Number , Lang.Char ) — The byte to remove from the ByteArray 
 
 Returns: Lang.Boolean — Returns true if instances of the byte are found, otherwise false 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than Number or Char is provided 
 ( Lang.ValueOutOfBoundsException ) — Thrown if a Number greater than 255 or less than -128 is provided, or if a Char with a code point greater than 127 is provided. Negative numbers provided are interpreted as the positive 8-bit unsigned equivalent when searching the ByteArray. 
 
 removeAll(byte as Lang.Number or Lang.Char ) as Lang.Boolean 
 Remove bytes from a ByteArray. For each instance of the byte that is found, the ByteArray size is decreased by one and elements beyond it are shifted to the next lower index. If no byte is given as an argument, the ByteArray will remain unchanged and removeAll() will return false . Parameters: byte — ( Lang.Number , Lang.Char ) — The byte to remove from the ByteArray 
 
 Returns: Lang.Boolean — Returns true if instances of the byte are found, otherwise false . 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if a type other than Number or Char is provided 
 ( Lang.ValueOutOfBoundsException ) — Thrown if a Number greater than 255 or less than -128 is provided, or if a Char with a code point greater than 127 is provided. Negative numbers provided are interpreted as the positive 8-bit unsigned equivalent when searching the ByteArray. 
 
 reverse() as Lang.ByteArray 
 Return a new ByteArray that contains the elements of a source ByteArray in reverse order. Returns: Lang.ByteArray — A new ByteArray with elements in reversed order 
 
 Since: API Level 3.0.0 size() as Lang.Number 
 Get the size of a ByteArray. Returns: Lang.Number — The number of elements in the ByteArray. 
 
 Since: API Level 3.0.0 slice(startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.ByteArray 
 Get a new ByteArray containing a portion of an existing ByteArray. Parameters: startIndex — ( Lang.Number , null) — A zero-based index of the start of the new ByteArray. If a negative startIndex is provided, it will offset from the end of the ByteArray. If the startIndex is null , the slice will begin at 0. An out-of-bounds index will be truncated to the ByteArray limits. 
 endIndex — ( Lang.Number , null) — A zero-based index of the end of the new ByteArray. Items are included up to, but not including endIndex . If a negative endIndex is provided, it will offset from the end of the ByteArray. If endIndex is null , the slice will end at the last element. An out-of-bounds index is truncated to the ByteArray limits. 
 
 Returns: Lang.ByteArray — A new ByteArray containing the elements from startIndex to endIndex 
 
 Since: API Level 3.0.0 toString() as Lang.String 
 Convert a ByteArray to a String. This does not convert the elements of the ByteArray into Strings, but transforms the entire ByteArray into a String. Returns: Lang.String — A String representation of the ByteArray 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Char (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Char.html)nClass: Toybox.Lang.Char
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Char 
 
 show all Overview
 Chars are Unicode characters. Since: API Level 1.3.0 Instance Method Summary collapse 
 compareTo (other as Lang.Object ) as Lang.Number Compare the unicode code point self to some other numeric value. 
 toLower () as Lang.Char Convert a Char to lowercase. 
 toNumber () as Lang.Number Convert a Char to a Number. 
 toString () as Lang.String Convert a Char to a String. 
 toUpper () as Lang.Char Convert a Char to uppercase. 
 
 Instance Method Details
 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the unicode code point self to some other numeric value. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 toLower() as Lang.Char 
 Convert a Char to lowercase. Returns: Lang.Char — A new lowercase Char 
 
 Since: API Level 1.3.0 toNumber() as Lang.Number 
 Convert a Char to a Number. Returns: Lang.Number — The UTF-32 representation of the Char interpreted as a Number 
 
 Since: API Level 1.3.0 toString() as Lang.String 
 Convert a Char to a String. Returns: Lang.String — The String representation of the Char 
 
 Since: API Level 1.3.0 toUpper() as Lang.Char 
 Convert a Char to uppercase. Returns: Lang.Char — A new uppercase Char 
 
 Since: API Level 1.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [Dictionary (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Dictionary.html)nClass: Toybox.Lang.Dictionary
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Dictionary 
 
 show all Overview
 A Dictionary is a hash table or associative array used to map keys to values. Both the keys and values can be any Object type, though they do not all need to be of the same type. Objects used as a keys should override the hashCode() method. Due to the nature of hash tables, the order of Dictionary elements are not guaranteed to match the insertion order. See Also:
 Hash Table 
 
 Example: using Toybox.System; var myDict = { "One" =&gt; 1, "Two" =&gt; 2, "Three" =&gt; 3 }; System.println(myDict); // {Two=&gt;2, One=&gt;1,Three=&gt;3} var keys = myDict.keys(); // [Two, One, Three] var values = myDict.values(); // [2, 1, 3] myDict.put("Four", 4); System.println(myDict); // {Two=&gt;2, One=&gt;1, Three=&gt;3, Four=&gt;4} numItems = myDict.size(); // 4 myDict = {} // Empty the dictionary System.println(myDict.isEmpty()); // true Since: API Level 1.0.0 Instance Method Summary collapse 
 get (key as Lang.Object ) as Lang.Object or Null Retrieve a value from a Dictionary for a given key. 
 hasKey (key as Lang.Object ) as Lang.Boolean Determine whether a key exists within a Dictionary. 
 isEmpty () as Lang.Boolean Determine whether a Dictionary is empty. 
 keys () as Lang.Array &lt; Lang.Object &gt; Retrieve the keys in the Dictionary. 
 put (key as Lang.Object , value as Lang.Object or Null ) as Void Place a value in the Dictionary with a given key. 
 remove (key as Lang.Object ) as Void Delete an item from a Dictionary. 
 size () as Lang.Number Retrieve the number of elements in a Dictionary. 
 toString () as Lang.String Convert a Dictionary to a String. 
 values () as Lang.Array &lt; Lang.Object or Null &gt; Retrieve the values in the Dictionary. 
 
 Instance Method Details
 get(key as Lang.Object ) as Lang.Object or Null 
 Retrieve a value from a Dictionary for a given key. Parameters: key — ( Lang.Object ) — The key to check against 
 
 Returns: Lang.Object — The value for the specified key, or null if the key does not exist 
 
 Since: API Level 1.0.0 hasKey(key as Lang.Object ) as Lang.Boolean 
 Determine whether a key exists within a Dictionary. Parameters: key — ( Lang.Object ) — The key to check against 
 
 Returns: Lang.Boolean — true if the key is in the Dictionary, otherwise false 
 
 Since: API Level 1.0.0 isEmpty() as Lang.Boolean 
 Determine whether a Dictionary is empty. Returns: Lang.Boolean — true if the Dictionary is empty, otherwise false 
 
 Since: API Level 1.0.0 keys() as Lang.Array &lt; Lang.Object &gt; 
 Retrieve the keys in the Dictionary. Returns: Lang.Array — An Array of keys in the Dictionary 
 
 Since: API Level 1.0.0 put(key as Lang.Object , value as Lang.Object or Null ) as Void 
 Place a value in the Dictionary with a given key. Parameters: key — ( Lang.Object ) — The key for the value being inserted into the Dictionary 
 value — ( Lang.Object ) — The value to insert into the Dictionary 
 
 Since: API Level 1.0.0 remove(key as Lang.Object ) as Void 
 Delete an item from a Dictionary. Parameters: key — ( Lang.Object ) — The key of the value to be removed 
 
 Since: API Level 1.0.0 size() as Lang.Number 
 Retrieve the number of elements in a Dictionary. Returns: Lang.Number — The number of elements in the Dictionary 
 
 Since: API Level 1.0.0 toString() as Lang.String 
 Convert a Dictionary to a String. Due to the nature of hash tables, the order of Dictionary elements are not guaranteed to match the insertion order when converting to a String. Example: using Toybox.System; myDict = { "One" =&gt; 1, "Two" =&gt; 2, "Three" =&gt; 3 }; System.println(myDict.get("One")); // prints 1 var myString = myDict.toString(); System.println(myString); // "{Two=&gt;2, One=&gt;1, Three=&gt;}" System.println(myString.get("One")); // Symbol Not Found Error System.println(myString.substring(0, 5)); // "{Two=" Returns: Lang.String — A String representation of the Dictionary 
 
 See Also: Hash Tables 
 
 Since: API Level 1.0.1 values() as Lang.Array &lt; Lang.Object or Null &gt; 
 Retrieve the values in the Dictionary. Returns: Lang.Array — An Array of values in the Dictionary 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Double (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Double.html)nClass: Toybox.Lang.Double
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Double 
 
 show all Overview
 Double represents a 64-bit floating point number. To use a double in Monkey C add 'd' to the end of the number. Example: var e = 2.718281828459045d; Since: API Level 1.0.0 Instance Method Summary collapse 
 abs () as Lang.Double Get the absolute value of a Double. 
 compareTo (other as Lang.Object ) as Lang.Number Compare the numeric value of self to some other numeric value. 
 equals (other as Lang.Object or Null ) as Lang.Boolean Test if an Object instance is equal to another instance of an Object. 
 format (format as Lang.String ) as Lang.String Format a Double using a formatting String. 
 toDouble () as Lang.Double Convert a Double to a Double. 
 toFloat () as Lang.Float Convert a Double to a Float. 
 toLong () as Lang.Long Convert a Double to a Long. 
 toNumber () as Lang.Number Convert a Double to a Number. 
 toString () as Lang.String Convert a Double to a String. 
 
 Instance Method Details
 abs() as Lang.Double 
 Get the absolute value of a Double. Returns: Lang.Double — The absolute value of the Double 
 
 Since: API Level 1.0.0 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the numeric value of self to some other numeric value. NaN is considered greater than all numbers and equal to itself. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Test if an Object instance is equal to another instance of an Object. Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if the Objects are equal, otherwise false 
 
 Since: API Level 1.3.0 format(format as Lang.String ) as Lang.String 
 Format a Double using a formatting String. The formatting string is similar to that available in printf from the C stdio library, though the length option is not available: "%[flags][width][.precision]specifier" specifiers d or i - signed decimal integer 
 e - scientific notation (mantissa/exponent) using 'e' character 
 E - scientific notation (mantissa/exponent) using 'E' character 
 f - decimal floating point 
 o - signed octal 
 u - unsigned decimal integer 
 x - unsigned hexadecimal integer 
 X - unsigned hexadecimal integer (capital letters) 
 
 flags + - Prepends the result with a plus or minus sign ('+' or '-'), including positive numbers. By default, only negative numbers are preceded with a '-' sign. 
 0 - Left-pads the number with zeros (0) instead of spaces, where padding is specified (see width sub-specifier). 
 
 width supports only numbers (* is not supported) .precision supports only numbers (* is not supported) Returns: Lang.String — A formatted String 
 
 Since: API Level 1.0.0 toDouble() as Lang.Double 
 Convert a Double to a Double. Returns: Lang.Double — A Double representation of the Double 
 
 Since: API Level 1.0.0 toFloat() as Lang.Float 
 Convert a Double to a Float. Returns: Lang.Float — A Float representation of the Double 
 
 Since: API Level 1.0.0 toLong() as Lang.Long 
 Convert a Double to a Long. Returns: Lang.Long — A Long representation of the Double 
 
 Since: API Level 1.0.0 toNumber() as Lang.Number 
 Convert a Double to a Number. The Double value will be rounded toward 0 upon conversion. For example, 6.8 becomes 6 and -5.7 becomes -5. Returns: Lang.Number — A Number representation of the Double 
 
 Since: API Level 1.0.0 toString() as Lang.String 
 Convert a Double to a String. Returns: Lang.String — The String representation of the Double 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Exception (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Exception.html)nClass: Toybox.Lang.Exception
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Exception 
 
 show all Overview
 Exception is a class that represents a thrown Exception. Custom exceptions can be created by extending this class. Example: Creating and throwing a new Exception class using Toybox.Lang; var myVar; class myException extends Lang.Exception { function initialize() { Exception.initialize(); } } if (myVar == false) { throw new myException(); } Example: Handling an Exception in a try-catch block using Toybox.Lang; using Toybox.System; try { // Do something here } catch (e instanceof Lang.Exception) { System.println(e.getErrorMessage()); } Since: API Level 1.0.0 Direct Known Subclasses
 Ant.EncryptionInvalidSettingsException , Ant.UnableToAcquireChannelException , Ant.UnableToAcquireEncryptedChannelException , AntPlus.AntPlusNotAllowedException , Application.ObjectStoreAccessException , Properties.InvalidKeyException , Attention.BacklightOnTooLongException , Background.ExitDataSizeLimitException , Background.InvalidBackgroundTimeException , Background.MessageSizeLimitException , BluetoothLowEnergy.DevicePairException , BluetoothLowEnergy.InvalidRequestException , BluetoothLowEnergy.ProfileRegistrationException , BluetoothLowEnergy.UuidFormatException , Complications.ComplicationNotFoundException , Cryptography.InvalidBlockSizeException , Graphics.InvalidBitmapResourceException , Graphics.InvalidPaletteException , Graphics.OutOfGraphicsMemoryException , Lang.InvalidOptionsException , Lang.InvalidValueException , Lang.OperationNotAllowedException , Lang.SerializationException , Lang.StorageFullException , Lang.SymbolNotAllowedException , Lang.UnexpectedTypeException , Lang.ValueOutOfBoundsException , Sensor.TooManySensorDataListenersException , StringUtil.InvalidHexStringException , System.AppNotInstalledException , System.PreviousOperationNotCompleteException , System.UnexpectedAppTypeException , Test.AssertException , Time.RealTimeClockNotValidException , WatchUi.InvalidMenuItemTypeException , WatchUi.InvalidPointException , WatchUi.InvalidSelectableStateException Instance Method Summary collapse 
 getErrorMessage () as Lang.String or Null Get the error message for the Exception. 
 initialize () Exception constructor. 
 printStackTrace () as Void Print the stack trace of the thrown Exception. 
 
 Instance Method Details
 getErrorMessage() as Lang.String or Null 
 Get the error message for the Exception. Returns: Lang.String — The Exception's error message, or null if no message is given 
 
 Since: API Level 1.2.0 initialize() 
 Exception constructor. Since: API Level 1.1.2 printStackTrace() as Void 
 Print the stack trace of the thrown Exception. Since: API Level 1.1.2 Generated Dec 11, 2024, 8:58:43 AM


# [Float (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Float.html)nClass: Toybox.Lang.Float
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Float 
 
 show all Overview
 Floats are 32-bit floating point values. By default, decimal values in Monkey C are Floats. Since: API Level 1.0.0 Instance Method Summary collapse 
 abs () as Lang.Float Get the absolute value of a Float. 
 compareTo (other as Lang.Object ) as Lang.Number Compare the numeric value of self to some other numeric value. 
 format (format as Lang.String ) as Lang.String Format a Float using a formatting String. 
 toDouble () as Lang.Double Convert a Float to a Double. 
 toFloat () as Lang.Float Convert a Float to a Float. 
 toLong () as Lang.Long Convert a Float to a Long. 
 toNumber () as Lang.Number Convert a Float to a Number. 
 
 Instance Method Details
 abs() as Lang.Float 
 Get the absolute value of a Float. Returns: Lang.Float — The absolute value of the Float 
 
 Since: API Level 1.0.0 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the numeric value of self to some other numeric value. NaN is considered greater than all numbers and equal to itself. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 format(format as Lang.String ) as Lang.String 
 Format a Float using a formatting String. The formatting string is similar to that available in printf from the C stdio library, though the length option is not available: "%[flags][width][.precision]specifier" specifiers d or i - signed decimal integer 
 e - scientific notation (mantissa/exponent) using 'e' character 
 E - scientific notation (mantissa/exponent) using 'E' character 
 f - decimal floating point 
 o - signed octal 
 u - unsigned decimal integer 
 x - unsigned hexadecimal integer 
 X - unsigned hexadecimal integer (capital letters) 
 
 flags + - Prepends the result with a plus or minus sign ('+' or '-'), including positive numbers. By default, only negative numbers are preceded with a '-' sign. 
 0 - Left-pads the number with zeros (0) instead of spaces, where padding is specified (see width sub-specifier). 
 
 width supports only numbers (* is not supported) .precision supports only numbers (* is not supported) Returns: Lang.String — A formatted String 
 
 Since: API Level 1.0.0 toDouble() as Lang.Double 
 Convert a Float to a Double. Returns: Lang.Double — A Double representation of the Float 
 
 Since: API Level 1.0.0 toFloat() as Lang.Float 
 Convert a Float to a Float. Returns: Lang.Float — A Float representation of the Float 
 
 Since: API Level 1.0.0 toLong() as Lang.Long 
 Convert a Float to a Long. Returns: Lang.Long — A Long representation of the Float 
 
 Since: API Level 1.0.0 toNumber() as Lang.Number 
 Convert a Float to a Number. The Float value will be rounded toward 0 upon conversion. For example, 6.8 becomes 6 and -5.7 becomes -5. Returns: Lang.Number — A Number representation of the Float 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidOptionsException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/InvalidOptionsException.html)nClass: Toybox.Lang.InvalidOptionsException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.InvalidOptionsException 
 
 show all Overview
 This exception indicates invalid options during initialization. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) InvalidOptionsException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 InvalidOptionsException constructor. Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidValueException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/InvalidValueException.html)nClass: Toybox.Lang.InvalidValueException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.InvalidValueException 
 
 show all Overview
 This exception indicates an invalid value was provided to an API. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) InvalidValueException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 InvalidValueException constructor. Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Long (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Long.html)nClass: Toybox.Lang.Long
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Long 
 
 show all Overview
 Long represents a 64-bit signed integer. To use a Long value in Monkey C add 'l' to the end of the number. Example: var myLong = 9000l; Since: API Level 1.0.0 Instance Method Summary collapse 
 abs () as Lang.Long Get the absolute value of a Long. 
 compareTo (other as Lang.Object ) as Lang.Number Compare the numeric value of self to some other numeric value. 
 equals (other as Lang.Object or Null ) as Lang.Boolean Test if an Object instance is equal to another instance of an Object. 
 format (format as Lang.String ) as Lang.String Format a Long using a formatting String. 
 toDouble () as Lang.Double Convert a Long to a Double. 
 toFloat () as Lang.Float Convert a Long to a Float. 
 toLong () as Lang.Long Convert a Long to a Long. 
 toNumber () as Lang.Number Convert a Long to a Number. 
 toString () as Lang.String Convert a Long to a String. 
 
 Instance Method Details
 abs() as Lang.Long 
 Get the absolute value of a Long. Returns: Lang.Long — The absolute value of the Long 
 
 Since: API Level 1.0.0 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the numeric value of self to some other numeric value. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Test if an Object instance is equal to another instance of an Object. Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if the Objects are equal, otherwise false 
 
 Since: API Level 1.3.0 format(format as Lang.String ) as Lang.String 
 Format a Long using a formatting String. The formatting string is similar to that available in printf from the C stdio library, though the length option is not available: "%[flags][width][.precision]specifier" specifiers d or i - signed decimal integer 
 e - scientific notation (mantissa/exponent) using 'e' character 
 E - scientific notation (mantissa/exponent) using 'E' character 
 f - decimal floating point 
 o - signed octal 
 u - unsigned decimal integer 
 x - unsigned hexadecimal integer 
 X - unsigned hexadecimal integer (capital letters) 
 
 flags + - Prepends the result with a plus or minus sign ('+' or '-'), including positive numbers. By default, only negative numbers are preceded with a '-' sign. 
 0 - Left-pads the number with zeros (0) instead of spaces, where padding is specified (see width sub-specifier). 
 
 width supports only numbers (* is not supported) .precision supports only numbers (* is not supported) Returns: Lang.String — A formatted String 
 
 Since: API Level 1.0.0 toDouble() as Lang.Double 
 Convert a Long to a Double. Returns: Lang.Double — A Double representation of the Long 
 
 Since: API Level 1.0.0 toFloat() as Lang.Float 
 Convert a Long to a Float. Returns: Lang.Float — A Float representation of the Long 
 
 Since: API Level 1.0.0 toLong() as Lang.Long 
 Convert a Long to a Long. Returns: Lang.Long — A Long representation of the Long 
 
 Since: API Level 1.0.0 toNumber() as Lang.Number 
 Convert a Long to a Number. Returns: Lang.Number — A Number representation of the Long 
 
 Since: API Level 1.0.0 toString() as Lang.String 
 Convert a Long to a String. Returns: Lang.String — A String representation of the Long 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Method (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Method.html)nClass: Toybox.Lang.Method
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Method 
 
 show all Overview
 Method is a class that represents a callback, or a function that can be used as an argument to another function. You can create one using the method() call, and invoke the Method using the invoke() method. See Also:
 Toybox.Lang.Object 
 Toybox.Timer 
 Toybox.SensorHistory 
 
 Example: Using a callback function with a Timer using Toybox.Timer; var myCount = 0; function timerCallback() { myCount += 1; } myTimer = new Timer.Timer(); myTimer.start(method(:timerCallback), 1000, true); Example: Invoking a Method using Toybox.Lang; function sensorIterator(type, options) { var sensors = [ :getHeartRateHistory, :getTemperatureHistory, :getPressureHistory, :getElevationHistory ]; var getSensorHistory = new Lang.Method(Toybox.SensorHistory, sensors[type]); return getSensorHistory.invoke(options); } enum { HEARTRATE, TEMPERATURE, PRESSURE, ELEVATION } var elevationIter = sensorIterator(ELEVATION, {:period =&gt; 10 }); Since: API Level 1.0.0 Instance Method Summary collapse 
 hashCode () as Lang.Number Get a hash code value for a Method. 
 initialize (aClass, aMethod as Lang.Symbol ) Method Constructor. 
 invoke (parameters...) Lang.Object Invoke a Method. 
 
 Instance Method Details
 hashCode() as Lang.Number 
 Get a hash code value for a Method. This computes a 32-bit Number that is typically used as an index when placing Objects into a Dictionary. Hash code values have the following characteristics: The computed hash code is constant for the lifetime of an Object 
 If two Objects are equal, their hash codes will be equal 
 
 Returns: Lang.Number — A hash code for the Method 
 
 See Also: Hash Function 
 Hash Tables 
 
 Since: API Level 1.0.0 initialize(aClass, aMethod as Lang.Symbol ) 
 Method Constructor. Parameters: aClass — Classdef of method (e.g. Toybox.SensorHistory) or a class instance. 
 aMethod — ( Lang.Symbol ) — Symbol of class method 
 
 Since: API Level 1.0.0 invoke(parameters...) Lang.Object 
 Invoke a Method. Parameters: parameters... — ( Lang.Object ) — The parameters required by the invoked Method 
 
 Returns: Lang.Object — The return value from the invoked Method 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Number (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Number.html)nClass: Toybox.Lang.Number
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Number 
 
 show all Overview
 Number represents a 32-bit signed integer. Since: API Level 1.0.0 Instance Method Summary collapse 
 abs () as Lang.Number Get the absolute value of a Number. 
 compareTo (other as Lang.Object ) as Lang.Number Compare the numeric value of self to some other numeric value. 
 format (format as Lang.String ) as Lang.String Format a Number using a formatting String. 
 toChar () as Lang.Char Convert a Number to a Char. 
 toDouble () as Lang.Double Convert a Number to a Double. 
 toFloat () as Lang.Float Convert a Number to a Float. 
 toLong () as Lang.Long Convert a Number to a Long. 
 toNumber () as Lang.Number Convert a Number to a Number. 
 
 Instance Method Details
 abs() as Lang.Number 
 Get the absolute value of a Number. Returns: Lang.Number — The absolute value of the Number 
 
 Since: API Level 1.0.0 compareTo(other as Lang.Object ) as Lang.Number 
 Compare the numeric value of self to some other numeric value. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type Numeric , Boolean , or Char . 
 
 format(format as Lang.String ) as Lang.String 
 Format a Number using a formatting String. The formatting string is similar to that available in printf from the C stdio library, though the length option is not available: "%[flags][width][.precision]specifier" specifiers d or i - signed decimal integer 
 e - scientific notation (mantissa/exponent) using 'e' character 
 E - scientific notation (mantissa/exponent) using 'E' character 
 f - decimal floating point 
 o - signed octal 
 u - unsigned decimal integer 
 x - unsigned hexadecimal integer 
 X - unsigned hexadecimal integer (capital letters) 
 
 flags + - Prepends the result with a plus or minus sign ('+' or '-'), including positive numbers. By default, only negative numbers are preceded with a '-' sign. 
 0 - Left-pads the number with zeros (0) instead of spaces, where padding is specified (see width sub-specifier). 
 
 width supports only numbers (* is not supported) .precision supports only numbers (* is not supported) Example: Formatting time with leading zeros // Format the time to display "08:03:15" using Toybox.Lang; var hours = 8; var minutes = 3; var seconds = 15; var myTime = Lang.format( "$1$:$2$:$3$", [hours.format("%02d"), minutes.format("%02d"), seconds.format("%02d")] ); Returns: Lang.String — A formatted String 
 
 See Also: Formatted output forum thread 
 
 Since: API Level 1.0.0 toChar() as Lang.Char 
 Convert a Number to a Char. Returns: Lang.Char — A Char representation of the Number 
 
 Since: API Level 1.3.0 toDouble() as Lang.Double 
 Convert a Number to a Double. Returns: Lang.Double — A Double representation of the Number 
 
 Since: API Level 1.0.0 toFloat() as Lang.Float 
 Convert a Number to a Float. Returns: Lang.Float — A Float representation of the Number 
 
 Since: API Level 1.0.0 toLong() as Lang.Long 
 Convert a Number to a Long. Returns: Lang.Long — A Long representation of the Number 
 
 Since: API Level 1.0.0 toNumber() as Lang.Number 
 Convert a Number to a Number. Returns: Lang.Number — A Number representation of the Number 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Object (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Object.html)nClass: Toybox.Lang.Object
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Object 
 
 show all Overview
 Object is the root object for the Monkey C class hierarchy. Since: API Level 1.0.0 Instance Method Summary collapse 
 equals (other as Lang.Object or Null ) as Lang.Boolean Test if an Object instance is equal to another instance of an Object. 
 hashCode () as Lang.Number Get a hash code value for an Object. 
 method (methodName as Lang.Symbol ) as Lang.Method Retrieve a callback to a Method. 
 toString () as Lang.String Convert an Object to a String. 
 weak () as Lang.WeakReference Get a WeakReference to an Object. 
 
 Instance Method Details
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Test if an Object instance is equal to another instance of an Object. Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Example: var a = 1; var b = 1; var c = 1.0; a.equals(b); // returns true a.equals(c); // returns false Returns: Lang.Boolean — true if Objects are equal, otherwise false 
 
 Since: API Level 1.0.0 hashCode() as Lang.Number 
 Get a hash code value for an Object. This computes a 32-bit Number that is typically used as an index when placing Objects into a Dictionary. Hash code values have the following characteristics: The computed hash code is constant for the lifetime of an Object 
 If two Objects are equal, their hash codes will be equal 
 
 Returns: Lang.Number — A hash code for the Object 
 
 See Also: Hash Function 
 Hash Tables 
 
 Since: API Level 1.0.0 method(methodName as Lang.Symbol ) as Lang.Method 
 Retrieve a callback to a Method. This is typically used when supplying a callback function to another method. Parameters: methodName — ( Lang.Symbol ) — The Symbol of the specified Method 
 
 Returns: Lang.Method — A Method object for the specified Symbol 
 
 See Also: Toybox.Lang.Method 
 
 Since: API Level 1.0.0 toString() as Lang.String 
 Convert an Object to a String. Example: var myNumber = 3219; var myString = myNumber.toString(); Returns: Lang.String — A String representation of the Object 
 
 Since: API Level 1.0.0 weak() as Lang.WeakReference 
 Get a WeakReference to an Object. A weak reference is an object that keeps a reference to an object but does not increment the reference count. This means the object reference can be destroyed, so is a case that should be handled. Note: Immutable types (Number, Float, Long, Double, Boolean, String) will return their values. Other Object types will return a WeakReference object. Returns: Lang.WeakReference — A WeakReference to the Object 
 
 See Also: Toybox.Lang.WeakReference 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [OperationNotAllowedException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/OperationNotAllowedException.html)nClass: Toybox.Lang.OperationNotAllowedException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.OperationNotAllowedException 
 
 show all Overview
 This exception indicates that an app attempted an operation that is not allowed. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.1.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) OperationNotAllowedException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 OperationNotAllowedException constructor. Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [ResourceId (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/ResourceId.html)nClass: Toybox.Lang.ResourceId
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.ResourceId 
 
 show all Overview
 A ResourceId is a resource identifier. ResourceId values uniquely identify a resource to the system. Example: var resourceId = Rez.Strings.AppName; var appName = System.loadResource(resourceId); Since: API Level 1.0.0 Instance Method Summary collapse 
 toString () as Lang.String Convert a ResourceId to a String. 
 
 Instance Method Details
 toString() as Lang.String 
 Convert a ResourceId to a String Returns: Lang.String — The String representation of the ResourceId 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [SerializationException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/SerializationException.html)nClass: Toybox.Lang.SerializationException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.SerializationException 
 
 show all Overview
 Indicates that the function could not serialize an object Since: API Level 2.4.2 Instance Method Summary collapse 
 initialize (msg as Lang.String ) SerializationException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 SerializationException constructor. Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.4.2 Generated Dec 11, 2024, 8:58:43 AM


# [StorageFullException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/StorageFullException.html)nClass: Toybox.Lang.StorageFullException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.StorageFullException 
 
 show all Overview
 Indicates that a storage limit has been reached Since: API Level 2.4.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) StorageFullException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 StorageFullException constructor. Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.4.0 Generated Dec 11, 2024, 8:58:43 AM


# [String (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/String.html)nClass: Toybox.Lang.String
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.String 
 
 show all Overview
 String objects represent a sequence of characters, and provide methods for string operations. Since: API Level 1.0.0 Instance Method Summary collapse 
 compareTo (other as Lang.Object ) as Lang.Number Lexicographically compare self to some other string. 
 equals (other as Lang.Object or Null ) as Lang.Boolean Test if an Object instance is equal to another instance of an Object. 
 find (string as Lang.String ) as Lang.Number or Null Determine if the specified String exists in a String. 
 hashCode () as Lang.Number Get a hash code value for a String. 
 length () as Lang.Number Get the number of characters in a String. 
 substring (startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.String or Null Create a new String that contains the contents of the current String from a start position to an end position. 
 toCharArray () as Lang.Array &lt; Lang.Char &gt; Convert a String to an Array of Char objects. 
 toDouble () as Lang.Double or Null Convert a String to a Double. 
 toFloat () as Lang.Float or Null Convert a String to a Float. 
 toLong () as Lang.Long or Null Convert a String to a Long. 
 toLongWithBase (base as Lang.Number ) as Lang.Long or Null Convert a String to a Long using a specified base. 
 toLower () as Lang.String Convert a String to lowercase. 
 toNumber () as Lang.Number or Null Convert a String to a Number. 
 toNumberWithBase (base as Lang.Number ) as Lang.Number or Null Convert a String to a Number using a specified base. 
 toString () as Lang.String Convert a String to a String. 
 toUpper () as Lang.String Convert a String to uppercase. 
 toUtf8Array () as Lang.Array &lt; Lang.Number &gt; Convert a String to an Array of Number objects. 
 
 Instance Method Details
 compareTo(other as Lang.Object ) as Lang.Number 
 Lexicographically compare self to some other string. Parameters: other — ( Lang.Object ) — The right hand side of a comparison. 
 
 Returns: Lang.Number — A negative value if self is less than other, zero if the objects are equivalent, and a positive value if self is greater than other. 
 
 Since: API Level 5.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if other is not of type String . 
 
 equals(other as Lang.Object or Null ) as Lang.Boolean 
 Test if an Object instance is equal to another instance of an Object. Parameters: other — ( Lang.Object ) — The Object to test against 
 
 Returns: Lang.Boolean — true if the Objects are equal, otherwise false 
 
 Since: API Level 1.0.0 find(string as Lang.String ) as Lang.Number or Null 
 Determine if the specified String exists in a String. Parameters: string — ( Lang.String ) — String to find 
 
 Example: var myString = "Go bananas with Monkey C!"; var index = myString.find("bananas"); // index is 3 Returns: Lang.Number — The index of the start of the specified String, or null if not found 
 
 Since: API Level 1.0.0 hashCode() as Lang.Number 
 Get a hash code value for a String. Returns: Lang.Number — The hash code for the String 
 
 Since: API Level 1.0.0 length() as Lang.Number 
 Get the number of characters in a String. Returns: Lang.Number — The length of the String 
 
 Since: API Level 1.0.0 substring(startIndex as Lang.Number or Null , endIndex as Lang.Number or Null ) as Lang.String or Null 
 Create a new String that contains the contents of the current String from a start position to an end position. Note: Starting with 3.3.2, passing null for startIndex sets it to the start of the string and passing null for endIndex sets it to the end of the string. Passing in a negative number for either startIndex or endIndex offsets it from the end of the string. Parameters: startIndex — ( Lang.Number ) — Zero-based start index of the substring 
 endIndex — ( Lang.Number ) — End position of the substring, exclusive 
 
 Example: var myString = "Go bananas with Monkey C!"; var mySubString = myString.substring(3, 10); // mySubString is "bananas" Returns: Lang.String — The substring of the String or null on error 
 
 Since: API Level 1.0.0 toCharArray() as Lang.Array &lt; Lang.Char &gt; 
 Convert a String to an Array of Char objects. Returns: Lang.Array — A Char Array representation of the String, where each character in the String is an element in the Array 
 
 Since: API Level 1.3.0 toDouble() as Lang.Double or Null 
 Convert a String to a Double. If a String is in the numeric form of "123" or "123.45", convert it to a Double. Additional characters after the detected floating point value will be ignored. Strings that cannot be interpreted as a Double, or whose value exceeds that which can be represented in a Double, will result in a null value. Example: var myString; var myNum; myString = "123"; myNum = myString.toDouble(); // myNum is 123.000000 myString = "3.14" myNum = myString.toDouble(); // myNum is 3.140000 myString = "192.168.0.1" myNum = myString.toDouble(); // myNum is 192.167999 myString = "Hello There!" myNum = myString.toDouble(); // null Returns: Lang.Double — A Double representation of the String 
 
 Since: API Level 3.1.0 toFloat() as Lang.Float or Null 
 Convert a String to a Float. If a String is in the numeric form of "123" or "123.45", convert it to a Float. Additional characters after the detected floating point value will be ignored. Strings that cannot be interpreted as a Float, or whose value exceeds that which can be represented in a Float, will result in a null value. Example: var myString; var myNum; myString = "123"; myNum = myString.toFloat(); // myNum is 123.000000 myString = "3.14" myNum = myString.toFloat(); // myNum is 3.140000 myString = "192.168.0.1" myNum = myString.toFloat(); // myNum is 192.167999 myString = "Hello There!" myNum = myString.toFloat(); // null Returns: Lang.Float — A Float representation of the String 
 
 Since: API Level 1.0.0 toLong() as Lang.Long or Null 
 Convert a String to a Long. If a String is in the numeric form of "123", it can be converted to a Long. Additional characters after the detected number value will be ignored. Strings that cannot be interpreted as a Long, or whose value exceeds that which can be represented in a Long, will result in a null value. Example: var myString; var myNum; myString = "123"; myNum = myString.toLong(); // myNum is 123 myString = "3.14" myNum = myString.toLong(); // myNum is 3 myString = "1200 E. 151st. Street" myNum = myString.toLong(); // myNum is 1200 myString = "Hello There!" myNum = myString.toLong(); // null Returns: Lang.Long — A Long representation of the String 
 
 Since: API Level 3.1.0 toLongWithBase(base as Lang.Number ) as Lang.Long or Null 
 Convert a String to a Long using a specified base. Parameters: base — ( Lang.Object ) — The base of the input string. If the value of base is zero, the string content is expected to have syntax similar to that of integer constants, which includes: An optional sign character ('+' or '-') 
 An optional prefix for octal or hexadecimal ('0' or '0x') 
 A sequence of digits in the prefixed base, or decimal if none was specified. If the base value is between 2 and 36, the format expected for the number is valid digits and/or letters that represent integers of the specified radix (from '0' to 'z' or 'Z' for base 36). 
 
 
 
 Example: var myString; var myNum; myString = "10"; myNum = myString.toLongWithBase(2); // myNum is 2 myString = "FF"; myNum = myString.toLongWithBase(16); // myNum is 255 myNum = myString.toLongWithBase(0x10); // myNum is 255 Returns: Lang.Long — A Long representation of the String 
 
 Since: API Level 3.1.0 toLower() as Lang.String 
 Convert a String to lowercase. Returns: Lang.String — A new lowercase String 
 
 Since: API Level 1.0.0 toNumber() as Lang.Number or Null 
 Convert a String to a Number. If a String is in the numeric form of "123", it can be converted to a Number. Additional characters after the detected number value will be ignored. Strings that cannot be interpreted as a Number, or whose value exceeds that which can be represented in a Number, will result in a null value. Example: var myString; var myNum; myString = "123"; myNum = myString.toNumber(); // myNum is 123 myString = "3.14" myNum = myString.toNumber(); // myNum is 3 myString = "1200 E. 151st. Street" myNum = myString.toNumber(); // myNum is 1200 myString = "Hello There!" myNum = myString.toNumber(); // null Returns: Lang.Number — A Number representation of the String 
 
 Since: API Level 1.0.0 toNumberWithBase(base as Lang.Number ) as Lang.Number or Null 
 Convert a String to a Number using a specified base. Parameters: base — ( Lang.Object ) — The base of the input string. If the value of base is zero, the string content expected to have syntax similar to that of integer constants, which includes: An optional sign character ('+' or '-') 
 An optional prefix for octal or hexadecimal ('0' or '0x') 
 A sequence of digits in the prefixed base, or decimal if none was specified. If the base value is between 2 and 36, the format expected for the number is valid digits and/or letters that represent integers of the specified radix (from '0' to 'z' or 'Z' for base 36). 
 
 
 
 Example: var myString; var myNum; myString = "10"; myNum = myString.toNumberWithBase(2); // myNum is 2 myString = "FF"; myNum = myString.toNumberWithBase(16); // myNum is 255 myNum = myString.toNumberWithBase(0x10); // myNum is 255 Returns: Lang.Number — A Number representation of the String 
 
 Since: API Level 1.4.1 toString() as Lang.String 
 Convert a String to a String. Returns: Lang.String — A String representation of String 
 
 Since: API Level 1.0.0 toUpper() as Lang.String 
 Convert a String to uppercase. Returns: Lang.String — A new uppercase String 
 
 Since: API Level 1.0.0 toUtf8Array() as Lang.Array &lt; Lang.Number &gt; 
 Convert a String to an Array of Number objects. Each Number represents one byte of the UTF-8 representation of the String. Returns: Lang.Array — An Array representation of the String, where each byte in the string is an element in the Array 
 
 Since: API Level 1.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [Symbol (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/Symbol.html)nClass: Toybox.Lang.Symbol
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.Symbol 
 
 show all Overview
 A Symbol is a lightweight constant identifier. The Monkey C compiler will assign a new value when it encounters a new Symbol. This allows a developer to use Symbol objects as keys or constant values without explicitly declaring a constant or enum . While Symbol values are constant for a build, their values may change across builds. For this reason, Symbol objects should not be used for persistent data. Example: var person = {:first_name=&gt;"Bob", :last_name=&gt;"Jones"}; Since: API Level 1.0.0 Instance Method Summary collapse 
 toNumber () as Lang.Number Convert a Symbol to a Number This will return a number containing the integer value of the symbol. 
 toString () as Lang.String Convert a Symbol to a String This will return the string for the name of the symbol in development builds. 
 
 Instance Method Details
 toNumber() as Lang.Number 
 Convert a Symbol to a Number This will return a number containing the integer value of the symbol. Returns: Number — The number representation of the Symbol 
 
 Since: API Level 2.3.0 toString() as Lang.String 
 Convert a Symbol to a String This will return the string for the name of the symbol in development builds. Because Monkey C does not contain runtime reflection information in release builds, the returned string will be different and will follow the format "symbol (num)". In this format, "num" is the integer value of the symbol. Returns: String — The String representation of the Symbol 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [SymbolNotAllowedException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/SymbolNotAllowedException.html)nClass: Toybox.Lang.SymbolNotAllowedException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.SymbolNotAllowedException 
 
 show all Overview
 This exception indicates that an app attempted to access a Symbol that is not accessible to its app type. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.2.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) SymbolNotAllowedException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 SymbolNotAllowedException constructor. Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [UnexpectedTypeException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/UnexpectedTypeException.html)nClass: Toybox.Lang.UnexpectedTypeException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.UnexpectedTypeException 
 
 show all Overview
 This exception indicates an incorrect type was passed for a parameter. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 1.2.0 Instance Method Summary collapse 
 initialize (msg as Lang.String , unused1 as Lang.Object or Null , unused2 as Lang.Object or Null ) UnexpectedTypeException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String , unused1 as Lang.Object or Null , unused2 as Lang.Object or Null ) 
 UnexpectedTypeException constructor. @param msg [Toybox::Lang::String] The exception message @param unused1 [Toybox::Lang::Object] Unused. Preserves argument count for compatibility @param unused2 [Toybox::Lang::Object] Unused. Preserves argument count for compatibility Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [ValueOutOfBoundsException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/ValueOutOfBoundsException.html)nClass: Toybox.Lang.ValueOutOfBoundsException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Lang.ValueOutOfBoundsException 
 
 show all Overview
 This exception indicates a value out-of-bounds was passed as a parameter. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) ValueOutOfBoundsException constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 ValueOutOfBoundsException constructor. Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [WeakReference (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Lang/WeakReference.html)nClass: Toybox.Lang.WeakReference
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Lang.WeakReference 
 
 show all Overview
 A weak reference is a loosely bound reference to another object. If all strong references have been freed, the WeakReference.get() method will return null . This allows the developer to avoid circular references. See Also:
 Object.weak() 
 https://en.wikipedia.org/wiki/Weak_reference 
 
 Since: API Level 1.2.0 Instance Method Summary collapse 
 get () as Lang.Object or Null Get the Object referenced by the WeakReference. 
 stillAlive () as Lang.Boolean Determine whether a WeakReference is still alive. 
 
 Instance Method Details
 get() as Lang.Object or Null 
 Get the Object referenced by the WeakReference Returns: Lang.Object — The Object referenced, or null if the Object no longer exists 
 
 Since: API Level 1.2.0 stillAlive() as Lang.Boolean 
 Determine whether a WeakReference is still alive. Note: I feel FANTASTIC and I am still alive. When you're dying I'll be still alive. And when you're dead I will be still alive. Returns: Lang.Boolean — true if object is still alive, otherwise false 
 
 See Also: http://knowyourmeme.com/memes/still-alive-portal-end-theme 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Math (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Math.html)nModule: Toybox.Math
 Overview
 The Math Module provides various math methods available for use by Apps. Example: Prints the circumference of a circle. using Toybox.System; using Toybox.Math; var r = 5; var circumference = (2 * Math.PI * r); System.println(circumference); Example: Prints the area of a square with Math.pow via direct call. using Toybox.System; using Toybox.Math; System.println(Math.pow(10, 2)); Example: Solves for c using the Pythagorean Theorem and multiple Math API methods. using Toybox.System; using Toybox.Math; var a = 2; var b = 3; var c = Math.sqrt((Math.pow(a, 2) + Math.pow(b, 2))); System.println(c); Since: API Level 1.0.0 Classes Under Namespace
 Classes: Filter , FirFilter , IirFilter Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type E 2.7182818284590452354 API Level 1.0.0 32-bit floating point representation of E 
 Type PI 3.14159265358979323846 API Level 1.0.0 32-bit floating point representation of PI 
 Instance Method Summary collapse 
 acos (x as Lang.Numeric ) as Lang.Decimal Get the arc cosine of an angle. 
 asin (x as Lang.Numeric ) as Lang.Decimal Get the arc sine of an angle. 
 atan (x as Lang.Numeric ) as Lang.Decimal Get the arc tangent of an angle. 
 atan2 (y as Lang.Numeric , x as Lang.Numeric ) as Lang.Decimal Get the arc tangent of y/x in radians. 
 ceil (x as Lang.Numeric ) as Lang.Numeric Compute the ceiling of a value. 
 cos (x as Lang.Numeric ) as Lang.Decimal Get the cosine of an angle. 
 floor (x as Lang.Numeric ) as Lang.Numeric Compute the floor of a value. 
 ln (x as Lang.Numeric ) as Lang.Decimal Get natural logarithm of a value. 
 log (x as Lang.Numeric , base as Lang.Numeric ) as Lang.Decimal Get logarithm of a value using the specified base. 
 mean (data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Double Get the arithmetic mean (average) of an array of data. 
 mode (data as Lang.Array &lt; Lang.Object &gt;) as Lang.Object Get the most common value found in an array of data. 
 pow (x as Lang.Numeric , y as Lang.Numeric ) as Lang.Decimal Calculate x to the power of y. 
 rand () as Lang.Number Returns a pseudo-random Number. 
 round (x as Lang.Numeric ) as Lang.Numeric Round a value. 
 sin (x as Lang.Numeric ) as Lang.Decimal Get the sine of an angle. 
 sqrt (x as Lang.Numeric ) as Lang.Decimal Calculate the square root of a value. 
 srand (seed as Lang.Number ) as Void Seed the random number generator. 
 stdev (data as Lang.Array &lt; Lang.Numeric &gt;, xbar as Lang.Double or Null ) as Lang.Double Get the standard deviation of a sample of population data. 
 tan (x as Lang.Numeric ) as Lang.Decimal Get the tangent of an angle. 
 toDegrees (x as Lang.Numeric ) as Lang.Decimal Convert an angle from radians to degrees. 
 toRadians (x as Lang.Numeric ) as Lang.Decimal Convert an angle from degrees to radians. 
 variance (data as Lang.Array &lt; Lang.Numeric &gt;, xbar as Lang.Numeric or Null ) as Lang.Double Get the sample variance of an array of data. 
 
 Instance Method Details
 acos(x as Lang.Numeric ) as Lang.Decimal 
 Get the arc cosine of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The cosine value 
 
 Returns: Lang.Float , Lang.Double — The interval [0..PI] in radians, or NaN if invalid Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 asin(x as Lang.Numeric ) as Lang.Decimal 
 Get the arc sine of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The sine value 
 
 Returns: Lang.Float , Lang.Double — The interval [-PI/2..PI/2] in radians, or NaN if invalid Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 atan(x as Lang.Numeric ) as Lang.Decimal 
 Get the arc tangent of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The tangent value 
 
 Returns: Lang.Float , Lang.Double — The interval [-PI/2..PI/2] in radians, or NaN if invalid Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 atan2(y as Lang.Numeric , x as Lang.Numeric ) as Lang.Decimal 
 Get the arc tangent of y/x in radians. Parameters: y — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The proportion of the y coordinate 
 x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The proportion of the x coordinate 
 
 Returns: Lang.Float , Lang.Double — The principal arc tangent of y/x, in the interval [-PI..PI] radians, or NaN if invalid Float if both inputs are Number or Float 
 Double if either input is Long or Double 
 
 
 
 Since: API Level 1.3.0 ceil(x as Lang.Numeric ) as Lang.Numeric 
 Compute the ceiling of a value. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — A numeric value 
 
 Returns: Lang.Number , Lang.Float , Lang.Long , Lang.Double — The smallest integer greater than or equal to x Return type matches the input parameter type 
 
 Since: API Level 1.3.0 cos(x as Lang.Numeric ) as Lang.Decimal 
 Get the cosine of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The angle in radians 
 
 Returns: Lang.Float , Lang.Double — The cosine value of x in radians Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 floor(x as Lang.Numeric ) as Lang.Numeric 
 Compute the floor of a value. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — A numeric value 
 
 Returns: Lang.Number , Lang.Float , Lang.Long , Lang.Double — The largest integer less than or equal to x Return type matches the input parameter type 
 
 Since: API Level 1.3.0 ln(x as Lang.Numeric ) as Lang.Decimal 
 Get natural logarithm of a value Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The value for which to get the logarithm 
 
 Returns: Lang.Float , Lang.Double — natural logarithm of x Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 2.3.0 log(x as Lang.Numeric , base as Lang.Numeric ) as Lang.Decimal 
 Get logarithm of a value using the specified base Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The value for which to get the logarithm 
 base — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The base value. 
 
 Returns: Lang.Float , Lang.Double — specified base logarithm of x Float if both inputs are Number or Float 
 Double if either input is Long or Double 
 
 
 
 Since: API Level 1.0.0 mean(data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Double 
 Get the arithmetic mean (average) of an array of data. Parameters: data — ( Lang.Array ) — An array of Number , Float , Long , or Double values 
 
 Returns: Lang.Double — The arithmetic mean of the values in data 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidValueException ) — Thrown if the provided data array is empty. 
 
 mode(data as Lang.Array &lt; Lang.Object &gt;) as Lang.Object 
 Get the most common value found in an array of data. Parameters: data — ( Lang.Array ) — An array of Objects 
 
 Returns: Lang.Object — The most frequently occurring value in data. 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidValueException ) — Thrown if there is no most frequently occurring value or the passed in value array is empty 
 
 pow(x as Lang.Numeric , y as Lang.Numeric ) as Lang.Decimal 
 Calculate x to the power of y. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — Base 
 y — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — Exponent 
 
 Returns: Lang.Float , Lang.Double — x to the power of y Float if both inputs are Number or Float 
 Double if either input is Long or Double 
 
 
 
 Since: API Level 1.0.0 rand() as Lang.Number 
 Returns a pseudo-random Number. Use the srand() function to seed the random number generator. Returns: Lang.Number — Non-negative random number 
 
 Since: API Level 1.0.0 round(x as Lang.Numeric ) as Lang.Numeric 
 Round a value. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — A numeric value 
 
 Returns: Lang.Number , Lang.Float , Lang.Long , Lang.Double — The closest integer to x. Decimal values &gt;= .5 will be rounded up Return type matches the input parameter type 
 
 Since: API Level 1.3.0 sin(x as Lang.Numeric ) as Lang.Decimal 
 Get the sine of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The angle in radians 
 
 Returns: Lang.Float , Lang.Double — The sine value of x in radians Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 sqrt(x as Lang.Numeric ) as Lang.Decimal 
 Calculate the square root of a value. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The value for which to get the square root 
 
 Returns: Lang.Float , Lang.Double — The square root of x, or NaN if invalid Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.0.0 srand(seed as Lang.Number ) as Void 
 Seed the random number generator. Note: srand() does not return any value. Parameters: seed — ( Lang.Number ) — The value used for seeding rand() 
 
 Since: API Level 1.0.0 stdev(data as Lang.Array &lt; Lang.Numeric &gt;, xbar as Lang.Double or Null ) as Lang.Double 
 Get the standard deviation of a sample of population data. Parameters: data — ( Lang.Array ) — An array of Number , Float , Long , or Double values with at least two elements. 
 xbar — ( Lang.Double ) — The mean, if known. Otherwise, pass null and the mean of data will be calculated. 
 
 Returns: Lang.Double — The standard deviation of the samples 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidValueException ) — Thrown if the provided data array has fewer than two elements. 
 
 tan(x as Lang.Numeric ) as Lang.Decimal 
 Get the tangent of an angle. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The angle in radians 
 
 Returns: Lang.Float , Lang.Double — The tangent value of x in radians Toybox::Lang::Float if input is Toybox::Lang::Number or Toybox::Lang::Float Toybox::Lang::Double if input is Toybox::Lang::Long or Toybox::Lang::Double 
 
 Since: API Level 1.0.0 toDegrees(x as Lang.Numeric ) as Lang.Decimal 
 Convert an angle from radians to degrees. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The angle in radians 
 
 Returns: Lang.Float , Lang.Double — The angle of x in degrees Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.3.0 toRadians(x as Lang.Numeric ) as Lang.Decimal 
 Convert an angle from degrees to radians. Parameters: x — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The angle in degrees 
 
 Returns: Lang.Float , Lang.Double — The angle of x in radians Float if input is Number or Float 
 Double if input is Long or Double 
 
 
 
 Since: API Level 1.3.0 variance(data as Lang.Array &lt; Lang.Numeric &gt;, xbar as Lang.Numeric or Null ) as Lang.Double 
 Get the sample variance of an array of data. Returns the sample variance with Bessel's correction. Parameters: data — ( Lang.Array ) — An array of Number , Float , Long , or Double values with at least two elements. 
 xbar — ( Lang.Number , Lang.Float , Lang.Long , Lang.Double ) — The mean, if known. Otherwise, pass null and the mean of data will be calculated. 
 
 Returns: Lang.Double — The variance of the samples 
 
 Since: API Level 3.1.0 Throws: ( Lang.InvalidValueException ) — Thrown if the provided data array has fewer than two elements. 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Filter (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Math/Filter.html)nClass: Toybox.Math.Filter
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Math.Filter 
 
 show all Overview
 This is the base class for filters. Filters are devices or processes that remove some unwanted components or features from a signal or set of data. More detailed examples of filters can be found in the FirFilter and IirFilter definitions. See Also:
 Filters 
 
 Note: An exception will be thrown if the base Filter class version of this method is called. Example: This shows how a filter's method can be used on a set of data using Toybox.Math; var exampleFilter; var interestingCoefficients; var importantGain; var messyData; var filteredData; // Constructor function initialize() { // initialize filter var options = { :coefficients =&gt; [interestingCoefficients], :gain =&gt; importantGain }; try { exampleFilter = new Math.FirFilter(options); } catch(e) { System.println(e.getErrorMessage()); } } // apply filter function exampleApplyFilter(messyData) { filteredData = exampleFilter.apply(messyData); return filteredData; } Since: API Level 2.3.0 Direct Known Subclasses
 Math.FirFilter , Math.IirFilter Instance Method Summary collapse 
 apply (data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; Apply the Filter to an Array of samples. 
 initialize (dictionary as Lang.Dictionary ) Constructor. 
 
 Instance Method Details
 apply(data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; 
 Apply the Filter to an Array of samples. Note: An Exception will be thrown if the base Filter class version of this method is called. Parameters: data — Array of samples to apply filter 
 
 Returns: Array of samples with filter applied. 
 
 Since: API Level 2.3.0 Throws: ( Lang.SymbolNotAllowedException ) — If called on base class Filter object 
 
 initialize(dictionary as Lang.Dictionary ) 
 Constructor Parameters: dictionary — ( Lang.Dictionary ) — Unused. Preserves argument count for compatibility 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [FirFilter (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Math/FirFilter.html)nClass: Toybox.Math.FirFilter
 Inherits: Toybox.Math.Filter Toybox.Lang.Object 
 Toybox.Math.Filter 
 Toybox.Math.FirFilter 
 
 show all Overview
 Finite Impulse Response (FIR) filter implementation. See Also:
 FirFilters 
 
 Example: Shows the constructor and implementation for filter use with accelerometer data. Borrowed from the PitchCounter sample included in the SDK. using Toybox.Math; var mX = [0]; var mY = [0]; var mZ = [0]; var mFilter; // Constructor function initialize() { // initialize FIR filter var options = { :coefficients =&gt; [ -0.0278f, 0.9444f, -0.0278f ], :gain =&gt; 0.001f }; try { mFilter = new Math.FirFilter(options); } catch(e) { System.println(e.getErrorMessage()); } } // Callback to receive accelerometer data function accel_callback(sensorData) { mX = mFilter.apply(sensorData.accelerometerData.x); mY = sensorData.accelerometerData.y; mZ = sensorData.accelerometerData.z; onAccelData(); } Since: API Level 2.3.0 Instance Method Summary collapse 
 apply (data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; 
 initialize (dictionary as { :coefficients as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :gain as Lang.Float }) Constructor. 
 
 Instance Method Details
 apply(data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; 
 Since: API Level 2.3.0 initialize(dictionary as { :coefficients as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :gain as Lang.Float }) 
 Constructor Parameters: dictionary — ( Lang.Dictionary ) — A Dictionary containing filter settings. :coefficients — ( Lang.Array , Lang.ResourceId ) — An Array of Float values that specify the filter coefficients. A ResourceId referencing a JSON Array resource can also be used here. 
 :gain — ( Lang.Float ) — A Float value that specifies a multiplier to be applied to the coefficients. 
 
 
 
 Since: API Level 2.3.0 Throws: ( Lang.InvalidOptionsException ) — If the Dictionary does not have valid coefficients for filter or the :gain field is missing. Will also be thrown if an invalid JSON ResourceId is specified for coefficients instead of an array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [IirFilter (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Math/IirFilter.html)nClass: Toybox.Math.IirFilter
 Inherits: Toybox.Math.Filter Toybox.Lang.Object 
 Toybox.Math.Filter 
 Toybox.Math.IirFilter 
 
 show all Overview
 Infinite Impulse Response (IIR) filter implementation. See Also:
 IirFilters 
 
 Example: Shows the constructor and implementation for filter use with accelerometer data. using Toybox.Math; var mX = [0]; var mY = [0]; var mZ = [0]; var mFilter; // Constructor function initialize() { // initialize IIR filter. Coefficients are for demonstration purposes only. var options = { :coefficients_a =&gt; [ -0.0278f, 0.9444f, -0.0278f ], :coefficients_b =&gt; [ 0.0278f, -0.9444f, 0.0278], :gain =&gt; 0.001f }; try { mFilter = new Math.IirFilter(options); } catch(e) { System.println(e.getErrorMessage()); } } // Callback to receive accelerometer data function accel_callback(sensorData) { mX = mFilter.apply(sensorData.accelerometerData.x); mY = sensorData.accelerometerData.y; mZ = sensorData.accelerometerData.z; onAccelData(); } Since: API Level 2.3.0 Instance Method Summary collapse 
 apply (data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; 
 initialize (dictionary as { :coefficients_a as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :coefficients_b as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :gain as Lang.Float }) Constructor. 
 
 Instance Method Details
 apply(data as Lang.Array &lt; Lang.Numeric &gt;) as Lang.Array &lt; Lang.Float &gt; 
 Since: API Level 2.3.0 initialize(dictionary as { :coefficients_a as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :coefficients_b as Lang.Array &lt; Lang.Float &gt; or Lang.ResourceId , :gain as Lang.Float }) 
 Constructor Parameters: dictionary — ( Lang.Dictionary ) — A Dictionary containing filter settings. :coefficients_a — ( Lang.Array , Lang.ResourceId ) — An Array of Float values that specify the feedback filter coefficients. A ResourceId referencing a JSON Array resource can also be used here. 
 :coefficients_b — ( Lang.Array , Lang.ResourceId ) — An Array of Float values that specify the feed forward filter coefficients. A ResourceId referencing a JSON Array resource can also be used here. 
 :gain — ( Lang.Float ) — A Float value that specifies a multiplier to be applied to the coefficients. 
 
 
 
 Since: API Level 2.3.0 Throws: ( Lang.InvalidOptionsException ) — If the Dictionary does not have valid coefficients for filter or the :gain field is missing. Will also be thrown if an invalid JSON ResourceId is specified for :coefficients instead of an array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Media (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media.html)nModule: Toybox.Media
 Overview
 The Media module provides objects and methods for implementing audio content provider apps. This includes interfaces and methods for managing downloaded media content as well as interfaces used to provide required information to the system for playback. Since: API Level 3.0.0 App Types: Audio Content Provider 
 Background 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 245 Music
 Forerunner® 255 Music
 Forerunner® 255s Music
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq. Music Edition
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Classes Under Namespace
 Classes: ActiveContent , AlbumArt , AudioFormat , CacheStatistics , Content , ContentDelegate , ContentIterator , ContentMetadata , ContentRef , ContentRefIterator , CustomButton , PlaybackProfile , PlayerColors , ProviderIconInfo , SyncDelegate , SystemButton Constant Summary
 PlaybackPosition
 Since: API Level 3.0.0 Name Value Since Description See Also 
 PLAYBACK_POSITION_START 0 API Level 3.0.0 The playback position when the song has begun to play 
 ContentType
 Since: API Level 3.0.0 Name Value Since Description See Also 
 CONTENT_TYPE_INVALID 0 API Level 3.0.0 Invalid content type 
 CONTENT_TYPE_AUDIO 1 API Level 3.0.0 Content type for Audio 
 Encoding
 Since: API Level 3.0.0 Name Value Since Description See Also 
 ENCODING_INVALID 0 API Level 3.0.0 Invalid encoding type 
 ENCODING_ADTS 1 API Level 3.0.0 ADTS audio encoding type 
 ENCODING_MP3 2 API Level 3.0.0 MP3 audio encoding type 
 ENCODING_M4A 3 API Level 3.0.0 M4A audio encoding type 
 ENCODING_WAV 4 API Level 3.0.0 WAV audio encoding type 
 ImageFormat
 Since: API Level 3.0.0 Name Value Since Description See Also 
 IMAGE_FORMAT_INVALID 0 API Level 3.0.0 Invalid media content image format 
 IMAGE_FORMAT_JPEG 1 API Level 3.0.0 JPEG media content image format 
 IMAGE_FORMAT_PNG 2 API Level 3.0.0 PNG media content image format 
 PlaybackControl
 Since: API Level 3.0.0 Name Value Since Description See Also 
 PLAYBACK_CONTROL_SHUFFLE 2 API Level 3.0.0 The "shuffle" operation is allowed 
 PLAYBACK_CONTROL_PREVIOUS 3 API Level 3.0.0 The "previous track" operation is allowed 
 PLAYBACK_CONTROL_NEXT 4 API Level 3.0.0 The "next track" operation is allowed 
 PLAYBACK_CONTROL_SKIP_FORWARD 5 API Level 3.0.0 The "skip forward x seconds" operation is allowed 
 PLAYBACK_CONTROL_SKIP_BACKWARD 6 API Level 3.0.0 The "skip backward x seconds" operation is allowed 
 PLAYBACK_CONTROL_REPEAT 7 API Level 3.0.0 The "repeat" operation is allowed 
 PLAYBACK_CONTROL_RATING 9 API Level 3.0.3 The track "rating" operation is allowed 
 PLAYBACK_CONTROL_PLAYBACK 10 API Level 3.0.3 The "play/pause" operation is allowed 
 PLAYBACK_CONTROL_VOLUME 11 API Level 3.0.3 The "volume" button - if not provided it will be added to the end of the playback controls 
 PLAYBACK_CONTROL_SOURCE 12 API Level 3.0.3 The "source" button - if not provided it will be added to the end of the playback controls 
 PLAYBACK_CONTROL_LIBRARY 13 API Level 3.0.3 The "library" button - If provided it will be used for the library button UI. 
 SongEvent
 Since: API Level 3.0.0 Name Value Since Description See Also 
 SONG_EVENT_START 0 API Level 3.0.0 Indicates that a song was started from the beginning. ContentDelegate.onSong() 
 
 SONG_EVENT_SKIP_NEXT 1 API Level 3.0.0 Indicates that a song was skipped and the next song was requested. ContentDelegate.onSong() 
 
 SONG_EVENT_SKIP_PREVIOUS 2 API Level 3.0.0 Indicates that a song was skipped and the previous song was requested. ContentDelegate.onSong() 
 
 SONG_EVENT_PLAYBACK_NOTIFY 3 API Level 3.0.0 Indicates that a song was played for the duration set in PlaybackProfile.playbackNotificationThreshold . ContentDelegate.onSong() 
 
 SONG_EVENT_COMPLETE 4 API Level 3.0.0 Indicates that a song was completed. ContentDelegate.onSong() 
 
 SONG_EVENT_STOP 5 API Level 3.0.0 Indicates that a song was stopped in the middle of playback. ContentDelegate.onSong() 
 
 SONG_EVENT_PAUSE 6 API Level 3.0.0 Indicates that a song was paused in the middle of playback. ContentDelegate.onSong() 
 
 SONG_EVENT_RESUME 7 API Level 3.0.0 Indicates that a song was resumed after being paused. ContentDelegate.onSong() 
 
 SONG_EVENT_SKIP_FORWARD 8 API Level 4.2.4 Indicates that a song was skipped forward by the number of seconds specified in PlaybackProfile.skipForwardTimeDelta . ContentDelegate.onSong() 
 
 SONG_EVENT_SKIP_BACKWARD 9 API Level 4.2.4 Indicates that a song was skipped forward by the number of seconds specified in PlaybackProfile.skipBackwardTimeDelta . ContentDelegate.onSong() 
 
 RepeatMode
 Since: API Level 3.0.0 Name Value Since Description See Also 
 REPEAT_MODE_OFF 0 API Level 3.0.0 Repeat is off 
 REPEAT_MODE_ONE 1 API Level 3.0.0 Repeat the current track 
 REPEAT_MODE_ALL 2 API Level 3.0.0 Repeat all tracks 
 ButtonState
 Since: API Level 3.0.0 Name Value Since Description See Also 
 BUTTON_STATE_DEFAULT 0 API Level 3.0.3 The default state for a button. This is a valid state for all buttons. 
 BUTTON_STATE_DISABLED 1 API Level 3.0.3 The button is shown but not selectable. This is a valid state for all buttons. 
 BUTTON_STATE_ON 2 API Level 3.0.3 The button is considered "on". This is a valid state for the PLAYBACK_CONTROL_PLAYBACK, PLAYBACK_CONTROL_SHUFFLE, and PLAYBACK_CONTROL_REPEAT buttons. 
 BUTTON_STATE_OFF 3 API Level 3.0.3 The button is considered "off". This is a valid state for the PLAYBACK_CONTROL_PLAYBACK, PLAYBACK_CONTROL_SHUFFLE, and PLAYBACK_CONTROL_REPEAT buttons. 
 BUTTON_STATE_ALL 4 API Level 3.0.3 The button is considered in the "on" and "all" states. This is a valid state the for the PLAYBACK_CONTROL_SHUFFLE (shuffle all) and PLAYBACK_CONTROL_REPEAT (repeat all) buttons. 
 BUTTON_STATE_POSITIVE 5 API Level 3.0.3 The button is considered in the "positive" state. This is a valid state the for the PLAYBACK_CONTROL_RATING button. 
 BUTTON_STATE_NEGATIVE 6 API Level 3.0.3 The button is considered in the "negative" state. This is a valid state the for the PLAYBACK_CONTROL_RATING button. 
 BUTTON_STATE_NEUTRAL 7 API Level 3.0.3 The button is considered in the "neutral" state. This is a valid state the for the PLAYBACK_CONTROL_RATING button. 
 ButtonImage
 Since: API Level 3.0.0 Name Value Since Description See Also 
 BUTTON_IMAGE_ICON 0 API Level 3.0.3 The normal sized button image 
 BUTTON_IMAGE_DETAIL 1 API Level 3.0.3 The larger image for when the icon is highlighted 
 Instance Method Summary collapse 
 deleteCachedItem (contentRef as Media.ContentRef ) as Void Delete an individual cached media item. 
 getCacheStatistics () as Media.CacheStatistics Get the current size statistics of the media cache. 
 getCachedContentObj (contentRef as Media.ContentRef ) as Media.Content Get a Content object by ID from what has been persisted on the system. 
 getContentRefIter (options as { :contentType as Media.ContentType , :shuffle as Lang.Boolean }) as Media.ContentRefIterator Get a ContentRefIterator object. 
 notifySyncComplete (errorMessage as Lang.String or Null ) as Void deprecated Send a system notification to indicate that the sync completed. 
 notifySyncProgress (percentageComplete as Lang.Number ) as Void deprecated Send a system notification to indicate overall sync progress. 
 requestPlaybackProfileUpdate () as Void Request that the media player call ContentIterator.getPlaybackProfile() . 
 resetContentCache () as Void Delete the cached media content and reset the encryption key for the app. 
 setAlbumArt (albumArt as Graphics.BitmapType or Null ) as Void Set the album art for the currently playing song. 
 startPlayback (args as Application.PersistableType ) as Void Exit the AudioContentProviderApp in its current mode and launch it in playback mode. 
 startSync () as Void deprecated Exit the AudioContentProviderApp in its current mode and launch it in sync mode. 
 stopPlayback () as Void Stops playback if it was initiated by the app. 
 
 Instance Method Details
 deleteCachedItem(contentRef as Media.ContentRef ) as Void 
 Delete an individual cached media item. Parameters: contentRef — ( Media.ContentRef ) — The ContentRef for the Content object to be deleted 
 
 Since: API Level 3.0.0 getCacheStatistics() as Media.CacheStatistics 
 Get the current size statistics of the media cache. Returns: Media.CacheStatistics — The current CacheStatistics object 
 
 Since: API Level 3.0.0 getCachedContentObj(contentRef as Media.ContentRef ) as Media.Content 
 Get a Content object by ID from what has been persisted on the system. Parameters: contentRef — ( Media.ContentRef ) — The ContentRef object for the desired media Content 
 
 Returns: Media.Content — The desired Content object 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if contentRef parameter is not a valid ContentRef object Thrown if ID field of provided ContentRef object is not a string but content type is set to CONTENT_TYPE_AUDIO 
 ( Lang.InvalidOptionsException ) — Thrown if provided ContentRef has an invalid content type 
 
 getContentRefIter(options as { :contentType as Media.ContentType , :shuffle as Lang.Boolean }) as Media.ContentRefIterator 
 Get a ContentRefIterator object. The ContentRefIterator is used to iterate over all cached media on the system for the calling app. Parameters: options — ( Lang.Dictionary ) — A Dictionary of options :contentType — ( Media.ContentType ) — One of the CONTENT_TYPE_* values that indicates the type of cached content. 
 :shuffle — ( Lang.Boolean ) — When true , the ContentRef objects will be returned in a random order 
 When false , the ContentRef objects will be returned in a consistent order that is system dependent 
 
 
 
 
 
 Returns: Media.ContentRefIterator 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if :contentType value is invalid 
 
 notifySyncComplete(errorMessage as Lang.String or Null ) as Void 
 This has been deprecated This method may be removed after System 9. Send a system notification to indicate that the sync completed. Parameters: errorMessage — ( Lang.String ) — A descriptive error message if a failure occurred. If the sync completes successfully, null should be passed to this method. 
 
 See Also: Communications.notifySyncComplete() 
 
 Since: API Level 3.0.0 notifySyncProgress(percentageComplete as Lang.Number ) as Void 
 This has been deprecated This method may be removed after System 9. Send a system notification to indicate overall sync progress. Parameters: percentageComplete — ( Lang.Number ) — An integer from 0 to 100 indicating the completion percentage. 
 
 See Also: Communications.notifySyncProgress() 
 
 Since: API Level 3.0.0 requestPlaybackProfileUpdate() as Void 
 Request that the media player call ContentIterator.getPlaybackProfile() Since: API Level 3.0.3 resetContentCache() as Void 
 Delete the cached media content and reset the encryption key for the app. Since: API Level 3.0.0 setAlbumArt(albumArt as Graphics.BitmapType or Null ) as Void 
 Set the album art for the currently playing song Note: BitmapReference is only supported in CIQ 4.0.0 and later Parameters: albumArt — ( WatchUi.BitmapResource , Graphics.BitmapReference ) — The album art to display. If null then the system's default album art will be displayed. 
 
 Since: API Level 3.0.10 startPlayback(args as Application.PersistableType ) as Void 
 Exit the AudioContentProviderApp in its current mode and launch it in playback mode. Parameters: args — ( Lang.Object ) — A serializable object to pass to AudioContentProviderApp.getContentDelegate() when the app starts in playback mode. 
 
 Since: API Level 3.0.0 Throws: ( Lang.SerializationException ) — Thrown when the given argument cannot be serialized or is too large for serialization. 
 
 startSync() as Void 
 This has been deprecated This method may be removed after System 9. Exit the AudioContentProviderApp in its current mode and launch it in sync mode. See Also: Communications.startSync() 
 
 Since: API Level 3.0.0 stopPlayback() as Void 
 Stops playback if it was initiated by the app. If playback was not initiated by the app, calling stopPlayback() will do nothing. Since: API Level 3.1.8 Generated Dec 11, 2024, 8:58:43 AM


# [ActiveContent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ActiveContent.html)nClass: Toybox.Media.ActiveContent
 Inherits: Toybox.Media.Content Toybox.Lang.Object 
 Toybox.Media.Content 
 Toybox.Media.ActiveContent 
 
 show all Overview
 Pairs a ContentRef with associated ContentMetadata information and allows a playback start position to be set. Since: API Level 3.0.0 Instance Method Summary collapse 
 getPlaybackStartPosition () as Lang.Number Get the playback start position for media content. 
 initialize (contentRef as Media.ContentRef , metadata as Media.ContentMetadata , playbackStartPos as Lang.Number or Media.PlaybackPosition ) Constructor. 
 
 Instance Method Details
 getPlaybackStartPosition() as Lang.Number 
 Get the playback start position for media content Returns: Lang.Number 
 
 Since: API Level 3.0.0 initialize(contentRef as Media.ContentRef , metadata as Media.ContentMetadata , playbackStartPos as Lang.Number or Media.PlaybackPosition ) 
 Constructor Parameters: contentRef — ( Media.ContentRef ) — A reference to media content 
 metadata — ( Media.ContentMetadata ) — The metadata associated with referenced media content 
 playbackStartPos — ( Lang.Number ) — Playback start position for the media content in seconds 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [AlbumArt (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/AlbumArt.html)nClass: Toybox.Media.AlbumArt
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.AlbumArt 
 
 show all Overview
 Stores metadata related to the location and format of album art Since: API Level 3.0.0 Instance Member Summary collapse 
 image_format as Media.ImageFormat The image format of the album art. 
 image_offset as Lang.Number Byte offset of the album art image within the audio file. 
 
 Instance Attribute Details
 var image_format as Media.ImageFormat 
 The image format of the album art Since: API Level 3.0.0 Returns: Media.ImageFormat — An IMAGE_FORMAT_* enum value 
 
 var image_offset as Lang.Number 
 Byte offset of the album art image within the audio file Since: API Level 3.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [AudioFormat (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/AudioFormat.html)nClass: Toybox.Media.AudioFormat
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.AudioFormat 
 
 show all Overview
 Stores metadata related to the quality of the audio data associated with a media file. Since: API Level 3.0.0 Instance Member Summary collapse 
 bitRate as Lang.Number The bit rate of the audio. 
 numChannels as Lang.Number The number of channels. 
 sampleRate as Lang.Number The sample rate of the audio in Hz. 
 
 Instance Attribute Details
 var bitRate as Lang.Number 
 The bit rate of the audio Since: API Level 3.0.0 Returns: Lang.Number 
 
 var numChannels as Lang.Number 
 The number of channels Since: API Level 3.0.0 Returns: Lang.Number 
 
 var sampleRate as Lang.Number 
 The sample rate of the audio in Hz Since: API Level 3.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [CacheStatistics (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/CacheStatistics.html)nClass: Toybox.Media.CacheStatistics
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.CacheStatistics 
 
 show all Overview
 Stores media cache size statistics Since: API Level 3.0.0 Instance Member Summary collapse 
 capacity as Lang.Long The capacity of the media cache. 
 size as Lang.Long The current size of the media cache. 
 
 Instance Attribute Details
 var capacity as Lang.Long 
 The capacity of the media cache Since: API Level 3.0.0 Returns: Lang.Long — The capacity in bytes 
 
 var size as Lang.Long 
 The current size of the media cache Since: API Level 3.0.0 Returns: Lang.Long — The size in bytes 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Content (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/Content.html)nClass: Toybox.Media.Content
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.Content 
 
 show all Overview
 Pairs a ContentRef with associated ContentMetadata information. Since: API Level 3.0.0 Direct Known Subclasses
 Media.ActiveContent Instance Method Summary collapse 
 getContentRef () as Media.ContentRef Get the underlying ContentRef object. 
 getMetadata () as Media.ContentMetadata Get the metadata for this object. 
 getPlaybackStartPosition () as Lang.Number Get the playback start position for media content. 
 initialize (contentRef as Media.ContentRef , metadata as Media.ContentMetadata ) Constructor. 
 setMetadata (metadata as Media.ContentMetadata ) as Void Set the metadata for this object. 
 
 Instance Method Details
 getContentRef() as Media.ContentRef 
 Get the underlying ContentRef object Returns: Media.ContentRef 
 
 Since: API Level 3.0.0 getMetadata() as Media.ContentMetadata 
 Get the metadata for this object Returns: Media.ContentMetadata 
 
 Since: API Level 3.0.0 getPlaybackStartPosition() as Lang.Number 
 Get the playback start position for media content Returns: Lang.Number 
 
 Since: API Level 3.0.0 initialize(contentRef as Media.ContentRef , metadata as Media.ContentMetadata ) 
 Constructor Parameters: contentRef — ( Media.ContentRef ) — A reference to media content 
 metadata — ( Media.ContentMetadata ) — The metadata associated with referenced media content 
 
 Since: API Level 3.0.0 setMetadata(metadata as Media.ContentMetadata ) as Void 
 Set the metadata for this object Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [ContentDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ContentDelegate.html)nClass: Toybox.Media.ContentDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ContentDelegate 
 
 show all Overview
 A delegate object that the user implements to respond to certain media events from the native media player Since: API Level 3.0.0 Instance Method Summary collapse 
 getContentIterator () as Media.ContentIterator or Null Return a ContentIterator object for the system to use to iterate over media tracks. 
 onAdAction (adContext as Lang.Object ) as Void Respond to a user ad click. 
 onCustomButton (button as Media.CustomButton ) as Void Handle a CustomButton being selected in the Media Player. 
 onRepeat () as Void Respond to a command to change repeat mode. 
 onShuffle () as Void Respond to a command to turn shuffle on or off. 
 onSong (contentRefId as Lang.Object , songEvent as Media.SongEvent , playbackPosition as Lang.Number or Media.PlaybackPosition ) as Void Handle a notification from a system that a song has been played. 
 onThumbsDown (contentRefId as Lang.Object ) as Void Respond to a thumbs-down action. 
 onThumbsUp (contentRefId as Lang.Object ) as Void Respond to a thumbs-up action. 
 resetContentIterator () as Media.ContentIterator or Null Reset the ContentIterator to the beginning of the current playlist. 
 
 Instance Method Details
 getContentIterator() as Media.ContentIterator or Null 
 Return a ContentIterator object for the system to use to iterate over media tracks. Returns: Media.ContentIterator 
 
 Since: API Level 3.0.0 onAdAction(adContext as Lang.Object ) as Void 
 Respond to a user ad click. Parameters: adContext — ( Lang.Object ) — Context information for the ad that was clicked 
 
 Since: API Level 3.0.0 onCustomButton(button as Media.CustomButton ) as Void 
 Handle a CustomButton being selected in the Media Player Parameters: button — ( Media.CustomButton ) — The CustomButton that was pressed. 
 
 Since: API Level 3.0.3 onRepeat() as Void 
 Respond to a command to change repeat mode Since: API Level 3.0.0 onShuffle() as Void 
 Respond to a command to turn shuffle on or off. Since: API Level 3.0.0 onSong(contentRefId as Lang.Object , songEvent as Media.SongEvent , playbackPosition as Lang.Number or Media.PlaybackPosition ) as Void 
 Handle a notification from a system that a song has been played. Parameters: contentRefId — ( Lang.Object ) — The ID referencing a ContentRef object 
 songEvent — ( Media.SongEvent ) — A SONG_EVENT_* value indicating the triggered event 
 playbackPosition — ( Lang.Number , Media.PlaybackPosition ) — The time the song has been playing in seconds, or a PLAYBACK_POSITION_* value 
 
 Since: API Level 3.0.0 onThumbsDown(contentRefId as Lang.Object ) as Void 
 Respond to a thumbs-down action. The thumbs-down option is native to the device media player. When a user selects the thumbs-down function on the device, a corresponding onThumbsDown() event is sent to application. Parameters: contentRefId — ( Lang.Object ) — ID referencing a ContentRef object 
 
 Since: API Level 3.0.0 onThumbsUp(contentRefId as Lang.Object ) as Void 
 Respond to a thumbs-up action. The thumbs-up option is native to the device media player. When a user selects the thumbs-up function on the device, a corresponding onThumbsUp() event is sent to the application. Parameters: contentRefId — ( Lang.Object ) — ID referencing a ContentRef object 
 
 Since: API Level 3.0.0 resetContentIterator() as Media.ContentIterator or Null 
 Reset the ContentIterator to the beginning of the current playlist. Returns: Media.ContentIterator — An instance of the newly reset ContentIterator 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [ContentIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ContentIterator.html)nClass: Toybox.Media.ContentIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ContentIterator 
 
 show all Overview
 A user-defined iterator that returns referenced to media content on the system for use by the system media player. Since: API Level 3.0.0 Instance Method Summary collapse 
 canSkip () as Lang.Boolean Determine if the the current track can be skipped. 
 get () as Media.Content or Null Get the current media content object. 
 getPlaybackProfile () as Media.PlaybackProfile or Null Get the current media content playback profile. 
 next () as Media.Content or Null Get the next media content object. 
 peekNext () as Media.Content or Null Get the next media content object without incrementing the iterator. 
 peekPrevious () as Media.Content or Null Get the previous media content object without decrementing the iterator. 
 previous () as Media.Content or Null Get the previous media content object. 
 repeatMode () as Media.RepeatMode or Null Get the current repeat state. 
 shuffling () as Lang.Boolean Determine if playback is currently set to shuffle. 
 
 Instance Method Details
 canSkip() as Lang.Boolean 
 Determine if the the current track can be skipped. Returns: Lang.Boolean — Returns true if the current track can be skipped, otherwise false . 
 
 Since: API Level 3.0.0 get() as Media.Content or Null 
 Get the current media content object. Returns: Media.Content — A Content object representing the current track 
 null if no tracks remain 
 An error object if an error has occurred. This can be anything that inherits from Object , but it must implement toString() 
 
 
 
 Since: API Level 3.0.0 getPlaybackProfile() as Media.PlaybackProfile or Null 
 Get the current media content playback profile Returns: Media.PlaybackProfile 
 
 Since: API Level 3.0.0 next() as Media.Content or Null 
 Get the next media content object. Returns: Media.Content — A Content object representing the next track 
 null if no tracks remain 
 An error object if an error occurred. This can be anything that inherits from Object , but it must implement toString(). 
 
 
 
 Since: API Level 3.0.0 peekNext() as Media.Content or Null 
 Get the next media content object without incrementing the iterator. Returns: Media.Content — A Content object representing the current track 
 null if no tracks remain 
 An error object if an error has occurred. This can be anything that inherits from Object , but it must implement toString() 
 
 
 
 Since: API Level 3.0.0 peekPrevious() as Media.Content or Null 
 Get the previous media content object without decrementing the iterator. Returns: Media.Content — A Content object representing the current track 
 null if no tracks remain 
 An error object if an error has occurred. This can be anything that inherits from Object , but it must implement toString() 
 
 
 
 Since: API Level 3.0.0 previous() as Media.Content or Null 
 Get the previous media content object. Returns: Media.Content — A Content object representing the next track. 
 null if no tracks remain. 
 An error object if an error occurred. This can be anything that inherits from Object , but it must implement toString(). 
 
 
 
 Since: API Level 3.0.0 repeatMode() as Media.RepeatMode or Null 
 Get the current repeat state Returns: Media.RepeatMode — The REPEAT_MODE_* enum value that represents the current repeat state 
 
 Since: API Level 3.0.0 shuffling() as Lang.Boolean 
 Determine if playback is currently set to shuffle. Returns true if shuffle is on, otherwise false . Returns: Lang.Boolean 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [ContentMetadata (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ContentMetadata.html)nClass: Toybox.Media.ContentMetadata
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ContentMetadata 
 
 show all Overview
 Provides media content metadata for display in native media player user-interface. Since: API Level 3.0.0 Instance Member Summary collapse 
 album as Lang.String The album title. 
 artist as Lang.String The name of the artist. 
 genre as Lang.String The genre. 
 title as Lang.String The track title. 
 trackNumber as Lang.Number The track number. 
 
 Instance Attribute Details
 var album as Lang.String 
 The album title Since: API Level 3.0.0 Returns: Lang.String 
 
 var artist as Lang.String 
 The name of the artist Since: API Level 3.0.0 Returns: Lang.String 
 
 var genre as Lang.String 
 The genre Since: API Level 3.0.0 Returns: Lang.String 
 
 var title as Lang.String 
 The track title Since: API Level 3.0.0 Returns: Lang.String 
 
 var trackNumber as Lang.Number 
 The track number Since: API Level 3.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [ContentRef (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ContentRef.html)nClass: Toybox.Media.ContentRef
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ContentRef 
 
 show all Overview
 Provides a reference to downloaded media content. Since: API Level 3.0.0 Instance Method Summary collapse 
 getContentType () as Media.ContentType Get the media content type. 
 getId () as Lang.Object Get the content ref ID. 
 initialize (id as Lang.Object , type as Media.ContentType ) Constructor. 
 
 Instance Method Details
 getContentType() as Media.ContentType 
 Get the media content type. Returns: Media.ContentType — A CONTENT_TYPE_* value 
 
 Since: API Level 3.0.0 getId() as Lang.Object 
 Get the content ref ID. Returns: Lang.Object — The ID parameter value for the current ContentRef object 
 
 Since: API Level 3.0.0 initialize(id as Lang.Object , type as Media.ContentType ) 
 Constructor Parameters: id — ( Lang.Object ) — A unique identifier for this ContentRef object 
 type — ( Media.ContentType ) — One of the CONTENT_TYPE_* enum values 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [ContentRefIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ContentRefIterator.html)nClass: Toybox.Media.ContentRefIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ContentRefIterator 
 
 show all Overview
 Iterates over ContentRef objects present on the system for this application. Since: API Level 3.0.0 Instance Method Summary collapse 
 next () as Media.ContentRef Get the next ContentIterator . 
 
 Instance Method Details
 next() as Media.ContentRef 
 Get the next ContentIterator Returns: Media.ContentRefIterator — The next ContentRef object, or null if no more exist 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [CustomButton (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/CustomButton.html)nClass: Toybox.Media.CustomButton
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.CustomButton 
 
 show all Overview
 A CustomButton allows for a media player action other than one of the PLAYBACK_CONTROL_* actions. When a CustomButton is pressed in the media player the ContentDelegate.onCustomButton(button) function is called with the pressed button as a parameter. Since: API Level 3.0.3 Instance Method Summary collapse 
 getImage (image as Media.ButtonImage , highlighted as Lang.Boolean ) as WatchUi.BitmapResource or Graphics.BitmapReference or Null Called by the system to draw the button in the Media Player. 
 getState () as Media.ButtonState Called by the system to determine if the current state of the button. 
 getText (state as Media.ButtonState ) as Lang.String or Null Called by the system to draw the name of the button. 
 
 Instance Method Details
 getImage(image as Media.ButtonImage , highlighted as Lang.Boolean ) as WatchUi.BitmapResource or Graphics.BitmapReference or Null 
 Called by the system to draw the button in the Media Player Note: BitmapReference is only supported in CIQ 4.0.0 and later. Parameters: image — ( Media.ButtonImage ) — A BUTTON_IMAGE_* value 
 highlighted — ( Lang.Boolean ) — true if the button is highlighted, otherwise false 
 
 Returns: WatchUi.BitmapResource , Graphics.BitmapReference — A bitmap representation of the button 
 
 Since: API Level 3.0.3 getState() as Media.ButtonState 
 Called by the system to determine if the current state of the button Returns: Media.ButtonState — A BUTTON_STATE_* enum value representing the current state of the button 
 
 Since: API Level 3.0.3 getText(state as Media.ButtonState ) as Lang.String or Null 
 Called by the system to draw the name of the button Parameters: state — ( Media.ButtonState ) — A BUTTON_STATE_* value indicating the current state of the button 
 
 Returns: Lang.String — the name of the button 
 
 Since: API Level 3.0.3 Generated Dec 11, 2024, 8:58:43 AM


# [PlaybackProfile (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/PlaybackProfile.html)nClass: Toybox.Media.PlaybackProfile
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.PlaybackProfile 
 
 show all Overview
 Provides the media player with specific rules about what playback options are supported. Example: an example of the PlaybackProfile object // Returns the playback profile function getPlaybackProfile() { var profile = new PlaybackProfile(); // Set the parameters for the PlaybackProfile.playbackControls profile.playbackControls = [ Media.PLAYBACK_CONTROL_PLAYBACK, // Allow Play/Pause control Media.PLAYBACK_CONTROL_SHUFFLE, // Allow Shuffle control Media.PLAYBACK_CONTROL_PREVIOUS, // Allow Previous control Media.PLAYBACK_CONTROL_NEXT, // Allow Next control Media.PLAYBACK_CONTROL_SKIP_FORWARD, // Allow Skip-Forward control Media.PLAYBACK_CONTROL_SKIP_BACKWARD, // Allow Skip-Backward control Media.PLAYBACK_CONTROL_REPEAT, // Allow Repeat control Media.PLAYBACK_CONTROL_RATING // Allow Ratings control ]; // Skip media content on thumbs-down profile.attemptSkipAfterThumbsDown = true; // Do not require playback notification profile.requirePlaybackNotification = false; // Set the notification threshold to 30 seconds profile.playbackNotificationThreshold = 30; // Set the skip previous threshold to 5 seconds profile.skipPreviousThreshold = 5; return profile; } Since: API Level 3.0.0 Instance Member Summary collapse 
 attemptSkipAfterThumbsDown as Lang.Boolean or Null Defines if the current song is skipped if a thumbs-down operation is given. 
 playbackControls as Lang.Array &lt; Media.PlaybackControl or Media.CustomButton or Media.SystemButton &gt; or Null Playback controls that should be rendered in the player. 
 playbackNotificationThreshold as Lang.Number or Null The number of seconds a song must play to trigger a "played" notification. 
 playerColors as Media.PlayerColors or Null The colors for the media player. 
 requirePlaybackNotification as Lang.Boolean or Null Defines if the system notifies the app when each song is played. 
 skipBackwardTimeDelta as Lang.Number or Null The number of seconds to move backward in a track during a skip backward event. 
 skipForwardTimeDelta as Lang.Number or Null The number of seconds to move forward in a track during a skip forward event. 
 skipPreviousThreshold as Lang.Number or Null The amount of time a song must be played so that pressing back restarts the track and requires a second back press to skip to the previous track in seconds. 
 
 Instance Attribute Details
 var attemptSkipAfterThumbsDown as Lang.Boolean or Null 
 Defines if the current song is skipped if a thumbs-down operation is given Since: API Level 3.0.0 Returns: Lang.Boolean 
 
 var playbackControls as Lang.Array &lt; Media.PlaybackControl or Media.CustomButton or Media.SystemButton &gt; or Null 
 Playback controls that should be rendered in the player. This is an Array that holds a combination of PLAYBACK_CONTROL_* , CustomButton , and SystemButton values defined by the developer. The values in this Array determine which native media player control options are rendered and available to the end user of the current device. The first entry in the array may be used as a hotkey in the media player. This is device dependent. Since: API Level 3.0.0 Returns: Lang.Array 
 
 var playbackNotificationThreshold as Lang.Number or Null 
 The number of seconds a song must play to trigger a "played" notification. A value of 0 means notify as soon as the song begins playing. Since: API Level 3.0.0 Returns: Lang.Number 
 
 var playerColors as Media.PlayerColors or Null 
 The colors for the media player. If set to null the default colors that are device-dependent will be used. Since: API Level 3.0.3 Returns: Media.PlayerColors 
 
 var requirePlaybackNotification as Lang.Boolean or Null 
 Defines if the system notifies the app when each song is played Since: API Level 3.0.0 Returns: Lang.Boolean 
 
 var skipBackwardTimeDelta as Lang.Number or Null 
 The number of seconds to move backward in a track during a skip backward event. If set to null the default value of 30 seconds will be used. Note: When overriding the default value, it will be necessary to provide a custom icon for the skip backward button, as the default indicates 30 seconds. This can be done by returning a PlaybackProfile with custom playbackControls from getPlaybackProfile() . Since: API Level 4.2.4 Returns: Lang.Number 
 
 var skipForwardTimeDelta as Lang.Number or Null 
 The number of seconds to move forward in a track during a skip forward event. If set to null the default value of 30 seconds will be used. Note: When overriding the default value, it will be necessary to provide a custom icon for the skip forward button, as the default indicates 30 seconds. This can be done by returning a PlaybackProfile with custom playbackControls from getPlaybackProfile() . Since: API Level 4.2.4 Returns: Lang.Number 
 
 var skipPreviousThreshold as Lang.Number or Null 
 The amount of time a song must be played so that pressing back restarts the track and requires a second back press to skip to the previous track in seconds. If set to null a default value that is device-dependent will be used. Since: API Level 3.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [PlayerColors (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/PlayerColors.html)nClass: Toybox.Media.PlayerColors
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.PlayerColors 
 
 show all Overview
 Provides the media player with specific colors for the UI Since: API Level 3.0.3 Instance Member Summary collapse 
 backgroundColor as Graphics.ColorType The background color for the media player. 
 foregroundColor as Graphics.ColorType The foreground color for the media player. 
 highlightBorderColor as Graphics.ColorType The border color behind the currently selected icon. 
 highlightFillColor as Graphics.ColorType The fill color behind the currently selected icon. 
 progressBarBackgroundColor as Graphics.ColorType The color of the progress bar for total time. 
 progressBarForegroundColor as Graphics.ColorType The color of the progress bar for elapsed time. 
 textColor as Graphics.ColorType The color of the text in the media player. 
 
 Instance Attribute Details
 var backgroundColor as Graphics.ColorType 
 The background color for the media player Since: API Level 3.0.3 var foregroundColor as Graphics.ColorType 
 The foreground color for the media player Since: API Level 3.0.3 var highlightBorderColor as Graphics.ColorType 
 The border color behind the currently selected icon Since: API Level 3.0.3 var highlightFillColor as Graphics.ColorType 
 The fill color behind the currently selected icon Since: API Level 3.0.3 var progressBarBackgroundColor as Graphics.ColorType 
 The color of the progress bar for total time Since: API Level 3.0.3 var progressBarForegroundColor as Graphics.ColorType 
 The color of the progress bar for elapsed time Since: API Level 3.0.3 var textColor as Graphics.ColorType 
 The color of the text in the media player Since: API Level 3.0.3 Generated Dec 11, 2024, 8:58:43 AM


# [ProviderIconInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/ProviderIconInfo.html)nClass: Toybox.Media.ProviderIconInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.ProviderIconInfo 
 
 show all Overview
 ProviderIconInfo is the class representation of a provider icon. Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (icon as Graphics.BitmapReference or Lang.ResourceId , accentColor as Graphics.ColorType ) Constructor. 
 
 Instance Method Details
 initialize(icon as Graphics.BitmapReference or Lang.ResourceId , accentColor as Graphics.ColorType ) 
 Constructor Parameters: icon — ( WatchUi.BitmapResource , Lang.ResourceId ) — The icon. 
 accentColor — ( Graphics.ColorType ) — A Graphics.COLOR_* value to indicate the icon's accent color 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [SyncDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/SyncDelegate.html)nClass: Toybox.Media.SyncDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.SyncDelegate 
 
 show all Overview
 A delegate object that the user implements to respond to media sync requests from the system. This has been deprecated This class may be removed after System 9. See Also:
 Toybox.Communications.SyncDelegate 
 
 Since: API Level 3.0.0 Instance Method Summary collapse 
 isSyncNeeded () as Lang.Boolean Check if a sync is needed. 
 onStartSync () as Void Called when a sync is started by the system. 
 onStopSync () as Void Called when an active sync is cancelled. 
 
 Instance Method Details
 isSyncNeeded() as Lang.Boolean 
 Check if a sync is needed. Returns: Lang.Boolean — When true , a sync is needed 
 When false a sync is not needed and onStartSync will not be called if a sync is triggered for this application 
 
 
 
 Since: API Level 3.0.0 onStartSync() as Void 
 Called when a sync is started by the system. This method should be used to kick-off the application sync process. This includes any setup required to fetch the data needed to prepare the sync, as well as the initial call to makeWebRequest() to download the first piece of audio content. Note that, when using this method, you must chain your makeWebRequest() calls together manually. Additionally, you must call notifySyncProgress() intermittently to enable sync progress updates to be displayed in the native user interface for the device. Finally, notifySyncComplete() must be called either when the sync has successfully completed, or if an error occurs, so that the device can be properly notified that the sync process is finished. Since: API Level 3.0.0 onStopSync() as Void 
 Called when an active sync is cancelled. This method will be called when an active sync is being cancelled by the user. The app is responsible for calling the cancelAllRequests() to cancel any requests made for a sync process. The app is also responsible to let the system know that sync has successfully been cancelled by calling notifySyncComplete() . Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [SystemButton (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Media/SystemButton.html)nClass: Toybox.Media.SystemButton
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Media.SystemButton 
 
 show all Overview
 A SystemButton allows an app to override a default media player button. The button can be overridden by providing a new Toybox::WatchUi::BitmapResource , Toybox::Graphics::BitmapReference or a Toybox::Lang::Number representing a 24-bit RRGGBB color value. If a color value is provided then the system default button will be used but will drawn using the given color. Note: BitmapReference is only supported in CIQ 4.0.0 and later Since: API Level 3.0.3 Instance Method Summary collapse 
 getImage (image as Media.ButtonImage , state as Media.ButtonState , highlighted as Lang.Boolean ) as Graphics.BitmapType or Graphics.ColorType or Null Called by the system to draw the button in the Media Player. 
 initialize (type as Media.PlaybackControl , options as { :disabled as Lang.Boolean } or Null ) Constructor. 
 
 Instance Method Details
 getImage(image as Media.ButtonImage , state as Media.ButtonState , highlighted as Lang.Boolean ) as Graphics.BitmapType or Graphics.ColorType or Null 
 Called by the system to draw the button in the Media Player Note: BitmapReference is only supported in CIQ 4.0.0 and later Parameters: image — ( Media.ButtonImage ) — A BUTTON_IMAGE_* value 
 state — ( Media.ButtonState ) — A BUTTON_STATE_* value indicating the current state of the button 
 highlighted — ( Lang.Boolean ) — Set to true if the button is highlighted, otherwise false 
 
 Returns: Lang.Number , WatchUi.BitmapResource , Graphics.BitmapReference — A bitmap representation of the button or a 24-bit RRGGBB color 
 
 Since: API Level 3.0.3 initialize(type as Media.PlaybackControl , options as { :disabled as Lang.Boolean } or Null ) 
 Constructor Parameters: type — ( Media.PlaybackControl ) — A PLAYBACK_CONTROL_* value for the button. 
 options — ( Lang.Dictionary ) — A Dictionary of options :disabled — ( Lang.Boolean ) — Set to true if the button is disabled, otherwise false 
 
 
 
 Since: API Level 3.0.3 Generated Dec 11, 2024, 8:58:43 AM


# [PersistedContent (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent.html)nModule: Toybox.PersistedContent
 Overview
 The PersistedContent module allows access to stored routes, waypoints, and other stored user data. This module provides an Iterator class that gives access to content stored on the device. Included content types are as follows: Course 
 Route 
 Track 
 Waypoint 
 Workout 
 
 Each of these objects can utilize System.Intents to to launch the appropriate application type for the content type (e.g. The workout might launch the workout player). This is typically used in conjunction with the Communications module to retrieve content of type .FIT and .GPX and later access it using the get methods provided within this module. See Also:
 Toybox.System.Intent 
 Toybox.Communications 
 Core Topics - Downloading Content 
 
 Note: As a general rule, Fitness and Edge devices will support .FIT format. Outdoor devices will support .GPX format. Example: // Assumes content already saved on device using Toybox.PersistedContent; using Toybox.System; var iterator = PersistedContent.getCourses; // Get the Iterator var content = iterator.next(); // Get the next object in the iterator var name = content.getName(); // Get the content name var id = content.getId(); // Get the content id System.ExitTo(content.toIntent()); // Use the content for a System.Intent Since: API Level 2.2.0 App Types: Watch App 
 Audio Content Provider 
 Widget 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Requires Permission: PersistedContent 
 
 Classes Under Namespace
 Classes: Course , Iterator , Route , Track , Waypoint , Workout Typedef Summary collapse 
 Content as interface { function getName() as Lang.String ; function getId() as Lang.Number ; function toIntent() as System.Intent ; function remove() as Void ; } 
 
 Instance Method Summary collapse 
 getAppCourses () as PersistedContent.Iterator Get the subset of courses installed on the system that are owned by the application. 
 getAppRoutes () as PersistedContent.Iterator Get the subset of routes installed on the system that are owned by the application. 
 getAppTracks () as PersistedContent.Iterator Get the subset of tracks installed on the system that are owned by the application. 
 getAppWaypoints () as PersistedContent.Iterator Get the subset of waypoints installed on the system that are owned by the application. 
 getAppWorkouts () as PersistedContent.Iterator Get the subset of workouts installed on the system that are owned by the application. 
 getCourses () as PersistedContent.Iterator Get the courses installed on the system. 
 getRoutes () as PersistedContent.Iterator Get the routes installed on the system. 
 getTracks () as PersistedContent.Iterator Get the tracks installed on the system. 
 getWaypoints () as PersistedContent.Iterator Get the waypoints installed on the system. 
 getWorkouts () as PersistedContent.Iterator Get the workouts installed on the system. 
 saveWaypoint (location as Position.Location , options as { :name as Lang.String } or Null ) as Void Save a Location as a Waypoint to the device's location list. 
 
 Typedef Details
 Content as interface { function getName() as Lang.String ; function getId() as Lang.Number ; function toIntent() as System.Intent ; function remove() as Void ; } 
 Since: API Level 2.2.0 Instance Method Details
 getAppCourses() as PersistedContent.Iterator 
 Get the subset of courses installed on the system that are owned by the application Example: // Assumes content already saved on device using Toybox.PersistedContent; // Get an iterator for all courses owned by this application var iterator = PersistedContent.getAppCourses(); Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 
 Returns: PersistedContent.Iterator — An Iterator over the persisted content objects requested 
 
 Since: API Level 3.0.0 getAppRoutes() as PersistedContent.Iterator 
 Get the subset of routes installed on the system that are owned by the application Example: // Assumes content already saved on device using Toybox.PersistedContent; // Get an iterator for all routes owned by this application var iterator = PersistedContent.getAppRoutes(); Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: PersistedContent.Iterator — An Iterator over the persisted content objects requested 
 
 Since: API Level 3.0.0 getAppTracks() as PersistedContent.Iterator 
 Get the subset of tracks installed on the system that are owned by the application Example: // Assumes content already saved on device using Toybox.PersistedContent; // Get an iterator for all tracks owned by this application var iterator = PersistedContent.getAppTracks(); Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: PersistedContent.Iterator — An Iterator over the persisted content objects requested 
 
 Since: API Level 3.0.0 getAppWaypoints() as PersistedContent.Iterator 
 Get the subset of waypoints installed on the system that are owned by the application Example: // Assumes content already saved on device using Toybox.PersistedContent; // Get an iterator for all waypoints owned by this application var iterator = PersistedContent.getAppWaypoints(); Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: PersistedContent.Iterator — An Iterator over the persisted content objects requested 
 
 Since: API Level 3.0.0 getAppWorkouts() as PersistedContent.Iterator 
 Get the subset of workouts installed on the system that are owned by the application Example: // Assumes content already saved on device using Toybox.PersistedContent; // Get an iterator for all workouts owned by this application var iterator = PersistedContent.getAppWorkouts(); Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: PersistedContent.Iterator — An Iterator over the persisted content objects requested 
 
 Since: API Level 3.0.0 getCourses() as PersistedContent.Iterator 
 Get the courses installed on the system Example: // Assumes content already saved on device using Toybox.PersistedContent; var iterator = PersistedContent.getCourses(); // Get the Iterator Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 
 Returns: PersistedContent.Iterator — The Iterator of Course objects 
 
 Since: API Level 2.2.0 getRoutes() as PersistedContent.Iterator 
 Get the routes installed on the system Example: // Assumes content already saved on device using Toybox.PersistedContent; var iterator = PersistedContent.getRoutes(); // Get the Iterator Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: PersistedContent.Iterator — The Iterator of Route objects 
 
 Since: API Level 2.2.0 getTracks() as PersistedContent.Iterator 
 Get the tracks installed on the system Example: // Assumes content already saved on device using Toybox.PersistedContent; var iterator = PersistedContent.getTracks(); // Get the Iterator Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Returns: PersistedContent.Iterator — The Iterator of Track objects 
 
 Since: API Level 2.2.0 getWaypoints() as PersistedContent.Iterator 
 Get the waypoints installed on the system Example: // Assumes content already saved on device using Toybox.PersistedContent; var iterator = PersistedContent.getWaypoints(); // Get the Iterator Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: PersistedContent.Iterator — The Iterator of Waypoints from the routes list 
 
 Since: API Level 2.2.0 getWorkouts() as PersistedContent.Iterator 
 Get the workouts installed on the system Example: // Assumes content already saved on device using Toybox.PersistedContent; var iterator = PersistedContent.getWorkouts(); // Get the Iterator Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: PersistedContent.Iterator — The Iterator of Workout objects 
 
 Since: API Level 2.2.0 saveWaypoint(location as Position.Location , options as { :name as Lang.String } or Null ) as Void 
 Save a Location as a Waypoint to the device's location list Parameters: location — ( Position.Location ) — The Location object to persist 
 options — ( Lang.Dictionary ) — The Dictionary of options, or null to accept defaults :name — ( Lang.String ) — The name to assign to the waypoint. If not specified the waypoint will be named automatically. 
 
 
 
 Example: using Toybox.PersistedContent; using Toybox.Position; var location = new Position.Location( { :latitude =&gt; &lt;latitude_coordinates&gt;, :longitude =&gt; &lt;longitude_coordinates&gt;, :format =&gt; :degrees } ); PersistedContent.saveWaypoint(location, {:name =&gt; "Cool Waypoint Name"}); Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 See Also: Toybox.Position.Location 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Course (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Course.html)nClass: Toybox.PersistedContent.Course
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Course 
 
 show all Overview
 A saved Course on the device in .FIT format. See Also:
 PersistedContent.getCourses() 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 
 Instance Method Summary collapse 
 getId () as Lang.Number Get a unique serializable id. 
 getName () as Lang.String Get a readable name for the content. 
 remove () as Void Remove a course. 
 toIntent () as System.Intent Get a system intent for the content. 
 
 Instance Method Details
 getId() as Lang.Number 
 Get a unique serializable id Returns: Lang.Number — The unique serializable id 
 
 Since: API Level 2.2.0 getName() as Lang.String 
 Get a readable name for the content Returns: Lang.String — The readable name 
 
 Since: API Level 2.2.0 remove() as Void 
 Remove a course Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the given content is not owned by the calling application. 
 
 toIntent() as System.Intent 
 Get a system intent for the content Returns: System.Intent — The System.Intent for the content 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Iterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Iterator.html)nClass: Toybox.PersistedContent.Iterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Iterator 
 
 show all Overview
 Content iterator for the persisted content See Also:
 Toybox.PersistedContent Module Example 
 
 Since: API Level 2.2.0 Instance Method Summary collapse 
 next () as PersistedContent.Content or Null Get the next item in the list. 
 
 Instance Method Details
 next() as PersistedContent.Content or Null 
 Get the next item in the list Returns: Lang.Object — The next item, or null if end of list 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Route (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Route.html)nClass: Toybox.PersistedContent.Route
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Route 
 
 show all Overview
 A saved Route on the device in .GPX format. See Also:
 PersistedContent.getRoutes() 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Instance Method Summary collapse 
 getId () as Lang.Number Get a unique serializable id. 
 getName () as Lang.String Get a readable name for the content. 
 remove () as Void Remove a route. 
 toIntent () as System.Intent Get a system intent for the content. 
 
 Instance Method Details
 getId() as Lang.Number 
 Get a unique serializable id Returns: Lang.Number — The unique serializable id 
 
 Since: API Level 2.2.0 getName() as Lang.String 
 Get a readable name for the content Returns: Lang.String — The readable name 
 
 Since: API Level 2.2.0 remove() as Void 
 Remove a route Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the given content is not owned by the calling application. 
 
 toIntent() as System.Intent 
 Get a system intent for the content Returns: System.Intent — The System.Intent for the content 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Track (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Track.html)nClass: Toybox.PersistedContent.Track
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Track 
 
 show all Overview
 A saved Track on the device in .GPX format. See Also:
 PersistedContent.getTracks() 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Instance Method Summary collapse 
 getId () as Lang.Number Get a unique serializable id. 
 getName () as Lang.String Get a readable name for the content. 
 remove () as Void Remove a track. 
 toIntent () as System.Intent Get a system intent for the content. 
 
 Instance Method Details
 getId() as Lang.Number 
 Get a unique serializable id Returns: Lang.Number — The unique serializable id 
 
 Since: API Level 2.2.0 getName() as Lang.String 
 Get a readable name for the content Returns: Lang.String — The readable name 
 
 Since: API Level 2.2.0 remove() as Void 
 Remove a track Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the given content is not owned by the calling application. 
 
 toIntent() as System.Intent 
 Get a system intent for the content Returns: System.Intent — The System.Intent for the content 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Waypoint (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Waypoint.html)nClass: Toybox.PersistedContent.Waypoint
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Waypoint 
 
 show all Overview
 A saved Waypoint on the device in .FIT or .GPX format. See Also:
 PersistedContent.getWaypoints() 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getId () as Lang.Number Get a unique serializable id. 
 getName () as Lang.String Get a readable name for the content. 
 remove () as Void Remove a waypoint. 
 toIntent () as System.Intent Get a system intent for the content. 
 
 Instance Method Details
 getId() as Lang.Number 
 Get a unique serializable id Returns: Lang.Number — The unique serializable id 
 
 Since: API Level 2.2.0 getName() as Lang.String 
 Get a readable name for the content Returns: Lang.String — The readable name 
 
 Since: API Level 2.2.0 remove() as Void 
 Remove a waypoint Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the given content is not owned by the calling application. 
 
 toIntent() as System.Intent 
 Get a system intent for the content Returns: System.Intent — The System.Intent for the content 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Workout (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedContent/Workout.html)nClass: Toybox.PersistedContent.Workout
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.PersistedContent.Workout 
 
 show all Overview
 A structured custom Workout saved on the device. See Also:
 PersistedContent.getWorkouts() 
 
 Since: API Level 2.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getId () as Lang.Number Get a unique serializable id. 
 getName () as Lang.String Get a readable name for the content. 
 remove () as Void Remove a workout. 
 toIntent () as System.Intent Get a system intent for the content. 
 
 Instance Method Details
 getId() as Lang.Number 
 Get a unique serializable id Returns: Lang.Number — The unique serializable id 
 
 Since: API Level 2.2.0 getName() as Lang.String 
 Get a readable name for the content Returns: Lang.String — The readable name 
 
 Since: API Level 2.2.0 remove() as Void 
 Remove a workout Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if the given content is not owned by the calling application. 
 
 toIntent() as System.Intent 
 Get a system intent for the content Returns: System.Intent — The System.Intent for the content 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [PersistedLocations (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/PersistedLocations.html)nModule: Toybox.PersistedLocations
 Overview
 Persisted locations allows the saving of a location (waypoint) to a device's location list. This feature is only available on devices that support waypoints. This has been deprecated This module may be removed after System 4. See Also:
 Toybox.PersistedContent 
 
 Since: API Level 1.0.2 App Types: Watch App 
 Audio Content Provider 
 
 Supported Devices: [ View devices ] D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 820 / Explore
 Edge® 830
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Requires Permission: PersistedLocations 
 
 Instance Method Summary collapse 
 persistLocation (location as Position.Location , options as { :name as Lang.String or Null } or Null ) as Void deprecated Save a location (waypoint) to the device's location list. 
 
 Instance Method Details
 persistLocation(location as Position.Location , options as { :name as Lang.String or Null } or Null ) as Void 
 This has been deprecated This method may be removed after System 4. Save a location (waypoint) to the device's location list Parameters: location — ( Position.Location ) — Location object to persist 
 options — ( Lang.Dictionary ) — Dictionary of options, or null to accept defaults :name — ( Lang.String ) — Name to assign to the waypoint. If not specified will be auto-named. 
 
 
 
 See Also: PersistedContent.saveWaypoint() 
 
 Since: API Level 1.0.2 Generated Dec 11, 2024, 8:58:43 AM


# [Position (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Position.html)nModule: Toybox.Position
 Overview
 The Position module provides an interface for location information and positioning sensors. This module also provides two sets of constants: GEO: Used to specify the Location formatting. 
 QUALITY: Represents the GPS fix quality when the Location information was calculated 
 
 Example: using Toybox.Position; using Toybox.System; Position.enableLocationEvents(Position.LOCATION_ONE_SHOT, method(:onPosition)); function onPosition(info) { var myLocation = info.position.toDegrees(); System.println("Latitude: " + myLocation[0]); // e.g. 38.856147 System.println("Longitude: " + myLocation[1]); // e.g -94.800953 } Since: API Level 1.0.0 Classes Under Namespace
 Classes: Info , Location Constant Summary
 Constellation
 This has been deprecated This enum may be removed after System 10. Since: API Level 1.0.0 Name Value Since Description See Also 
 CONSTELLATION_GPS 0 API Level 3.2.0 Use the GPS satellite constellation 
 CONSTELLATION_GLONASS 1 API Level 3.2.0 Use the GLONASS satellite constellation 
 CONSTELLATION_GALILEO 2 API Level 3.2.0 Use the GALILEO satellite constellation 
 Configuration
 Configuration values for known GNSS configurations Since: API Level 3.3.6 Name Value Since Description See Also 
 CONFIGURATION_GPS 1 API Level 3.3.6 GPS L1 
 CONFIGURATION_GPS_GLONASS 2 API Level 3.3.6 GPS L1 and GLONASS 
 CONFIGURATION_GPS_GALILEO 3 API Level 3.3.6 GPS L1 and GALILEO L1 
 CONFIGURATION_GPS_BEIDOU 4 API Level 3.3.6 GPS L1 and BEIDOU L1 
 CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1 5 API Level 3.3.6 GPS L1, GLONASS, GALILEO L1, BEIDOU L1 This option is supported by System 6 devices like fenix7 and edge1040 
 CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1_L5 6 API Level 3.3.6 GPS L1, GPS L5, GLONASS, GALILEO L1A, GALILEO L5, BEIDOU L1, BEIDOU L5 Referred to as Multi-GNSS Multi-band on Edge 1040. This option is supported by System 6 devices like fenix7 and edge1040 
 CONFIGURATION_SAT_IQ 255 API Level 3.3.6 AutoGNSS (SatIQ™) 
 CoordinateFormat
 Since: API Level 1.0.0 Name Value Since Description See Also 
 GEO_DEG 0 API Level 1.0.0 The decimal degree format: ddd.dddddd (e.g. 38.278652) Decimal Degrees 
 
 GEO_DM 1 API Level 1.0.0 The degrees/decimal minutes format: dddmm.mmm (e.g 38 27.865') 
 GEO_DMS 2 API Level 1.0.0 degrees/minutes/seconds (DMS) format: ddd mm ss (e.g. 38 27' 8") 
 GEO_MGRS 3 API Level 1.0.0 Military Grid Reference System, or MGRS (e.g. 4QFJ12345678) Military Grid Reference System 
 
 Quality
 Since: API Level 1.0.0 Name Value Since Description See Also 
 QUALITY_NOT_AVAILABLE 0 API Level 1.0.0 GPS is not available 
 QUALITY_LAST_KNOWN 1 API Level 1.0.0 The Location is based on the last known GPS fix. 
 QUALITY_POOR 2 API Level 1.0.0 The Location was calculated with a poor GPS fix. Only a 2-D GPS fix is available, likely due to a limited number of tracked satellites. 
 QUALITY_USABLE 3 API Level 1.0.0 The Location was calculated with a usable GPS fix. A 3-D GPS fix is available, with marginal HDOP (horizontal dilution of precision) Dilution of Precision 
 
 QUALITY_GOOD 4 API Level 1.0.0 The Location was calculated with a good GPS fix. A 3-D GPS fix is available, with good-to-excellent HDOP (horizontal dilution of precision). Dilution of Precision 
 
 LocationAcquisitionType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 LOCATION_ONE_SHOT 0 API Level 1.0.0 Enables a one-time Location acquisition 
 LOCATION_CONTINUOUS 1 API Level 1.0.0 Enables continuous Location tracking 
 LOCATION_DISABLE 2 API Level 1.0.0 Disables Location tracking 
 PositioningMode
 Since: API Level 1.0.0 Name Value Since Description See Also 
 POSITIONING_MODE_NORMAL 0 API Level 3.2.0 Standard positioning mode used by default for fitness activities 
 POSITIONING_MODE_AVIATION 1 API Level 3.2.0 Enable special mode for aviation use-cases that require support for higher altitudes. 
 Instance Method Summary collapse 
 createBoundingBox (locations as Lang.Array &lt; Position.Location &gt;) as [ Position.Location , Position.Location ] or Null Create a bounding box from an array of Location objects. 
 enableLocationEvents (options as { :acquisitionType as Position.LocationAcquisitionType , :constellations as Lang.Array &lt; Position.Constellation &gt;, :configuration as Position.Configuration , :mode as Position.PositioningMode } or Position.LocationAcquisitionType , listener as Null or Lang.Method (loc as Position.Info ) as Void ) as Void Request a Location event. 
 getInfo () as Position.Info Get the current Position.Info . 
 hasConfigurationSupport (config as Position.Configuration ) as Lang.Boolean Determines if the device supports a requested GPS configuration. 
 parse (string as Lang.String , format as Position.CoordinateFormat ) as Position.Location Convert a String to a Location object. 
 
 Instance Method Details
 createBoundingBox(locations as Lang.Array &lt; Position.Location &gt;) as [ Position.Location , Position.Location ] or Null 
 Create a bounding box from an array of Location objects. Parameters: locations — ( Lang.Array ) — Array of Location objects. 
 
 Returns: Lang.Array — Array of Location objects that specify the bounds of the input array or null if the the input array is empty. The first element describes the top left corner, the second describes the bottom right. 
 
 Since: API Level 3.0.3 enableLocationEvents(options as { :acquisitionType as Position.LocationAcquisitionType , :constellations as Lang.Array &lt; Position.Constellation &gt;, :configuration as Position.Configuration , :mode as Position.PositioningMode } or Position.LocationAcquisitionType , listener as Null or Lang.Method (loc as Position.Info ) as Void ) as Void 
 Request a Location event. Using this API requires enabling the Positioning Permission. Only Device Apps and Widgets may use this API. Note: Passing an options Dictionary is only supported with ConnectIQ 3.2.0 and later. Note: Passing the :configuration option is only supported with ConnectIQ 3.3.6 or later. Note: Multitasking: Location events will be disabled when app enters inacitve state, and re-enabled when is active again. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Parameters: options — ( Lang.Number , Lang.Dictionary ) — A LOCATION_* value or Toybox::Lang::Dictionary of options. :acquisitionType — ( Position.LocationAcquisitionType ) — A LOCATION_* enum value indicating the position acquisition type to use. 
 :constellations — ( Lang.Array ) — An array of CONSTELLATION_* enum values specifying what constellations to enable. If not provided, CONSTELLATION_GPS will be used by default. 
 :configuration — ( Position.Configuration ) — A CONFIGURATION_* value specifying what configuration to enable. Only available with ConnectIQ 3.3.6 and later. 
 :mode — ( Position.PositioningMode ) — a POSITIONING_MODE_* value specifying the mode to use. If null POSITIONING_MODE_NORMAL will be used by default. 
 
 
 listener — ( Lang.Method ) — A reference to a listener method: Called when location updates are received 
 Receives a Position.Info object 
 
 
 
 Example: using Toybox.Position; var options = { :acquisitionType =&gt; Position.LOCATION_CONTINUOUS }; if (Position has :POSITIONING_MODE_AVIATION) { options[:mode] = Position.POSITIONING_MODE_AVIATION; } if (Position has :hasConfigurationSupport) { if (Position has :CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1_L5) &amp;&amp; (Position.hasConfigurationSupport(Position.CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1_L5)) { options[:configuration] = Position.CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1_L5; } else if (Position has :CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1) &amp;&amp; (Position.hasConfigurationSupport(Position.CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1)) { options[:configuration] = Position.CONFIGURATION_GPS_GLONASS_GALILEO_BEIDOU_L1; } else if (Position has :CONFIGURATION_GPS) &amp;&amp; (Position.hasConfigurationSupport(Position.CONFIGURATION_GPS)) { options[:configuration] = Position.CONFIGURATION_GPS; } } else if (Position has :CONSTELLATION_GLONASS) { // this can fail with InvalidValueException if combination is not supported by device options[:constellations] = [ Position.CONSTELLATION_GPS, Position.CONSTELLATION_GLONASS ]; } else { options = Position.LOCATION_CONTINUOUS; } // Continuous location updates using selected options Position.enableLocationEvents(options, method(:onPosition)); function onPosition(info) { var myLocation = info.position.toDegrees(); } Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.0.0 Throws: ( Lang.InvalidValueException ) — Thrown if :acquisitionType is invalid, if a specific CONSTELLATION_* value is not supported by a device, or if an invalid combination of constellation values are specified. 
 
 getInfo() as Position.Info 
 Get the current Position.Info . Using this API requires enabling the Positioning Permission. This is useful for retrieving the current position info either on demand or periodically within a Timer . Example: Get position info once per second using Toybox.Position; using Toybox.System; using Toybox.Timer; var dataTimer = new Timer.Timer(); dataTimer.start(method(:timerCallback), 1000, true); // A one-second timer function timerCallback() { var positionInfo = Position.getInfo(); if (positionInfo has :altitude &amp;&amp; positionInfo.altitude != null) { var altitude = positionInfo.altitude; System.println("Altitude: " + altitude); } } Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Position.Info 
 
 Since: API Level 1.0.0 hasConfigurationSupport(config as Position.Configuration ) as Lang.Boolean 
 Determines if the device supports a requested GPS configuration Parameters: config — ( Position.Configuration ) — A CONFIGURATION_* enum value specifying what configuration to enable. Only available with ConnectIQ 3.3.6 and later. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 3.3.6 parse(string as Lang.String , format as Position.CoordinateFormat ) as Position.Location 
 Convert a String to a Location object. The input String must be in one of the four formats described by the Position.GEO_* constants. Parameters: string — ( Lang.String ) — The String to parse 
 format — ( Position.CoordinateFormat ) — A Position.GEO_* value 
 
 Example: using Toybox.Position; using Toybox.System; var locString = "38.856147, -94.800953"; var myLocation = Position.parse(locString, Position.GEO_DEG); System.println(myLocation.toRadians()); // [0.678168, -1.654589] Returns: Position.Location — A Location object representing the position described by the input String 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Info (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Position/Info.html)nClass: Toybox.Position.Info
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Position.Info 
 
 show all Overview
 The Position.Info class contains all of the information provided by the positioning system. Position Info can be retrieved on every call of onUpdate() or it can be obtained on demand. Fields in this class may return null so should be checked for null values prior to use. Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Member Summary collapse 
 accuracy as Position.Quality The positional accuracy. 
 altitude as Lang.Float or Null The elevation above mean sea level in meters (m). 
 heading as Lang.Float or Null The true north referenced heading in radians. 
 position as Position.Location or Null The latitude and longitude of the position. 
 speed as Lang.Float or Null The horizontal speed in meters per second (mps). 
 when as Time.Moment or Null The GPS time stamp of the obtained Location fix. 
 
 Instance Attribute Details
 var accuracy as Position.Quality 
 The positional accuracy. This is given as one of the following values: good, usable, poor, or not available, which corresponds with the Position.QUALITY_* constants. This cannot be null . Since: API Level 1.0.0 Returns: Position.Quality — A Position.QUALITY_* value 
 
 var altitude as Lang.Float or Null 
 The elevation above mean sea level in meters (m). Elevation is obtained from the GPS. If no GPS is present, then no valid elevation will be returned. Since: API Level 1.0.0 See Also: Meters above sea level 
 
 Returns: Lang.Float 
 
 var heading as Lang.Float or Null 
 The true north referenced heading in radians. This provides the direction of travel when moving. If supported by the device, it provides compass orientation when stopped. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var position as Position.Location or Null 
 The latitude and longitude of the position. If no GPS is available or is between GPS fix intervals (typically 1 second), the position is propagated (i.e. dead-reckoned) using the last known heading and last known speed. After a short period of time, the position will cease to be propagated to avoid excessive accumulation of position errors. Since: API Level 1.0.0 Returns: Position.Location 
 
 var speed as Lang.Float or Null 
 The horizontal speed in meters per second (mps). Speed is derived from the most accurate source in the following order: GPS 
 Foot pod 
 Accelerometer 
 Since: API Level 1.0.0 Returns: Lang.Float 
 
 var when as Time.Moment or Null 
 The GPS time stamp of the obtained Location fix. Since: API Level 1.0.0 Returns: Time.Moment 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Location (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Position/Location.html)nClass: Toybox.Position.Location
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Position.Location 
 
 show all Overview
 The Location object represents a specific position. Location objects provide methods for retrieving position coordinates in various formats. Since: API Level 1.0.0 Instance Method Summary collapse 
 getProjectedLocation (angle as Lang.Numeric , distance as Lang.Numeric ) as Position.Location Get a Location object that is offset from the current position by a given distance and angle. 
 initialize (options as { :latitude as Lang.Numeric , :longitude as Lang.Numeric , :format as Lang.Symbol }) Constructor Create a Location based on a set of coordinates. 
 toDegrees () as [ Lang.Double , Lang.Double ] Get a Location object's coordinates in degrees. 
 toGeoString (format as Position.CoordinateFormat ) as Lang.String Get a String representation a Location object's coordinates. 
 toRadians () as [ Lang.Double , Lang.Double ] Get a location object's coordinates in radians. 
 
 Instance Method Details
 getProjectedLocation(angle as Lang.Numeric , distance as Lang.Numeric ) as Position.Location 
 Get a Location object that is offset from the current position by a given distance and angle. Parameters: angle — ( Lang.Float ) — The angle in radians from north. 
 distance — ( Lang.Float ) — The distance from the current position in meters (m). 
 
 Returns: Position.Location — The projected location. 
 
 Since: API Level 3.0.0 initialize(options as { :latitude as Lang.Numeric , :longitude as Lang.Numeric , :format as Lang.Symbol }) 
 Constructor Create a Location based on a set of coordinates. Parameters: options — ( Lang.Array ) — An Array of options :latitude — ( Lang.Number ) — The latitude 
 :longitude — ( Lang.Number ) — The longitude 
 :format — ( Lang.Symbol ) — The format of the provided latitude and longitude as one of three possible values: :degrees 
 :radians 
 :semicircles 
 
 
 
 
 
 Example: using Toybox.Position; var myLocation = new Position.Location( { :latitude =&gt; 38.856147, :longitude =&gt; -94.800953, :format =&gt; :degrees } ); Since: API Level 1.0.0 toDegrees() as [ Lang.Double , Lang.Double ] 
 Get a Location object's coordinates in degrees. Example: using Toybox.Position; using Toybox.System; Position.enableLocationEvents(Position.LOCATION_ONE_SHOT, method(:onPosition)); function onPosition(info) { var myLocation = info.position.toDegrees(); System.println(myLocation[0]); // latitude (e.g. 38.856147) System.println(myLocation[1]); // longitude (e.g -94.800953) } Returns: Lang.Array — An Array containing the latitude and longitude as Doubles in a degree format 
 
 Since: API Level 1.0.0 toGeoString(format as Position.CoordinateFormat ) as Lang.String 
 Get a String representation a Location object's coordinates. Parameters: format — ( Position.CoordinateFormat ) — A Position.GEO_* value 
 
 Example: using Toybox.Position; using Toybox.System; var myLocation = new Position.Location( { :latitude =&gt; 38.856147, :longitude =&gt; -94.800953, :format =&gt; :degrees } ); var locString = myLocation.toGeoString(Position.GEO_DMS); // N 38 51'22.13" W 94 45' 3.44" Returns: Lang.String — A formatted coordinate String in the specified format 
 
 Since: API Level 1.0.0 toRadians() as [ Lang.Double , Lang.Double ] 
 Get a location object's coordinates in radians. Example: using Toybox.Position; using Toybox.System; Position.enableLocationEvents(Position.LOCATION_ONE_SHOT, method(:onPosition)); function onPosition(info) { var myLocation = info.position.toRadians(); System.println(myLocation[0]); // latitude (e.g. 0.678197) System.println(myLocation[1]); // longitude (e.g -1.654588) } Returns: Lang.Array — An Array containing latitude and longitude as Doubles in a radian format 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Sensor (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor.html)nModule: Toybox.Sensor
 Overview
 The Sensor module provides access to sensor data. Sensor allows Apps to register for updates to the current sensor data. It also enables apps to control the ANT+ sensors supported natively by the device, which are described by the provided SENSOR_* constants. Example: Using heart rate sensors to display current heart rate using Toybox.Sensor; function initialize() { Sensor.setEnabledSensors([Sensor.SENSOR_HEARTRATE]); Sensor.enableSensorEvents(method(:onSensor)); } function onSensor(sensorInfo) { System.println("Heart Rate: " + sensorInfo.heartRate); } Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Data Field 
 Widget 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Requires Permission: Sensor 
 
 Classes Under Namespace
 Classes: AccelerometerData , GyroscopeData , HeartRateData , Info , MagnetometerData , SensorData , SensorInfo , SensorInfoIterator , TooManySensorDataListenersException Constant Summary
 RemoteSensorType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SENSOR_BIKESPEED 0 API Level 1.0.0 
 SENSOR_BIKECADENCE 1 API Level 1.0.0 
 SENSOR_BIKEPOWER 2 API Level 1.0.0 
 SENSOR_FOOTPOD 3 API Level 1.0.0 
 SENSOR_HEARTRATE 4 API Level 1.0.0 
 SENSOR_TEMPERATURE 5 API Level 1.0.0 
 OnboardSensorType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SENSOR_PULSE_OXIMETRY 6 API Level 3.2.0 
 SENSOR_ONBOARD_PULSE_OXIMETRY 7 API Level 3.2.0 
 SENSOR_ONBOARD_HEARTRATE 8 API Level 3.2.0 
 SensorTechnology
 The sensor technology Describes the technology used to communicate with the sensor. Since: API Level 3.2.0 Name Value Since Description See Also 
 SENSOR_TECHNOLOGY_ANT 0 API Level 3.2.0 ANT Sensor 
 SENSOR_TECHNOLOGY_BLE 1 API Level 3.2.0 Bluetooth Low Energy Sensor 
 SENSOR_TECHNOLOGY_ONBOARD 2 API Level 3.2.0 Onboard Sensor 
 Typedef Summary collapse 
 SensorType as Sensor.RemoteSensorType or Sensor.OnboardSensorType 
 
 Instance Method Summary collapse 
 disableSensorType (sensorType as Sensor.SensorType ) as Lang.Boolean Disable the given sensor type for use. 
 enableSensorEvents (listener as Null or Lang.Method (info as Sensor.Info ) as Void ) as Void Request sensor events from enabled sensors. 
 enableSensorType (sensorType as Sensor.SensorType ) as Lang.Boolean Enable the given sensor type for use. 
 getInfo () as Sensor.Info Get the current Sensor Sensor.Info . 
 getMaxSampleRate () as Lang.Number Get the maximum sample rate supported by the system. 
 getMaxSampleRateForSensorType (sensorDataType as Lang.Symbol ) as Lang.Number Get the maximum sample rate supported for given sensor data type. 
 getRegisteredSensors (sensorType as Sensor.SensorType or Null ) as Sensor.SensorInfoIterator Retrieve the sensors that are currently registered. 
 registerSensorDataListener (listener as Lang.Method (data as Sensor.SensorData ) as Void , options as { :period as Lang.Number , :accelerometer as { :enabled as Lang.Boolean , :sampleRate as Lang.Number , :includePower as Lang.Boolean , :includePitch as Lang.Boolean , :includeRoll as Lang.Boolean }, :gyroscope as { :enabled as Lang.Boolean , :sampleRate as Lang.Number }, :magnetometer as { :enabled as Lang.Boolean , :sampleRate as Lang.Number }, :heartBeatIntervals as { :enabled as Lang.Boolean } }) as Void Register a callback to fetch high-frequency data from various sensors. 
 setEnabledSensors (sensors as Lang.Array &lt; Sensor.SensorType &gt;) as Lang.Array &lt; Sensor.SensorType &gt; Enable sensors for use. 
 unregisterSensorDataListener () as Void Unregister a previously registered data listener. 
 
 Typedef Details
 SensorType as Sensor.RemoteSensorType or Sensor.OnboardSensorType 
 Since: API Level 1.0.0 Instance Method Details
 disableSensorType(sensorType as Sensor.SensorType ) as Lang.Boolean 
 Disable the given sensor type for use. Unlike the existing setEnabledSensors() function, this will not enable/disable other sensor types. Note: Will cause an app crash if called from a data field app Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 3.2.0 enableSensorEvents(listener as Null or Lang.Method (info as Sensor.Info ) as Void ) as Void 
 Request sensor events from enabled sensors. Sensor events are retrieved from any enabled sensors at a rate of 1 Hz. The data retrieved from enabled sensors is passed to the listener Method provided as a parameter to this method. Note: Will cause an app crash if called from a data field app Parameters: listener — ( Lang.Method ) — A reference to a listener Method: Called when sensor updates are received 
 Receives a Sensor.info object 
 Use null to specify no listener 
 
 
 
 Example: using Toybox.Sensor; // Given an onSensor listener method is defined Sensor.enableSensorEvents(method(:onSensor)); Since: API Level 1.0.0 enableSensorType(sensorType as Sensor.SensorType ) as Lang.Boolean 
 Enable the given sensor type for use. Unlike the existing setEnabledSensors() function, this will not enable/disable other sensor types. Note: Will cause an app crash if called from a data field app Note: Multitasking: Sensor states can not be changed while in inacitve mode and sensor enabled during active mode will be disabled when app becomes inactive, and re-enabled automatically when is active again. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Returns: Lang.Boolean — true on success, otherwise false . 
 
 Since: API Level 3.2.0 getInfo() as Sensor.Info 
 Get the current Sensor Sensor.Info . This is useful for retrieving the current sensor info either on demand or periodically within a Timer . Note: Will cause an app crash if called from a data field app Example: Get accelerometer data once per second using Toybox.Sensor; using Toybox.System; using Toybox.Timer; var dataTimer = new Timer.Timer(); dataTimer.start(method(:timerCallback), 1000, true); // A one-second timer function timerCallback() { var sensorInfo = Sensor.getInfo(); if (sensorInfo has :accel &amp;&amp; sensorInfo.accel != null) { var accel = sensorInfo.accel; var xAccel = accel[0]; var yAccel = accel[1]; System.println("x: " + xAccel + ", y: " + yAccel); } } Returns: Sensor.Info 
 
 See Also: Toybox.Timer.Timer 
 
 Since: API Level 1.0.0 getMaxSampleRate() as Lang.Number 
 Get the maximum sample rate supported by the system. Note: Will cause an app crash if called from a data field app Note: This function can produce different results after the app transitions to the active state after being inactive. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Example: using Toybox.Sensor; var maxSample = Sensor.getMaxSampleRate(); Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Number — The max sample rate as a number 
 
 Since: API Level 2.3.0 getMaxSampleRateForSensorType(sensorDataType as Lang.Symbol ) as Lang.Number 
 Get the maximum sample rate supported for given sensor data type. Note: Will cause an app crash if called from a data field app Note: This function can produce different results after the app transitions to the active state after being inactive. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Parameters: sensorDataType — ( Lang.Symbol ) — Symbol of the sensor data type to get the max rate for, allowed symbols are accelerometer , gyroscope , and magnetometer . 
 
 Example: using Toybox.Sensor; var maxSample = Sensor.getMaxSampleRateForSensorType(:accelerometer); Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: Lang.Number — The max sample rate as a Number 
 
 Since: API Level 3.4.5 getRegisteredSensors(sensorType as Sensor.SensorType or Null ) as Sensor.SensorInfoIterator 
 Retrieve the sensors that are currently registered. This function returns an iterator for the sensors that are considered to be `registered` if pairing information has been provided for it in Sensor settings. Parameters: sensorType — ( Lang.Number , null) — A SENSOR_* value that describes the sensor type to enumerate, or null to get all sensors. 
 
 Returns: Sensor.SensorInfoIterator — An iterator of the sensors that are currently registered. 
 
 Since: API Level 3.2.0 registerSensorDataListener(listener as Lang.Method (data as Sensor.SensorData ) as Void , options as { :period as Lang.Number , :accelerometer as { :enabled as Lang.Boolean , :sampleRate as Lang.Number , :includePower as Lang.Boolean , :includePitch as Lang.Boolean , :includeRoll as Lang.Boolean }, :gyroscope as { :enabled as Lang.Boolean , :sampleRate as Lang.Number }, :magnetometer as { :enabled as Lang.Boolean , :sampleRate as Lang.Number }, :heartBeatIntervals as { :enabled as Lang.Boolean } }) as Void 
 Register a callback to fetch high-frequency data from various sensors. The callback will get invoked each time a new set of sensor data over the length of time specified in the period option is available. Note: Only one data request is allowed to be registered at a time. Subsequent calls to this function for the same sensor type will override previously registered requests. Note: Will cause an app crash if called from a data field app Parameters: listener — ( Lang.Method ) — A method that takes a single SensorData object as a parameter that will contain the requested data. 
 options — ( Lang.Dictionary ) — A Dictionary of options. The allowed values depend on sensor type. :period — ( Lang.Number ) — Period of time to request samples in seconds. Maximum is 4 seconds. 
 :accelerometer — ( Lang.Dictionary ) — Options for accelerometer data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the accelerometer. 
 :sampleRate ( Toybox::Lang::Number ) Samples per second to request in Hz. 
 :includePower ( Toybox::Lang::Boolean ) Valid only when :accelerometer=&gt;:enabled is set to true . Requests that the power Array be computed. 
 :includePitch ( Toybox::Lang::Boolean ) Valid only when :accelerometer=&gt;:enabled is set to true . Requests that the pitch Array be computed. 
 :includeRoll ( Toybox::Lang::Boolean ) Valid only when :accelerometer=&gt;:enabled is set to true . Requests that the roll Array be computed. 
 
 
 :heartBeatIntervals — ( Lang.Dictionary ) — Options for Heart Beat Interval data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch heart beat interval data. 
 
 
 :gyroscope — ( Lang.Dictionary ) — Options for gyroscope data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the gyroscope. 
 :sampleRate ( Toybox::Lang::Number ) Samples per second to request in Hz. 
 
 
 :magnetometer — ( Lang.Dictionary ) — Options for magnetometer data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the magnetometer. 
 :sampleRate ( Toybox::Lang::Number ) Samples per second to request in Hz. 
 
 
 
 
 
 Example: using Toybox.Sensor; // initialize accelerometer var options = { :period =&gt; 1, // 1 second sample time :accelerometer =&gt; { :enabled =&gt; true, // Enable the accelerometer :sampleRate =&gt; 25 // 25 samples }, :heartBeatIntervals =&gt; { :enabled =&gt; true } }; // Using the callback setup in Toybox.SensorHistory.SensorData Sensor.registerSensorDataListener(method(:accelCallback), options); Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 See Also: ActivityRecording.createSession() 
 Toybox.Sensor.SensorData 
 
 Since: API Level 2.3.0 Throws: Toybox::Sensor::TooManySensorDataListenersException Thrown if more than one listener is tried to register for sensor data. 
 Toybox::Lang::InvalidOptionsException Thrown if any required options are excluded, if provided options are out of range, or are of the wrong type. 
 
 setEnabledSensors(sensors as Lang.Array &lt; Sensor.SensorType &gt;) as Lang.Array &lt; Sensor.SensorType &gt; 
 Enable sensors for use. This will enable both connected ANT+ sensors and system sensors if possible. Note: Will cause an app crash if called from a data field app Note: Multitasking: Sensor states can not be changed while in inacitve mode and sensor enabled during active mode will be disabled when app becomes inactive, and re-enabled automatically when is active again. These state changes are denoted by calls to AppBase.onActive() and AppBase.onInactive(). Parameters: sensors — ( Lang.Array ) — The sensors to enable: An Array of SENSOR_* types to enable 
 An empty array ([]) to disable all sensors 
 
 
 
 Example: Enable a heart rate sensor using Toybox.Sensor; Sensor.setEnabledSensors([Sensor.SENSOR_HEARTRATE]); Returns: Lang.Array — An Array of requested sensors that are available 
 
 Since: API Level 1.0.0 unregisterSensorDataListener() as Void 
 Unregister a previously registered data listener. Note: Will cause an app crash if called from a data field app Example: // Assuming use of registerSensorDataListener() example and mSession using Toybox.Sensor; Sensor.unregisterSensorDataListener(); // Unregister Listener mSession.stop(); // Stop Activity Recording Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 See Also: Sensor.registerSensorDataListener() 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [AccelerometerData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/AccelerometerData.html)nClass: Toybox.Sensor.AccelerometerData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.AccelerometerData 
 
 show all Overview
 A class to store accelerometer sample data. Each field specified is an Array of Float or Number values. The values for the x, y, and z axes are in Milli G units. For reference, 1000 Milli G = 1 G. If not null , all fields are of equal size. This is typically used in a callback method used by registerSensorDataListener() See Also:
 Toybox.Sensor.SensorData 
 G-Force Basic Overview 
 
 Since: API Level 2.3.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Member Summary collapse 
 pitch as Lang.Array &lt; Lang.Float &gt; or Null The Array of pitch values as Floats in degrees. 
 power as Lang.Array &lt; Lang.Number &gt; or Null The Array of vector power values as Numbers in millig-units. 
 roll as Lang.Array &lt; Lang.Float &gt; or Null The Array of roll values as Floats in degrees. 
 x as Lang.Array &lt; Lang.Number &gt; The Array of x axis values as Numbers in millig-units. 
 y as Lang.Array &lt; Lang.Number &gt; The Array of y axis values as Numbers in millig-units. 
 z as Lang.Array &lt; Lang.Number &gt; The Array of z axis values as Numbers in millig-units. 
 
 Instance Attribute Details
 var pitch as Lang.Array &lt; Lang.Float &gt; or Null 
 The Array of pitch values as Floats in degrees. Can be null . Pitch values are calculated with the equation atan2(y, sqrt(x^2 + z^2)). Since: API Level 2.3.0 See Also: Tilt Sensing Using a Three-Axis Accelerometer 
 
 Returns: Lang.Array 
 
 var power as Lang.Array &lt; Lang.Number &gt; or Null 
 The Array of vector power values as Numbers in millig-units. Can be null . Since: API Level 2.3.0 Returns: Lang.Array 
 
 var roll as Lang.Array &lt; Lang.Float &gt; or Null 
 The Array of roll values as Floats in degrees. Can be null . Roll values are calculated with the equation atan2(-x, z). Since: API Level 2.3.0 See Also: Tilt Sensing Using a Three-Axis Accelerometer 
 
 Returns: Lang.Array 
 
 var x as Lang.Array &lt; Lang.Number &gt; 
 The Array of x axis values as Numbers in millig-units. Since: API Level 2.3.0 Returns: Lang.Array 
 
 var y as Lang.Array &lt; Lang.Number &gt; 
 The Array of y axis values as Numbers in millig-units. Since: API Level 2.3.0 Returns: Lang.Array 
 
 var z as Lang.Array &lt; Lang.Number &gt; 
 The Array of z axis values as Numbers in millig-units. Since: API Level 2.3.0 Returns: Lang.Array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [GyroscopeData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/GyroscopeData.html)nClass: Toybox.Sensor.GyroscopeData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.GyroscopeData 
 
 show all Overview
 A class to store gyroscope sample data. Each field specified is an Array of Float values. The values for the x, y, and z axes are in deg/sec units. This is typically used in a callback method used by registerSensorDataListener() See Also:
 Toybox.Sensor.SensorData 
 
 Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 x as Lang.Array &lt; Lang.Float &gt; The Array of x axis values as Float in deg/sec. 
 y as Lang.Array &lt; Lang.Float &gt; The Array of y axis values as Float in deg/sec. 
 z as Lang.Array &lt; Lang.Float &gt; The Array of z axis values as Float in deg/sec. 
 
 Instance Attribute Details
 var x as Lang.Array &lt; Lang.Float &gt; 
 The Array of x axis values as Float in deg/sec. Since: API Level 3.3.0 Returns: Lang.Array 
 
 var y as Lang.Array &lt; Lang.Float &gt; 
 The Array of y axis values as Float in deg/sec. Since: API Level 3.3.0 Returns: Lang.Array 
 
 var z as Lang.Array &lt; Lang.Float &gt; 
 The Array of z axis values as Float in deg/sec. Since: API Level 3.3.0 Returns: Lang.Array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [HeartRateData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/HeartRateData.html)nClass: Toybox.Sensor.HeartRateData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.HeartRateData 
 
 show all Overview
 A class to store granular heart rate data. This class provides granular heart rate data like beat-to-beat intervals. This is typically used in a callback method used by registerSensorDataListener() . See Also:
 Toybox.Sensor.Info 
 Toybox.Sensor.SensorData 
 Beat-to-beat interval or "Interbeat interval" 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 heartBeatIntervals as Lang.Array &lt; Lang.Number &gt; The most recent beat-to-beat interval data as an Array of Number objects in milliseconds (ms). 
 
 Instance Attribute Details
 var heartBeatIntervals as Lang.Array &lt; Lang.Number &gt; 
 The most recent beat-to-beat interval data as an Array of Number objects in milliseconds (ms). Since: API Level 3.0.0 Returns: Lang.Array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Info (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/Info.html)nClass: Toybox.Sensor.Info
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.Info 
 
 show all Overview
 The Sensor.Info class contains all of the information provided by enabled sensors. Sensor.Info can be retrieved on every call of onUpdate() or it can be obtained on demand. Fields in this class may return null so should be checked for null values prior to use. Since: API Level 1.0.0 Instance Member Summary collapse 
 accel as Lang.Array &lt; Lang.Number &gt; or Null The accelerometer reading of the x, y, and z axes as an Array of Number values in millig-units. 
 altitude as Lang.Float or Null The altitude above mean sea level in meters (m). 
 cadence as Lang.Number or Null The cadence in revolutions per minute (rpm). 
 heading as Lang.Float or Null The true north referenced heading in radians. 
 heartRate as Lang.Number or Null The heart rate in beats per minute (bpm). 
 mag as Lang.Array &lt; Lang.Number &gt; or Null The magnetometer reading of the x, y, and z axes as an Array of Number values in milliGauss (mG). 
 oxygenSaturation as Lang.Number or Null The current oxygen saturation in percent (%). 
 power as Lang.Number or Null The power in Watts (W). 
 pressure as Lang.Float or Null The barometric pressure in Pascals (Pa). 
 speed as Lang.Float or Null The speed in meters per second (m/s). 
 temperature as Lang.Float or Null The temperature in degrees Celsius (C). 
 
 Instance Attribute Details
 var accel as Lang.Array &lt; Lang.Number &gt; or Null 
 The accelerometer reading of the x, y, and z axes as an Array of Number values in millig-units. Note: Some devices do not enable the accelerometer at startup. To get valid data from this field on such devices, applications must enable the sensor with a call to registerSensorDataListener . Since: API Level 1.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Returns: Lang.Array 
 
 var altitude as Lang.Float or Null 
 The altitude above mean sea level in meters (m). Elevation is derived from the most accurate source: Barometer or GPS in order of descending accuracy. If no GPS is present, then barometer readings will be used. Since: API Level 1.0.0 See Also: Meters above sea level 
 Positional Altitude 
 
 Returns: Lang.Float 
 
 var cadence as Lang.Number or Null 
 The cadence in revolutions per minute (rpm). Cadence is derived from (in order of priority): Bike sensors (cadence or speed must be enabled) 
 Advanced running dynamics sensors (e.g. heart strap with running dynamics enabled) 
 Foot pod 
 Watch-based cadence calculations 
 Since: API Level 1.0.0 Returns: Lang.Number 
 
 var heading as Lang.Float or Null 
 The true north referenced heading in radians. This provides compass orientation if it is supported by the device. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var heartRate as Lang.Number or Null 
 The heart rate in beats per minute (bpm). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var mag as Lang.Array &lt; Lang.Number &gt; or Null 
 The magnetometer reading of the x, y, and z axes as an Array of Number values in milliGauss (mG). Note: Some devices do not enable the magnetometer at startup. To get valid data from this field on such devices, applications must enable the sensor with a call to registerSensorDataListener . Since: API Level 1.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Returns: Lang.Array 
 
 var oxygenSaturation as Lang.Number or Null 
 The current oxygen saturation in percent (%) Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number 
 
 var power as Lang.Number or Null 
 The power in Watts (W). Since: API Level 1.0.0 Returns: Lang.Number 
 
 var pressure as Lang.Float or Null 
 The barometric pressure in Pascals (Pa). This returns barometric pressure calibrated to sea level. Since pressure varies dues to several factors, a GPS-based altitude must first be obtained, then the ambient (local) pressure is measured by the pressure sensor before conversion to a calibrated barometric pressure value. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var speed as Lang.Float or Null 
 The speed in meters per second (m/s). Since: API Level 1.0.0 See Also: Positional Speed 
 
 Returns: Lang.Float 
 
 var temperature as Lang.Float or Null 
 The temperature in degrees Celsius (C). Since: API Level 1.0.0 Returns: Lang.Float 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [MagnetometerData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/MagnetometerData.html)nClass: Toybox.Sensor.MagnetometerData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.MagnetometerData 
 
 show all Overview
 A class to store magnetometerData sample data. Each field specified is an Array of Number values. The values for the x, y, and z axes are in milliGauss (mG) This is typically used in a callback method used by registerSensorDataListener() See Also:
 Toybox.Sensor.SensorData 
 
 Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Member Summary collapse 
 x as Lang.Array &lt; Lang.Number &gt; The Array of x axis values as Numbers in milliGauss. 
 y as Lang.Array &lt; Lang.Number &gt; The Array of y axis values as Numbers in milliGauss. 
 z as Lang.Array &lt; Lang.Number &gt; The Array of z axis values as Numbers in milliGauss. 
 
 Instance Attribute Details
 var x as Lang.Array &lt; Lang.Number &gt; 
 The Array of x axis values as Numbers in milliGauss. Since: API Level 3.3.0 Returns: Lang.Array 
 
 var y as Lang.Array &lt; Lang.Number &gt; 
 The Array of y axis values as Numbers in milliGauss. Since: API Level 3.3.0 Returns: Lang.Array 
 
 var z as Lang.Array &lt; Lang.Number &gt; 
 The Array of z axis values as Numbers in milliGauss. Since: API Level 3.3.0 Returns: Lang.Array 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [SensorData (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/SensorData.html)nClass: Toybox.Sensor.SensorData
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.SensorData 
 
 show all Overview
 A class to encapsulate all high-frequency sensor data that can be retrieved. Example: Setting up an accel data callback using Toybox.Sensor; // Initialize accel data variables var mX = [0] var mY = [0] var mZ = [0] // Callback to receive accel data function accel_callback(sensorData) { mX = sensorData.accelerometerData.x; mY = sensorData.accelerometerData.y; mZ = sensorData.accelerometerData.z; onAccelData(); } // This method can now be used with registerSensorDataListener() Since: API Level 2.3.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Instance Member Summary collapse 
 accelerometerData as Sensor.AccelerometerData or Null An AccelerometerData object. 
 gyroscopeData as Sensor.GyroscopeData or Null An GyroscopeData object. 
 heartRateData as Sensor.HeartRateData or Null A HeartRateData object. 
 magnetometerData as Sensor.MagnetometerData or Null An MagnetometerData object. 
 
 Instance Attribute Details
 var accelerometerData as Sensor.AccelerometerData or Null 
 An AccelerometerData object. Can be null if accelerometer data was not requested. Since: API Level 2.3.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 var gyroscopeData as Sensor.GyroscopeData or Null 
 An GyroscopeData object. Can be null if gyroscope data was not requested. Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Toybox::Sensor::GyroscopeData 
 
 var heartRateData as Sensor.HeartRateData or Null 
 A HeartRateData object. Can be null if heart rate interval data is not available. Example: using Toybox.Sensor; var heartBeatIntervals = []; function heartBeatIntervalsCallback(sensorData) { if (sensorData has :heartRateData &amp;&amp; sensorData.heartRateData != null) { heartBeatIntervals = sensorData.heartRateData.heartBeatIntervals; } } Since: API Level 3.0.0 See Also: Toybox.Sensor.SensorData 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 var magnetometerData as Sensor.MagnetometerData or Null 
 An MagnetometerData object. Can be null if MagnetometerData data was not requested. Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Toybox::Sensor::MagnetometerData 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [SensorInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/SensorInfo.html)nClass: Toybox.Sensor.SensorInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.SensorInfo 
 
 show all Overview
 A class describing a Sensor The SensorInfo provides access to the attributes of a Sensor. Since: API Level 3.2.0 Instance Member Summary collapse 
 data as Lang.Dictionary or Null The Sensor-specific data A dictionary of sensor-specific attributes. 
 enabled as Lang.Boolean The Sensor enabled flag. 
 manufacturerId as Lang.Number The Sensor manufacturer. 
 name as Lang.String The Sensor name. 
 partNumber as Lang.Number The Sensor part number. 
 softwareVersion as Lang.Number The Sensor software version. 
 technology as Sensor.SensorTechnology The Sensor technology The technology used to communicate with this sensor. 
 type as Sensor.SensorType The Sensor type. 
 
 Instance Attribute Details
 var data as Lang.Dictionary or Null 
 The Sensor-specific data A dictionary of sensor-specific attributes. Currently supported attributes include: :bleAddress - The mac address of the BLE sensor (e.g., 01:02:03:04:05:06) as a ByteArray , if available. 
 :antSerialNumber - The 20-bit ANT sensor serial number as a Number 
 
 Since: API Level 3.2.0 Returns: Lang.Dictionary 
 
 var enabled as Lang.Boolean 
 The Sensor enabled flag. An indicator of whether or not the sensor is enabled for pairing. Since: API Level 3.2.0 Returns: Lang.Boolean 
 
 var manufacturerId as Lang.Number 
 The Sensor manufacturer. The manufacturer id of the sensor. May be null . Since: API Level 3.2.0 Returns: Lang.Number 
 
 var name as Lang.String 
 The Sensor name. The name of the sensor. Since: API Level 3.2.0 Returns: Lang.String 
 
 var partNumber as Lang.Number 
 The Sensor part number. The part number the sensor. May be null . Since: API Level 3.2.0 Returns: Lang.Number 
 
 var softwareVersion as Lang.Number 
 The Sensor software version. The software version of the sensor. May be null . Since: API Level 3.2.0 Returns: Lang.Number 
 
 var technology as Sensor.SensorTechnology 
 The Sensor technology The technology used to communicate with this sensor. Since: API Level 3.2.0 Returns: Sensor.SensorTechnology — The sensor type as a Sensor.SENSOR_TECHNOLOGY_* 
 
 var type as Sensor.SensorType 
 The Sensor type. The type of the sensor. Since: API Level 3.2.0 Returns: Sensor.SensorType — The sensor type as a Sensor.SENSOR_* 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [SensorInfoIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/SensorInfoIterator.html)nClass: Toybox.Sensor.SensorInfoIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Sensor.SensorInfoIterator 
 
 show all Overview
 A class encapsulating a collection of Sensors The SensorIterator describes a collection of SensorInfo objects that describe actual sensors. Such an iterator is retrieved using the appropriate "get*Sensors' methods found in Sensor at the module level. Example: Gets a SensorIterator object for all registered external heart rate sensors on the device using Toybox.Sensor; function getHeartRateSensorIterator() { if (Sensor has :getRegisteredSensors) { return Sensor.getRegisteredSensors(Sensor.SENSOR_HEARTRATE); } return null; } Since: API Level 3.2.0 Instance Method Summary collapse 
 next () as Sensor.SensorInfo or Null Get the current SensorInfo and advance. 
 
 Instance Method Details
 next() as Sensor.SensorInfo or Null 
 Get the current SensorInfo and advance. Get the current SensorInfo and advance self to refer to the next. Returns: SensorInfo 
 
 Since: API Level 3.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [TooManySensorDataListenersException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Sensor/TooManySensorDataListenersException.html)nClass: Toybox.Sensor.TooManySensorDataListenersException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Sensor.TooManySensorDataListenersException 
 
 show all Overview
 This exception indicates more than one listener is tried to register for sensor data. Since: API Level 2.3.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [SensorHistory (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorHistory.html)nModule: Toybox.SensorHistory
 Overview
 The SensorHistory module contains the interface for SensorHistory. SensorHistory provides access to historical information recorded by the on-board sensors of device hardware. The amount of information that is available is device dependent. This means that one device may provide more information than another. This class provides an ORDER_* enum which is used to select the data order of the sample iterator. Since: API Level 2.1.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Requires Permission: SensorHistory 
 
 Classes Under Namespace
 Classes: SensorHistoryIterator , SensorSample Constant Summary
 Order
 Since: API Level 2.1.0 Name Value Since Description See Also 
 ORDER_NEWEST_FIRST 0 API Level 2.1.0 Request iterator with newest data first 
 ORDER_OLDEST_FIRST 1 API Level 2.1.0 Request iterator with oldest data first 
 Instance Method Summary collapse 
 getBodyBatteryHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get the body battery history for the given period. 
 getElevationHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get the elevation history for the given period, up to the last power cycle. 
 getHeartRateHistory (options as { :period as Lang.Number or Time.Duration , :order as SensorHistory.Order or Null } or Null ) as SensorHistory.SensorHistoryIterator Get the heart rate history for the given period, up to the last power cycle. 
 getOxygenSaturationHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get the oxygen saturation history for the given period This function always returns the most recent sensor history samples. 
 getPressureHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get the pressure history for the given period, up to the last power cycle. 
 getStressHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get stress history data for the given period This function always returns the most recent sensor history samples. 
 getTemperatureHistory (options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator Get the temperature history for the given period, up to the last power cycle. 
 
 Instance Method Details
 getBodyBatteryHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the body battery history for the given period. This function always returns the most recent sensor history samples. The time between each `SensorSample` in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples: If null , the samples will be ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Shows the use of BodyBatteryIterator using Toybox.SensorHistory; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getBodyBatteryHistory)) { // Set up the method with parameters return Toybox.SensorHistory.getBodyBatteryHistory({}); } return null; } // get the body battery iterator object var bbIterator = getIterator(); var sample = bbIterator.next(); // get the body battery data while (sample != null) { System.println("Sample: " + sample.data); // print the current sample sample = bbIterator.next(); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the body battery history for the given period. Samples returned by this iterator are ranges from 0-100. A 0 indicates that the body is drained and a 100 indicates the body is rested and charged. 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 3.3.0 getElevationHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the elevation history for the given period, up to the last power cycle. This function always returns the most recent pressure samples. The time between each SensorSample in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples: If null , the samples will be ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Gets a SensoryHistoryIterator and prints out the elevation value from the most recent SensorSample using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getElevationHistory)) { return Toybox.SensorHistory.getElevationHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in // this case so the entire available history is returned with the // newest samples returned first. var sensorIter = getIterator(); // Print out the next entry in the iterator if (sensorIter != null) { System.println(sensorIter.next().data); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 130 Plus
 Edge® 130
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the elevation history for the given period. Samples returned by this iterator are in meters (m). 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 2.1.0 getHeartRateHistory(options as { :period as Lang.Number or Time.Duration , :order as SensorHistory.Order or Null } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the heart rate history for the given period, up to the last power cycle. This function always returns the most recent heart rate samples. The time between each SensorSample in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples: If null , the samples will be listed ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Gets a SensoryHistoryIterator and prints out the heart rate value from the most recent SensorSample using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getHeartRateHistory)) { return Toybox.SensorHistory.getHeartRateHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in // this case so the entire available history is returned with the // newest samples returned first. var sensorIter = getIterator(); // Print out the next entry in the iterator if (sensorIter != null) { System.println(sensorIter.next().data); } Returns: SensorHistory.SensorHistoryIterator — An iterator for the heart rate history for the given period. Samples returned by this iterator are in beats per minute (bpm). 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 2.1.0 getOxygenSaturationHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the oxygen saturation history for the given period This function always returns the most recent sensor history samples. The time between each `SensorSample` in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples: If null , the samples will be ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Gets a SensoryHistoryIterator and prints out the Muscle Oxygen Saturation value from the most recent SensorSample using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getOxygenSaturationHistory)) { // Set up the method with parameters return Toybox.SensorHistory.getOxygenSaturationHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in // this case so the entire available history is returned with the // newest samples returned first. var sensorIter = getIterator(); // Print out the next entry in the iterator if (sensorIter != null) { System.println(sensorIter.next().data); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the oxygen saturation history for the given period. Samples returned by this iterator are in percent (%). 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 3.2.0 getPressureHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the pressure history for the given period, up to the last power cycle. This function always returns the most recent pressure samples. The time between each SensorSample in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples. If period is null , the entire available history is retrieved 
 If period is a Duration , then the history for the given Duration is retrieved 
 If period is a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples. If order is null , the samples will be ORDER_NEWEST_FIRST 
 Use the ORDER enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Gets a SensoryHistoryIterator and prints out the pressure value from the most recent SensorSample using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getPressureHistory)) { return Toybox.SensorHistory.getPressureHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in // this case so the entire available history is returned with the // newest samples returned first. var sensorIter = getIterator(); // Print out the next entry in the iterator if (sensorIter != null) { System.println(sensorIter.next().data); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the pressure history for the given period. Samples returned by this iterator are in Pascals (Pa). 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 2.1.0 getStressHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get stress history data for the given period This function always returns the most recent sensor history samples. The time between each `SensorSample` in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples: If null , the samples will be ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Shows the use of StressHistoryIterator using Toybox.ActivityMonitor; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getStressHistory)) { // Set up the method with parameters return Toybox.SensorHistory.getStressHistory({}); } return null; } // get stress history iterator object var stressIterator = getIterator(); var sample = stressIterator.next(); // get the stress data while (sample != null) { System.println("Sample: " + sample.data); // print the current sample sample = stressIterator.next(); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the stress history for the given period. Samples returned by this iterator are ranges from 0-100. Higher value indicate higher stress and lower value indicate lower stress. and a 100 indicates the body is rested and charged. 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 3.3.0 getTemperatureHistory(options as { :period as Lang.Number or Time.Duration or Null , :order as SensorHistory.Order } or Null ) as SensorHistory.SensorHistoryIterator 
 Get the temperature history for the given period, up to the last power cycle. This function always returns the most recent temperature samples. The time between each SensorSample in the iterator may be device dependent. Parameters: options — ( Lang.Dictionary ) — Dictionary of options. Can be null . :period — ( Lang.Number , Time.Duration ) — The period of time from which to retrieve the samples: If null , the entire available history is retrieved 
 If a Duration , then the history for the given Duration is retrieved 
 If a Number , then the last specified Number of entries are retrieved 
 
 
 :order — ( Lang.Boolean ) — The order in which to retrieve the samples. If null , the samples will be listed ORDER_NEWEST_FIRST 
 Use the ORDER_* enumeration to explicitly select ORDER_NEWEST_FIRST or ORDER_OLDEST_FIRST 
 
 
 
 
 
 Example: Gets a SensoryHistoryIterator and prints out the temperature value from the most recent SensorSample using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getTemperatureHistory)) { // Set up the method with parameters return Toybox.SensorHistory.getTemperatureHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in // this case so the entire available history is returned with the // newest samples returned first. var sensorIter = getIterator(); // Print out the next entry in the iterator if (sensorIter != null) { System.println(sensorIter.next().data); } Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® HR
 
 Returns: SensorHistory.SensorHistoryIterator — An iterator for the temperature history for the given period. Samples returned by this iterator are in degrees Celsius (C). 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [SensorHistoryIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorHistory/SensorHistoryIterator.html)nClass: Toybox.SensorHistory.SensorHistoryIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.SensorHistory.SensorHistoryIterator 
 
 show all Overview
 A class containing sensor data for a given period of time. The SensorHistoryIterator describes a sequence of SensorSample objects. The iterator is retrieved using the appropriate "get" methods found in SensorHistory at the module level. This class provides the methods needed to retrieve information from each of the SensorSample objects included in the iterator. See Also:
 SensorHistory.getHeartRateHistory() 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 
 Example: Gets a SensorHistoryIterator object to be used with the below methods using Toybox.SensorHistory; using Toybox.Lang; using Toybox.System; // Create a method to get the SensorHistoryIterator object function getIterator() { // Check device for SensorHistory compatibility if ((Toybox has :SensorHistory) &amp;&amp; (Toybox.SensorHistory has :getHeartRateHistory)) { return Toybox.SensorHistory.getHeartRateHistory({}); } return null; } // Store the iterator info in a variable. The options are 'null' in this // case so the entire available history is returned with the newest // samples returned first. var sensorIter = getIterator(); Since: API Level 2.1.0 Instance Method Summary collapse 
 getMax () as Lang.Number or Lang.Float or Null Get the maximum SensorSample data value contained in this iterator. 
 getMin () as Lang.Number or Lang.Float or Null Get the minimum SensorSample data value contained in this iterator. 
 getNewestSampleTime () as Time.Moment or Null Get the Moment of the newest SensorSample in this iterator. 
 getOldestSampleTime () as Time.Moment or Null Get the Moment of the oldest SensorSample in this iterator. 
 next () as SensorHistory.SensorSample or Null Get the next SensorSample entry in the iterator. 
 
 Instance Method Details
 getMax() as Lang.Number or Lang.Float or Null 
 Get the maximum SensorSample data value contained in this iterator. Example: Print out the maximum SensorSample data value using Toybox.SensorHistory; using Toybox.System; // Given a valid SensorHistoryIterator object, print out the // maximum sample value entry in the iterator System.println(sensorIter.getMax().data); Returns: Lang.Number — The maximum SensorSample data value in this iterator 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 
 Since: API Level 2.1.0 getMin() as Lang.Number or Lang.Float or Null 
 Get the minimum SensorSample data value contained in this iterator. Example: Print out the minimum SensorSample data value using Toybox.SensorHistory; using Toybox.System; // Given a valid SensorHistoryIterator object, print out the // minimum sample value entry in the iterator System.println(sensorIter.getMin().data); Returns: Lang.Number — The minimum SensorSample data value in this iterator 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 
 Since: API Level 2.1.0 getNewestSampleTime() as Time.Moment or Null 
 Get the Moment of the newest SensorSample in this iterator. Example: Print out the Moment of the newest SensorSample using Toybox.SensorHistory; using Toybox.System; // Given a valid SensorHistoryIterator object, print out the Moment // of the newest sample entry in the iterator System.println(sensorIter.getNewestSampleTime()); Returns: Time.Moment — The Moment of the newest SensorSample in this iterator 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 Toybox.Time.Moment 
 
 Since: API Level 2.1.0 getOldestSampleTime() as Time.Moment or Null 
 Get the Moment of the oldest SensorSample in this iterator. Example: Print out the Moment of the oldest SensorSample using Toybox.SensorHistory; using Toybox.System; // Given a valid SensorHistoryIterator object, print out the Moment // of the oldest sample entry in the iterator System.println(sensorIter.getOldestSampleTime()); Returns: Time.Moment — The Moment of the oldest SensorSample in this iterator 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 Toybox.Lang.Method 
 Toybox.Time.Moment 
 
 Since: API Level 2.1.0 next() as SensorHistory.SensorSample or Null 
 Get the next SensorSample entry in the iterator. This must be called to get the initial data from the iterator. Example: Print out the next SensorSample data value using Toybox.SensorHistory; using Toybox.System; // Given a valid SensorHistoryIterator object, print out the next // entry in the iterator System.println(sensorIter.next().data); Returns: SensorHistory.SensorSample — The next SensorHistorySample, or null if there are no more samples 
 
 See Also: Toybox.SensorHistory.SensorHistoryIterator 
 Toybox.SensorHistory.SensorSample 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [SensorSample (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorHistory/SensorSample.html)nClass: Toybox.SensorHistory.SensorSample
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.SensorHistory.SensorSample 
 
 show all Overview
 A class containing sensor data at a given time. Since: API Level 2.1.0 Instance Member Summary collapse 
 data as Lang.Number or Lang.Float or Null The Sensor sample. 
 when as Time.Moment The time of the Sensor sample. 
 
 Instance Attribute Details
 var data as Lang.Number or Lang.Float or Null 
 The Sensor sample. Since: API Level 2.1.0 Returns: Lang.Number , Lang.Float 
 
 var when as Time.Moment 
 The time of the Sensor sample. Since: API Level 2.1.0 Returns: Time.Moment 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [SensorLogging (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorLogging.html)nModule: Toybox.SensorLogging
 Overview
 The SensorLogging module contains the interface for logging sensor data. Since: API Level 2.3.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Data Field 
 
 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 
 Requires Permission: SensorLogging 
 
 Classes Under Namespace
 Classes: SensorLogger , SensorLoggingStats Generated Dec 11, 2024, 8:58:43 AM


# [SensorLogger (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorLogging/SensorLogger.html)nClass: Toybox.SensorLogging.SensorLogger
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.SensorLogging.SensorLogger 
 
 show all Overview
 Class for the SensorLogger object. This object gets passed to FIT session to start recording sensor data. Since: API Level 2.3.0 Instance Method Summary collapse 
 getStats () as SensorLogging.SensorLoggingStats or Null Get statistics for the data gathered in the current session. 
 getStats2 (sensor as Lang.Symbol or Null ) as SensorLogging.SensorLoggingStats or { :accelerometer as SensorLogging.SensorLoggingStats , :gyroscope as SensorLogging.SensorLoggingStats , :magnetometer as SensorLogging.SensorLoggingStats } Get statistics for the sensor data gathered in the current session. 
 initialize (options as { :accelerometer as { :enabled as Lang.Boolean }, :gyroscope as { :enabled as Lang.Boolean }, :magnetometer as { :enabled as Lang.Boolean } }) Constructor. 
 
 Instance Method Details
 getStats() as SensorLogging.SensorLoggingStats or Null 
 Get statistics for the data gathered in the current session. Returns: SensorLogging.SensorLoggingStats — Returns a SensorLoggingStats object. 
 
 Since: API Level 2.3.0 getStats2(sensor as Lang.Symbol or Null ) as SensorLogging.SensorLoggingStats or { :accelerometer as SensorLogging.SensorLoggingStats , :gyroscope as SensorLogging.SensorLoggingStats , :magnetometer as SensorLogging.SensorLoggingStats } 
 Get statistics for the sensor data gathered in the current session. Parameters: sensor — Symbol for the sensor type to get the logging stats for or null to get stats about all the enabled sensors. 
 
 Returns: SensorLogging.SensorLoggingStats , Lang.Dictionary — Returns a SensorLoggingStats for the requested sensor type or the Toybox::Lang::Dictionary with stats of all the enabled sensors if null is passed. 
 
 Since: API Level 3.3.0 Throws: Toybox::Lang::InvalidValueException Thrown if provided argument are out of range or are of the wrong type. 
 
 initialize(options as { :accelerometer as { :enabled as Lang.Boolean }, :gyroscope as { :enabled as Lang.Boolean }, :magnetometer as { :enabled as Lang.Boolean } }) 
 Constructor Note: A SensorLogger may be initialized with the same dictionary of options provided to registerSensorDataListener() , but only the options documented below will be used. Parameters: options — ( Lang.Dictionary ) — A Dictionary of logging options :accelerometer — ( Lang.Dictionary ) — Options for accelerometer data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the accelerometer. 
 
 
 :gyroscope — ( Lang.Dictionary ) — Options for gyroscope data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the gyroscope. 
 
 
 :magnetometer — ( Lang.Dictionary ) — Options for magnetometer data. :enabled ( Toybox::Lang::Boolean ) Set to true to fetch data from the magnetometer. 
 
 
 
 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [SensorLoggingStats (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/SensorLogging/SensorLoggingStats.html)nClass: Toybox.SensorLogging.SensorLoggingStats
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.SensorLogging.SensorLoggingStats 
 
 show all Overview
 Class for the sensor logging status. Since: API Level 2.3.0 Instance Member Summary collapse 
 sampleCount as Lang.Number The total number of logged samples. 
 samplePeriod as Lang.Number The total number of seconds of logged data. 
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Attribute Details
 var sampleCount as Lang.Number 
 The total number of logged samples Since: API Level 2.3.0 Returns: Lang.Number 
 
 var samplePeriod as Lang.Number 
 The total number of seconds of logged data Since: API Level 2.3.0 Returns: Lang.Number 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [StringUtil (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/StringUtil.html)nModule: Toybox.StringUtil
 Overview
 The StringUtil module contains String utility functions Since: API Level 1.3.0 Classes Under Namespace
 Classes: InvalidHexStringException Constant Summary
 CharacterEncoding
 Since: API Level 1.3.0 Name Value Since Description See Also 
 CHAR_ENCODING_UTF8 0 API Level 3.0.0 
 Representation
 Since: API Level 1.3.0 Name Value Since Description See Also 
 REPRESENTATION_STRING_BASE64 0 API Level 3.0.0 
 REPRESENTATION_STRING_HEX 1 API Level 3.0.0 
 REPRESENTATION_STRING_PLAIN_TEXT 2 API Level 3.0.0 
 REPRESENTATION_BYTE_ARRAY 3 API Level 3.0.0 
 Instance Method Summary collapse 
 charArrayToString (charArray as Lang.Array &lt; Lang.Char &gt;) as Lang.String Given an Array of Char objects, return the String equivalent. 
 convertEncodedString (input as Lang.String or Lang.ByteArray , options as { :fromRepresentation as StringUtil.Representation , :toRepresentation as StringUtil.Representation , :encoding as StringUtil.CharacterEncoding }) as Lang.String or Lang.ByteArray Convert a String or ByteArray representation to a String or ByteArray representation whose underlying byte format corresponds to the provided input options. 
 encodeBase64 (string as Lang.String ) as Lang.String Encodes a String in base64. 
 utf8ArrayToString (utf8Array as Lang.Array &lt; Lang.Number &gt;) as Lang.String Given an Array of UTF-8 bytes, return the String equivalent. 
 
 Instance Method Details
 charArrayToString(charArray as Lang.Array &lt; Lang.Char &gt;) as Lang.String 
 Given an Array of Char objects, return the String equivalent Parameters: charArray — ( Lang.Array ) — An Array of Char objects 
 
 Returns: Lang.String — The String representation of the input Array 
 
 Since: API Level 1.3.0 convertEncodedString(input as Lang.String or Lang.ByteArray , options as { :fromRepresentation as StringUtil.Representation , :toRepresentation as StringUtil.Representation , :encoding as StringUtil.CharacterEncoding }) as Lang.String or Lang.ByteArray 
 Convert a String or ByteArray representation to a String or ByteArray representation whose underlying byte format corresponds to the provided input options. Parameters: input — ( Lang.String , Lang.ByteArray ) — Input that needs to be converted. 
 options — ( Lang.Dictionary ) :fromRepresentation — ( StringUtil.Representation ) — Required. A REPRESENTATION_* enum value indicating the representation from which the input should be converted. 
 :toRepresentation — ( StringUtil.Representation ) — Required. A REPRESENTATION_* enum value indicating the representation to which the input should be converted. 
 :encoding — ( StringUtil.CharacterEncoding ) — A CHAR_ENCODING_* value indicating the String encoding to use when generating a hex string or ByteArray when either the fromRepresentation or toRepresentation is set to REPRESENTATION_STRING_PLAIN_TEXT. Defaults to CHAR_ENCODING_UTF8 if not specified. 
 
 
 
 Returns: Lang.String , Lang.ByteArray — The converted String or ByteArray based on the provided options 
 
 Since: API Level 3.0.0 Throws: ( Lang.InvalidOptionsException ) — Thrown if a required option is not set with a valid enumeration value. 
 
 encodeBase64(string as Lang.String ) as Lang.String 
 Encodes a String in base64 Parameters: string — ( Lang.String ) — The string to encode 
 
 Returns: Lang.String — A base64 encoded String 
 
 Since: API Level 1.3.0 utf8ArrayToString(utf8Array as Lang.Array &lt; Lang.Number &gt;) as Lang.String 
 Given an Array of UTF-8 bytes, return the String equivalent Parameters: utf8Array — ( Lang.Array ) — An Array of UTF-8 bytes 
 
 Returns: Lang.String — The String representation of the input Array 
 
 Since: API Level 1.3.0 Throws: ( Lang.InvalidValueException ) — Thrown if a the provided bytes contain an invalid UTF-8 sequence. 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [InvalidHexStringException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/StringUtil/InvalidHexStringException.html)nClass: Toybox.StringUtil.InvalidHexStringException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.StringUtil.InvalidHexStringException 
 
 show all Overview
 Thrown if an invalid hex string is provided. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [System (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System.html)nModule: Toybox.System
 Overview
 The System module provides basic system information, including access to the clock time, device settings, battery level, and memory use. Since: API Level 1.0.0 Classes Under Namespace
 Classes: AppNotInstalledException , ClockTime , ConnectionInfo , DeviceSettings , Intent , PreviousOperationNotCompleteException , ServiceDelegate , Stats , UnexpectedAppTypeException Constant Summary
 UnitsSystem
 Since: API Level 1.0.0 Name Value Since Description See Also 
 UNIT_METRIC 0 API Level 1.0.0 Display units in metric units 
 UNIT_STATUTE 1 API Level 1.0.0 Display units in statute units 
 ScreenShape
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SCREEN_SHAPE_ROUND 1 API Level 1.2.0 
 SCREEN_SHAPE_SEMI_ROUND 2 API Level 1.2.0 
 SCREEN_SHAPE_RECTANGLE 3 API Level 1.2.0 
 SCREEN_SHAPE_SEMI_OCTAGON 4 API Level 3.3.0 
 ButtonInputs
 Since: API Level 1.0.0 Name Value Since Description See Also 
 BUTTON_INPUT_SELECT 0x00000001 API Level 1.2.0 
 BUTTON_INPUT_UP 0x00000002 API Level 1.2.0 
 BUTTON_INPUT_DOWN 0x00000004 API Level 1.2.0 
 BUTTON_INPUT_MENU 0x00000008 API Level 1.2.0 
 BUTTON_INPUT_CLOCK 0x00000010 API Level 3.1.0 
 BUTTON_INPUT_DOWN_LEFT 0x00000020 API Level 3.1.0 
 BUTTON_INPUT_DOWN_RIGHT 0x00000040 API Level 3.1.0 
 BUTTON_INPUT_ESC 0x00000080 API Level 3.1.0 
 BUTTON_INPUT_FIND 0x00000100 API Level 3.1.0 
 BUTTON_INPUT_LAP 0x00000200 API Level 3.1.0 
 BUTTON_INPUT_LEFT 0x00000400 API Level 3.1.0 
 BUTTON_INPUT_LIGHT 0x00000800 API Level 3.1.0 
 BUTTON_INPUT_MODE 0x00001000 API Level 3.1.0 
 BUTTON_INPUT_PAGE 0x00002000 API Level 3.1.0 
 BUTTON_INPUT_POWER 0x00004000 API Level 3.1.0 
 BUTTON_INPUT_RESET 0x00008000 API Level 3.1.0 
 BUTTON_INPUT_RIGHT 0x00010000 API Level 3.1.0 
 BUTTON_INPUT_SPORT 0x00020000 API Level 3.1.0 
 BUTTON_INPUT_START 0x00040000 API Level 3.1.0 
 BUTTON_INPUT_UP_LEFT 0x00080000 API Level 3.1.0 
 BUTTON_INPUT_UP_RIGHT 0x00100000 API Level 3.1.0 
 BUTTON_INPUT_ZIN 0x00200000 API Level 3.1.0 
 BUTTON_INPUT_ZOUT 0x00400000 API Level 3.1.0 
 ConnectionState
 Since: API Level 1.0.0 Name Value Since Description See Also 
 CONNECTION_STATE_NOT_INITIALIZED 0 API Level 3.0.0 Indicates that the connection is not setup or is inactive. 
 CONNECTION_STATE_NOT_CONNECTED 1 API Level 3.0.0 Indicates that the connection has been setup but is not in range. 
 CONNECTION_STATE_CONNECTED 2 API Level 3.0.0 Indicates that the connection is available for use. 
 Language
 Since: API Level 1.0.0 Name Value Since Description See Also 
 LANGUAGE_ARA 8389920 API Level 3.1.0 Arabic 
 LANGUAGE_BUL 8389921 API Level 3.1.0 Bulgarian 
 LANGUAGE_CES 8389352 API Level 3.1.0 Czech 
 LANGUAGE_CHS 8389372 API Level 3.1.0 Chinese (Simplified) 
 LANGUAGE_CHT 8389371 API Level 3.1.0 Chinese (Traditional) 
 LANGUAGE_DAN 8389353 API Level 3.1.0 Danish 
 LANGUAGE_DEU 8389358 API Level 3.1.0 German 
 LANGUAGE_DUT 8389354 API Level 3.1.0 Dutch 
 LANGUAGE_ENG 8389355 API Level 3.1.0 English 
 LANGUAGE_EST 8390796 API Level 3.1.0 Estonian 
 LANGUAGE_FIN 8389356 API Level 3.1.0 Finnish 
 LANGUAGE_FRE 8389357 API Level 3.1.0 French 
 LANGUAGE_GRE 8389359 API Level 3.1.0 Greek 
 LANGUAGE_HEB 8389919 API Level 3.1.0 Hebrew 
 LANGUAGE_HRV 8389361 API Level 3.1.0 Croatian 
 LANGUAGE_HUN 8389360 API Level 3.1.0 Hungarian 
 LANGUAGE_IND 8389578 API Level 3.1.0 Bahasa Indonesia 
 LANGUAGE_ITA 8389362 API Level 3.1.0 Italian 
 LANGUAGE_JPN 8389373 API Level 3.1.0 Japanese 
 LANGUAGE_KOR 8389696 API Level 3.1.0 Korean 
 LANGUAGE_LAV 8390797 API Level 3.1.0 Latvian 
 LANGUAGE_LIT 8390798 API Level 3.1.0 Lithuanian 
 LANGUAGE_NOB 8389363 API Level 3.1.0 Norwegian 
 LANGUAGE_POL 8389364 API Level 3.1.0 Polish 
 LANGUAGE_POR 8389365 API Level 3.1.0 Portuguese 
 LANGUAGE_RON 8390799 API Level 3.1.0 Romanian 
 LANGUAGE_RUS 8389366 API Level 3.1.0 Russian 
 LANGUAGE_SLO 8389367 API Level 3.1.0 Slovak 
 LANGUAGE_SLV 8389368 API Level 3.1.0 Slovenian 
 LANGUAGE_SPA 8389369 API Level 3.1.0 Spanish 
 LANGUAGE_SWE 8389370 API Level 3.1.0 Swedish 
 LANGUAGE_THA 8389548 API Level 3.1.0 Thai 
 LANGUAGE_TUR 8389774 API Level 3.1.0 Turkish 
 LANGUAGE_UKR 8390800 API Level 3.1.0 Ukrainian 
 LANGUAGE_VIE 8390206 API Level 3.1.0 Vietnamese 
 LANGUAGE_ZSM 8389579 API Level 3.1.0 Standard (Bahasa) Malay 
 DisplayMode
 Enum class for display mode Since: API Level 5.0.0 Name Value Since Description See Also 
 DISPLAY_MODE_HIGH_POWER 0 API Level 5.0.0 Display in high power mode. View.onUpdate are not subject to burn-in protection. 
 DISPLAY_MODE_LOW_POWER 1 API Level 5.0.0 Display in low power mode, including watch face always-on mode. View.onUpdate subject to burn-in protection. 
 DISPLAY_MODE_OFF 2 API Level 5.0.0 Display is off. 
 Instance Method Summary collapse 
 error (msg as Lang.String ) as Void Write an error to the console and exit the system. 
 exit () as Void End execution of the current app. 
 exitTo (intent as System.Intent ) as Void Exit the current app and launch a new app. 
 getClockTime () as System.ClockTime Get the current clock time. 
 getDeviceSettings () as System.DeviceSettings Get the current device settings. 
 getDisplayMode () as System.DisplayMode Get the current display mode, only available in devices with AMOLED or LCD screens. 
 getSystemStats () as System.Stats Get the current system stats. 
 getTimer () as Lang.Number Get the current millisecond timer value. 
 isAppInstalled (uri as Lang.String ) as Lang.Boolean Check the installation status of an app. 
 print (output as Lang.Object or Null ) as Void Print to the console. 
 println (output as Lang.Object or Null ) as Void Print to the console with a line terminator. 
 
 Instance Method Details
 error(msg as Lang.String ) as Void 
 Write an error to the console and exit the system. Note: There are never really too many bananas. Parameters: msg — ( Lang.String ) — The error message to output 
 
 Example: using Toybox.System; const MAX_BANANAS = 8; var bananasInBunch = 10; if (bananasInBunch &gt; MAX_BANANAS) { System.error("Too many bananas!") } Since: API Level 1.0.0 exit() as Void 
 End execution of the current app. This will exit the system cleanly from any point within an app. Since: API Level 1.0.0 exitTo(intent as System.Intent ) as Void 
 Exit the current app and launch a new app. This may only be called by watch-apps and widgets, and may only target watch-apps (both native activities and Connect IQ apps) and widgets. This is an asynchronous request that presents a confirmation dialog to launch the Intent. If confirmed, the current app will exit. Otherwise, the app will continue to run without exiting. Parameters: intent — ( System.Intent ) — The Intent to trigger 
 
 Example: using Toybox.System; var targetApp = new System.Intent( "manifest-id://12345678-1234-1234-1234-123412341234", {"arg"=&gt;"CurrentAppName"} ); System.exitTo(targetApp); See Also: Toybox.System.Intent 
 
 Since: API Level 2.2.0 Throws: ( System.UnexpectedAppTypeException ) — Indicates the intended application is not a device app or widget 
 ( System.AppNotInstalledException ) — Indicates the intended application is not installed 
 ( System.PreviousOperationNotCompleteException ) — Indicates exitTo() is called a second time before the initial call completes 
 
 getClockTime() as System.ClockTime 
 Get the current clock time. Returns: System.ClockTime 
 
 Since: API Level 1.0.0 getDeviceSettings() as System.DeviceSettings 
 Get the current device settings. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); Returns: System.DeviceSettings 
 
 Since: API Level 1.0.0 getDisplayMode() as System.DisplayMode 
 Get the current display mode, only available in devices with AMOLED or LCD screens. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 965
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 5.0.0 getSystemStats() as System.Stats 
 Get the current system stats. Example: using Toybox.System; var myStats = System.getSystemStats(); Returns: System.Stats 
 
 Since: API Level 1.0.0 getTimer() as Lang.Number 
 Get the current millisecond timer value. Note: The returned value typically starts at zero on device boot and will roll over periodically. Assuming the timer starts at zero, this will happen ~25 days after a reboot, and every ~50 days thereafter. Returns: Lang.Number 
 
 Since: API Level 1.0.0 isAppInstalled(uri as Lang.String ) as Lang.Boolean 
 Check the installation status of an app. Parameters: uri — ( Lang.String ) — The URI that specifies an app 
 
 Example: Valid URI formats manifest-id://[manifest ID in the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] store-id://[app store ID in the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] Returns: Lang.Boolean — true if the app is installed, otherwise false 
 
 Since: API Level 3.2.0 Throws: ( Lang.InvalidValueException ) — Thrown if an invalid URI format is provided 
 
 print(output as Lang.Object or Null ) as Void 
 Print to the console. Parameters: output — ( Lang.Object ) — The item to print, typically a String . 
 
 Since: API Level 1.0.0 println(output as Lang.Object or Null ) as Void 
 Print to the console with a line terminator. Parameters: output — ( Lang.Object ) — The item to print, typically a String . 
 
 Example: using Toybox.System; System.println("Hello Monkey C!"); Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [AppNotInstalledException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/AppNotInstalledException.html)nClass: Toybox.System.AppNotInstalledException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.System.AppNotInstalledException 
 
 show all Overview
 This exception indicates that the app targeted for opening is not installed. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.2.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [ClockTime (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/ClockTime.html)nClass: Toybox.System.ClockTime
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.ClockTime 
 
 show all Overview
 Represents the current local time. ClockTime is a convenient way to get the current time in an easy-to-use format without the need to perform time zone conversions or time-based arithmetic. Values provided by ClockTime may require formatting for proper display within an app. See Also:
 Toybox.Time 
 Number.format() 
 
 Example: Get the time and print it to the console using Toybox.System; var myTime = System.getClockTime(); // ClockTime object System.println( myTime.hour.format("%02d") + ":" + myTime.min.format("%02d") + ":" + myTime.sec.format("%02d") ); Since: API Level 1.0.0 Instance Member Summary collapse 
 dst as Lang.Number The daylight savings time offset. 
 hour as Lang.Number The hour of the day based on a 24-hour clock. 
 min as Lang.Number The minute of the current hour. 
 sec as Lang.Number The second of the current minute. 
 timeZoneOffset as Lang.Number The time offset from UTC in seconds. 
 
 Instance Attribute Details
 var dst as Lang.Number 
 The daylight savings time offset. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var hour as Lang.Number 
 The hour of the day based on a 24-hour clock. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var min as Lang.Number 
 The minute of the current hour. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var sec as Lang.Number 
 The second of the current minute. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var timeZoneOffset as Lang.Number 
 The time offset from UTC in seconds. Since: API Level 1.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [ConnectionInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/ConnectionInfo.html)nClass: Toybox.System.ConnectionInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.ConnectionInfo 
 
 show all Overview
 Represents the state of a communications channel connection. Since: API Level 3.0.0 Instance Member Summary collapse 
 state as System.ConnectionState The state of the connection. 
 
 Instance Attribute Details
 var state as System.ConnectionState 
 The state of the connection. Since: API Level 3.0.0 Returns: System.ConnectionState — A CONNECTION_STATE_* value 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [DeviceSettings (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/DeviceSettings.html)nClass: Toybox.System.DeviceSettings
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.DeviceSettings 
 
 show all Overview
 Represents various settings available on a device. See Also:
 getDeviceSettings() 
 Lang.format() 
 
 Example: using Toybox.System; var mySettings = System.getDeviceSettings(); var clockMode = mySettings.is24Hour; var phone = mySettings.phoneConnected; var version = mySettings.monkeyVersion; var versionString = Lang.format("$1$.$2$.$3$", version); System.println(versionString); //e.g. 2.2.5 Since: API Level 1.0.0 Instance Member Summary collapse 
 activityTrackingOn as Lang.Boolean The activity tracking setting mode. 
 alarmCount as Lang.Number The number of alarms set on the device. 
 connectionAvailable as Lang.Boolean Indicates if any communication channel is connected and available for use. 
 connectionInfo as Lang.Dictionary &lt; Lang.Symbol , System.ConnectionInfo &gt; The state of connections available to the device. 
 distanceUnits as System.UnitsSystem The distance unit setting mode. 
 doNotDisturb as Lang.Boolean The Do Not Disturb setting mode. 
 elevationUnits as System.UnitsSystem The elevation unit setting mode. 
 firmwareVersion as [ Lang.Number , Lang.Number ] The current firmware version of the device. 
 firstDayOfWeek as Gregorian.DayOfWeek The first day of the week. 
 fontScale as Lang.Float Scale factor to be used for displayed text. 
 heightUnits as System.UnitsSystem The height unit setting mode. 
 inputButtons as System.ButtonInputs The physical buttons supported by the device. 
 is24Hour as Lang.Boolean The clock mode mode. 
 isEnhancedReadabilityModeEnabled as Lang.Boolean Indicates the device is currently using Enhanced Readability Mode. 
 isGlanceModeEnabled as Lang.Boolean Indicates if widget glances are enabled on the device. 
 isNightModeEnabled as Lang.Boolean Indicates the device is currently using night mode colors. 
 isTouchScreen as Lang.Boolean The availability of a touch screen on the device. 
 monkeyVersion as [ Lang.Number , Lang.Number , Lang.Number ] The Connect IQ version supported by the device. 
 notificationCount as Lang.Number The number of active notifications. 
 paceUnits as System.UnitsSystem The pace unit setting mode. 
 partNumber as Lang.String The part number of the device. 
 phoneConnected as Lang.Boolean The phone connection status mode. 
 requiresBurnInProtection as Lang.Boolean This flag indicates whether the device screen requires burn-in protection. 
 screenHeight as Lang.Number The height of the device screen in pixels. 
 screenShape as System.ScreenShape The screen shape of the device. 
 screenWidth as Lang.Number The width of the device screen in pixels. 
 systemLanguage as System.Language The language being used by the system. 
 temperatureUnits as System.UnitsSystem The temperature unit setting mode. 
 tonesOn as Lang.Boolean The tone setting mode. 
 uniqueIdentifier as Lang.String or Null A unique alphanumeric device identifier. 
 vibrateOn as Lang.Boolean The vibration setting mode. 
 weightUnits as System.UnitsSystem The weight unit setting mode. 
 
 Instance Attribute Details
 var activityTrackingOn as Lang.Boolean 
 The activity tracking setting mode. Since: API Level 1.2.0 Returns: Lang.Boolean — true if activity tracking is enabled on the device, otherwise false 
 
 var alarmCount as Lang.Number 
 The number of alarms set on the device. Since: API Level 1.2.0 Returns: Lang.Number 
 
 var connectionAvailable as Lang.Boolean 
 Indicates if any communication channel is connected and available for use. Since: API Level 3.0.0 Returns: Lang.Boolean 
 
 var connectionInfo as Lang.Dictionary &lt; Lang.Symbol , System.ConnectionInfo &gt; 
 The state of connections available to the device. Since: API Level 3.0.0 Returns: Lang.Dictionary — A Dictionary that contains the state of each available connection. The keys, :bluetooth , :wifi , and :lte indicate the connection type. If a key is not present then it means that connection type is not available to the device. The values are a ConnectionInfo object, which contain the state of the connection type. 
 
 var distanceUnits as System.UnitsSystem 
 The distance unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two System.UNIT_* constant values: UNIT_METRIC if distance is set to display in kilometers (km) 
 UNIT_STATUTE if distance is set to display in miles (mi) 
 
 
 
 var doNotDisturb as Lang.Boolean 
 The Do Not Disturb setting mode. Not all devices support Do Not Disturb, so it's a good idea to perform a has check when attempting to use this value. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); if (deviceSettings has :doNotDisturb) { var doNotDisturb = deviceSettings.doNotDisturb; } Since: API Level 2.1.0 Returns: Lang.Boolean — true if enabled on the device, otherwise false 
 
 var elevationUnits as System.UnitsSystem 
 The elevation unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two System.UNIT_* constant values: UNIT_METRIC if elevation is set to display in meters (m) 
 UNIT_STATUTE if elevation is set to display in feet (ft) 
 
 
 
 var firmwareVersion as [ Lang.Number , Lang.Number ] 
 The current firmware version of the device. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); var version = mySettings.firmwareVersion; var versionString = Lang.format("$1$.$2$", version); System.println(versionString minor); // e.g. 2.50 Since: API Level 1.2.0 See Also: Lang.format() 
 
 Returns: Lang.Array — A two element Array containing the major and minor version numbers as Number objects 
 
 var firstDayOfWeek as Gregorian.DayOfWeek 
 The first day of the week. Since: API Level 3.0.0 Returns: Gregorian.DayOfWeek — A Gregorian::DAY_* value 
 
 var fontScale as Lang.Float 
 Scale factor to be used for displayed text. Since: API Level 5.0.1 Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 
 Returns: Lang.Float — Scaling factor configured by user. Values will always be positive, and are typically in the range of 0.8 to 1.2. 
 
 var heightUnits as System.UnitsSystem 
 The height unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two UNIT_* constant values: UNIT_METRIC if height is set to display in meters (m) 
 UNIT_STATUTE if height is set to display inSystem. feet (ft) 
 
 
 
 var inputButtons as System.ButtonInputs 
 The physical buttons supported by the device. This returns a bitwise binary of the enumerated values defined by the System.BUTTON_INPUT_* constants that match the available buttons on a particular device. For example, a vivoactive HR returns a value of 9, which indicates Select (1) and Menu (8) button support. A fenix 5, however, returns 11, indicating support for all available button types. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); if ((mySettings.inputButtons &amp; System.BUTTON_INPUT_MENU) != 0) { // Allow the use of the Menu button } Since: API Level 1.2.0 See Also: Toybox.System 
 
 Returns: System.ButtonInputs — A System.BUTTON_INPUT_* value 
 
 var is24Hour as Lang.Boolean 
 The clock mode mode. Since: API Level 1.0.0 Returns: Lang.Boolean — true if the device is set to 24 hour mode, false if it is set to 12 hour mode 
 
 var isEnhancedReadabilityModeEnabled as Lang.Boolean 
 Indicates the device is currently using Enhanced Readability Mode. Since: API Level 4.2.3 Supported Devices: [ View devices ] D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 Venu® 3
 Venu® 3S
 vívoactive® 5
 
 Returns: Lang.Boolean — true if Enhanced Readability Mode is enabled, otherwise false. 
 
 var isGlanceModeEnabled as Lang.Boolean 
 Indicates if widget glances are enabled on the device. If glance mode is enabled, the system will pass up / down key events to a widget base page. Otherwise, the system will mask them out. Since: API Level 3.1.4 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: Lang.Boolean — true if glance mode is enabled, otherwise false 
 
 var isNightModeEnabled as Lang.Boolean 
 Indicates the device is currently using night mode colors Since: API Level 4.1.2 Supported Devices: [ View devices ] Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Returns: Lang.Boolean — true if night colors are currently in use, otherwise false. 
 
 var isTouchScreen as Lang.Boolean 
 The availability of a touch screen on the device. Since: API Level 1.2.0 Returns: Lang.Boolean — true if the device has a touch screen and it is enabled in settings, otherwise false 
 
 var monkeyVersion as [ Lang.Number , Lang.Number , Lang.Number ] 
 The Connect IQ version supported by the device. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); var version = mySettings.monkeyVersion; var versionString = Lang.format("$1$.$2$.$3$", version); System.println(versionString); //e.g. 2.2.5 Since: API Level 1.2.0 See Also: Lang.format() 
 
 Returns: Lang.Array — A three element Array containing the major, minor, and micro version numbers as Number objects 
 
 var notificationCount as Lang.Number 
 The number of active notifications. Since: API Level 1.2.0 Returns: Lang.Number 
 
 var paceUnits as System.UnitsSystem 
 The pace unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two System.UNIT_* constant values: UNIT_METRIC if pace is set to display in kilometers per hour (km/hr) 
 UNIT_STATUTE if pace is set to display in miles per hour (mph) 
 
 
 
 var partNumber as Lang.String 
 The part number of the device. Since: API Level 1.2.0 Returns: Lang.String 
 
 var phoneConnected as Lang.Boolean 
 The phone connection status mode. Since: API Level 1.1.0 Returns: Lang.Boolean — true if a mobile phone is connected to the device, otherwise false 
 
 var requiresBurnInProtection as Lang.Boolean 
 This flag indicates whether the device screen requires burn-in protection. Some screens require special drawing behavior when rendering content in always-on mode. If a screen requires burn-in protection the following rules must be followed: A maximum of ten-percent of the total available screen pixels can be in use at one time. Individual pixels can be on for no more than three update cycles when updating at once-per-minute intervals. If either condition is violated all screen pixels will be turned off until the device goes into high-power mode. Since: API Level 3.0.12 Returns: Lang.Boolean — true if the screen type needs burn-in protection, false otherwise. 
 
 var screenHeight as Lang.Number 
 The height of the device screen in pixels. In some cases, this can be useful to determine the device type at runtime. However, to get the height of the screen area currently available to an app, use Graphics.Dc.getHeight() . Since: API Level 1.2.0 See Also: Graphics.Dc.getHeight() 
 
 Returns: Lang.Number 
 
 var screenShape as System.ScreenShape 
 The screen shape of the device. Since: API Level 1.2.0 Returns: System.ScreenShape — A System.SCREEN_SHAPE_* value 
 
 var screenWidth as Lang.Number 
 The width of the device screen in pixels. In some cases, this can be useful to determine the device type at runtime. However, to get the width of the screen area currently available to an app, use Graphics.Dc.getWidth() . Since: API Level 1.2.0 See Also: Graphics.Dc.getWidth() 
 
 Returns: Lang.Number 
 
 var systemLanguage as System.Language 
 The language being used by the system Since: API Level 3.1.0 Returns: System.Language — LANGUAGE_* enum 
 
 var temperatureUnits as System.UnitsSystem 
 The temperature unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two System.UNIT_* constant values: UNIT_METRIC if temperature is set to display in degrees Celsius (C) 
 UNIT_STATUTE if temperature is set to display in degrees Fahrenheit (F) 
 
 
 
 var tonesOn as Lang.Boolean 
 The tone setting mode. Since: API Level 1.0.0 Returns: Lang.Boolean — true if tones are enabled on the device, otherwise false 
 
 var uniqueIdentifier as Lang.String or Null 
 A unique alphanumeric device identifier. The value is unique for every app, but is stable on a device across uninstall and reinstall. Any use of this value for tracking user information must be in compliance with international privacy law. Example: using Toybox.System; var mySettings = System.getDeviceSettings(); var id = mySettings.uniqueIdentifier; if (id != null) { System.println(id); //e.g. ac915d426451c88e8ea691fa412f9af9c21b4d12 } Since: API Level 2.4.1 Returns: Lang.String — An identifier that can be used to identify the host device or null on error. 
 
 var vibrateOn as Lang.Boolean 
 The vibration setting mode. Since: API Level 1.0.0 Returns: Lang.Boolean — true if vibration is enabled on the device, otherwise false 
 
 var weightUnits as System.UnitsSystem 
 The weight unit setting mode. Since: API Level 1.0.0 Returns: System.UnitsSystem — One of two System.UNIT_* constant values: UNIT_METRIC if weight is set to display in kilograms (kg) 
 UNIT_STATUTE if weight is set to display in pounds (lbs) 
 
 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [Intent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/Intent.html)nClass: Toybox.System.Intent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.Intent 
 
 show all Overview
 An Intent sends content from one app to another app. Strictly speaking, content is sent to a URI by an Intent, which can either be a native activity (e.g. Run, Bike, etc.) or another Connect IQ app. Used in conjunction with System.exitTo() , Intents can exit the current app and launch a second app, passing information from the originating app to the newly open app. For example, a widget might collect data from a service via a Communications call and pass that data to a device app via Intent for use during an activity. See Also:
 System.exitTo() 
 
 Example: using Toybox.System; var targetApp = new System.Intent( "manifest-id://12345678-1234-1234-1234-123412341234", {"arg"=&gt;"CurrentAppName"} ); System.exitTo(targetApp); Example: Valid Intent URI formats manifest-id://[manifest ID in the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] store-id://[app store ID in the form xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx] Since: API Level 2.2.0 App Types: Watch App 
 Audio Content Provider 
 Widget 
 
 Instance Member Summary collapse 
 arguments as Lang.Dictionary or Null 
 uri as Lang.String 
 
 Instance Method Summary collapse 
 initialize (aURI as Lang.String , aArgs as Lang.Dictionary or Null ) Constructor. 
 
 Instance Attribute Details
 var arguments as Lang.Dictionary or Null 
 Since: API Level 2.2.0 var uri as Lang.String 
 Since: API Level 2.2.0 Instance Method Details
 initialize(aURI as Lang.String , aArgs as Lang.Dictionary or Null ) 
 Constructor Parameters: aURI — ( Lang.String ) — The URI that specifies receiver of the Intent 
 aArgs — ( Lang.Dictionary ) — Parameters to pass to the target URI 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [PreviousOperationNotCompleteException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/PreviousOperationNotCompleteException.html)nClass: Toybox.System.PreviousOperationNotCompleteException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.System.PreviousOperationNotCompleteException 
 
 show all Overview
 This exception indicates that a call cannot be executed because a prior operation has not completed. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.2.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [ServiceDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/ServiceDelegate.html)nClass: Toybox.System.ServiceDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.ServiceDelegate 
 
 show all Overview
 ServiceDelegate is a class used to service Background events. This class is used as the main entry point for background processes. A callback function within the delegate can be used to initiate other system events (e.g. Communications ), but only the delegate function is guaranteed to complete. The Background process may be shut down at any time to handle higher priority processes. See Also:
 Toybox.Background 
 
 Example: using Toybox.Background; using Toybox.Communications; using Toybox.System; (:background) class MyServiceDelegate extends System.ServiceDelegate { // When a scheduled background event triggers, make a request to // a service and handle the response with a callback function // within this delegate. function onTemporalEvent() { Communications.makeWebRequest( "https://myrequesturl.com", {}, {}, method(:responseCallback) ); } function responseCallback(responseCode, data) { // Do stuff with the response data here and send the data // payload back to the app that originated the background // process. Background.exit(backgroundData); } } Since: API Level 2.3.0 Instance Method Summary collapse 
 onActivityCompleted (activity as { :sport as Activity.Sport , :subSport as Activity.SubSport }) as Void The callback method that is triggered when an activity is completed. 
 onGoalReached (goalType as Application.GoalType ) as Void A callback method that is triggered in the background when a fitness goal is reached. 
 onOAuthResponse () as Void The callback method that is triggered in the background when an OAuth response is received from the system. 
 onPhoneAppMessage (msg as Communications.PhoneAppMessage ) as Void The callback method that is triggered when a phone app message arrives for this app. 
 onSleepTime () as Void The callback method that is triggered in the background at the configured sleep time. 
 onSteps () as Void The callback method that is triggered in the background when a step goal is reached. 
 onTemporalEvent () as Void A callback method that is triggered in the background when time-based events occur. 
 onWakeTime () as Void A callback method that is triggered in the background at the configured wake time. 
 
 Instance Method Details
 onActivityCompleted(activity as { :sport as Activity.Sport , :subSport as Activity.SubSport }) as Void 
 The callback method that is triggered when an activity is completed Parameters: activity — ( Lang.Dictionary ) — A dictionary containing information about the completed activity. :sport — ( Activity.Sport ) — The primary sport of the completed activity. 
 :subSport — ( Activity.SubSport ) — The sport subcategory of the completed activity. 
 
 
 
 Since: API Level 3.0.10 onGoalReached(goalType as Application.GoalType ) as Void 
 A callback method that is triggered in the background when a fitness goal is reached. Parameters: goalType — ( Application.GoalType ) — An Application.GOAL_TYPE_* value, representing the goal type that is being registered. 
 
 Since: API Level 2.3.0 onOAuthResponse() as Void 
 The callback method that is triggered in the background when an OAuth response is received from the system Since: API Level 2.3.0 onPhoneAppMessage(msg as Communications.PhoneAppMessage ) as Void 
 The callback method that is triggered when a phone app message arrives for this app Parameters: msg — ( Communications.PhoneAppMessage ) — The message received. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 onSleepTime() as Void 
 The callback method that is triggered in the background at the configured sleep time. Since: API Level 2.3.0 onSteps() as Void 
 The callback method that is triggered in the background when a step goal is reached. Step goals occur at 1000 step increments. Since: API Level 2.3.0 onTemporalEvent() as Void 
 A callback method that is triggered in the background when time-based events occur. Since: API Level 2.3.0 onWakeTime() as Void 
 A callback method that is triggered in the background at the configured wake time. Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [Stats (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/Stats.html)nClass: Toybox.System.Stats
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.System.Stats 
 
 show all Overview
 Represents various statistics available on a device, such as the battery charge and memory use. See Also:
 System.getSystemStats() 
 
 Example: using Toybox.System; var myStats = System.getSystemStats(); System.println(myStats.battery); System.println(myStats.totalMemory); Since: API Level 1.0.0 Instance Member Summary collapse 
 battery as Lang.Float The remaining battery life as a percentage. 
 batteryInDays as Lang.Float The remaining battery life in days. 
 charging as Lang.Boolean Battery charging indicator. 
 freeMemory as Lang.Number The current free memory in bytes. 
 solarIntensity as Lang.Number or Null A Toybox::Lang::Number value from 0-100 that describes the solar sensor's charge efficiency, if available. 
 totalMemory as Lang.Number The total available memory in bytes. 
 usedMemory as Lang.Number The memory used by the application in bytes. 
 
 Instance Attribute Details
 var battery as Lang.Float 
 The remaining battery life as a percentage. Note: Some devices may report slightly less than 100% charge immediately after being removed from the charging cradle or cable. While the device is on the charger, the charger will disable itself after the battery charges to 100%. The battery will then very slowly discharge until it hits a hysteresis threshold, at which point the charger will reactivate. This is intentionally done to extend the life of the battery if the device is left on the charger for a long time. Garmin artificially locks the charge indicator on the charge page to 100% once the unit reaches full charge to mask this minor charge cycle fluctuation. Since: API Level 1.0.0 Returns: Lang.Float 
 
 var batteryInDays as Lang.Float 
 The remaining battery life in days. Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: Lang.Float 
 
 var charging as Lang.Boolean 
 Battery charging indicator. This will be set to true if the device is connected to the charging cradle or cable whether or not the device is fully charged. Since: API Level 3.0.0 See Also: Stats.battery 
 
 Returns: Lang.Boolean 
 
 var freeMemory as Lang.Number 
 The current free memory in bytes. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var solarIntensity as Lang.Number or Null 
 A Toybox::Lang::Number value from 0-100 that describes the solar sensor's charge efficiency, if available. Will be set to null if the device doesn't support solar or a negative number when the device is not currently charging. Since: API Level 3.2.0 Returns: Lang.Number 
 
 var totalMemory as Lang.Number 
 The total available memory in bytes. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var usedMemory as Lang.Number 
 The memory used by the application in bytes. Since: API Level 1.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [UnexpectedAppTypeException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/System/UnexpectedAppTypeException.html)nClass: Toybox.System.UnexpectedAppTypeException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.System.UnexpectedAppTypeException 
 
 show all Overview
 This exception indicates that the app targeted by an Intent when exiting to the app is not an allowed app type. Allowed app types currently include watch-apps (both native activities and Connect IQ apps) and widgets. Watch faces and data fields cannot be targeted. If a native activity that has a Connect IQ data field configured is targeted, the native app will receive the Intent, not the data field. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 2.2.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 2.2.0 Generated Dec 11, 2024, 8:58:43 AM


# [Test (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Test.html)nModule: Toybox.Test
 Overview
 The Test module provides a testing framework for Monkey C. The test module provides the tools to implement your own unit test and asserts in your source code. Unit tests take a Logger object and allow for different levels of output. Unit tests are annotated with :test and ignored if testing is not run. Asserts do not require the :test annotation and will be compiled out in release versions or you Connect IQ Content. A test RESULTS section is printed to the console with the tests run, test status, and failure rates. See Also:
 Core Topics - Unit Testing 
 
 Example: Testing Implementation using Toybox.Test; var x = 1; var y = 2; // Asserts can be called outside of test calls function assertWithoutLogger(x, y) { Test.assertEqual(x, y); } (:test) function aDebugTest(logger) { logger.debug("This is a debug message."); return true; } (:test) function aTestOfAssert(logger) { logger.debug("This tests the assert() function."); Test.assert(true); logger.debug("Test.assert(true) didn't throw an Exception which is a very good thing."); Test.assert(false); logger.error("We should not be executing this statement."); return true; } Example: Console Output for above example // Output: ------------------------------------------------------------------------------ Executing test aDebugTest... DEBUG (9:21): This is a debug message. PASS ------------------------------------------------------------------------------ Executing test aTestOfAssert... DEBUG (9:21): This tests the assert() function. DEBUG (9:21): Test.assert(true) didn't throw an Exception which is a very good thing. Unhandled Exception ASSERTION FAILED aTestOfAssert in C:\workspace\RunNoEvil\source\RunNoEvil.mc:21 runTest in UnitTests:33 ERROR ============================================================================== RESULTS Test: Status: aDebugTest PASS aTestOfAssert ERROR Ran 2 tests FAILED (passed=1, failed=0, errors=1) Since: API Level 2.1.0 Classes Under Namespace
 Classes: AssertException , Logger Instance Method Summary collapse 
 assert (test as Lang.Boolean ) as Void Throws an exception if the test is false . 
 assertEqual (value1 as Lang.Object , value2 as Lang.Object or Null ) as Void Throws an exception if value1 and value2 are not equal. 
 assertEqualMessage (value1 as Lang.Object , value2 as Lang.Object or Null , message as Lang.String ) as Void Throws an exception if value1 and value2 are not equal followed by a String defined by the developer. 
 assertMessage (test as Lang.Boolean , message as Lang.String ) as Void Throws an exception if the test is false followed by a String defined by the developer. 
 assertNotEqual (value1 as Lang.Object , value2 as Lang.Object or Null ) as Void Throws an exception if value1 and value2 are equal. 
 assertNotEqualMessage (value1 as Lang.Object , value2 as Lang.Object or Null , message as Lang.String ) as Void Throws an exception if value1 and value2 are equal followed by a String defined by the developer. 
 
 Instance Method Details
 assert(test as Lang.Boolean ) as Void 
 Throws an exception if the test is false . Parameters: test — ( Lang.Boolean ) — The expression to test for true 
 
 Example: using Toybox.Test; (:test) function anAssertTest(logger) { var x = false; Test.assert(x); return true; } // Output: ASSERTION FAILED Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 assertEqual(value1 as Lang.Object , value2 as Lang.Object or Null ) as Void 
 Throws an exception if value1 and value2 are not equal. The objects passed to this function must implement the Object.equals() method which compares both type and value. Parameters: value1 — ( Lang.Object ) — The first value to test for equality 
 value2 — ( Lang.Object ) — The second value to test for equality 
 
 Example: using Toybox.Test; (:test) function anAssertEqualTest(logger) { var x = 1; var y = 2; Test.assertEqual(x, y); return true; } // Output: ASSERTION FAILED Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 assertEqualMessage(value1 as Lang.Object , value2 as Lang.Object or Null , message as Lang.String ) as Void 
 Throws an exception if value1 and value2 are not equal followed by a String defined by the developer. The objects passed to this function must implement the Object.equals() method which compares both type and value. Parameters: value1 — ( Lang.Object ) — The value to test for equality 
 value2 — ( Lang.Object ) — The value to test for equality 
 message — ( Lang.String ) — The identifying message for the assert 
 
 Example: using Toybox.Test; (:test) function anAssertEqualMessageTest(logger) { var x = 1; var y = 2; Test.assertEqual(x, y, "x and y are not equal!"); return true; } // Output: ASSERTION FAILED: x and y are not equal! Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 assertMessage(test as Lang.Boolean , message as Lang.String ) as Void 
 Throws an exception if the test is false followed by a String defined by the developer. Parameters: test — ( Lang.Boolean ) — Expression to test for true 
 message — ( Lang.String ) — The identifying message for the assert 
 
 Example: using Toybox.Test; (:test) function anAssertMessageTest(logger) { var x = false; Test.assertMessage(x, "The assert is False for x."); return true; } // Output: ASSERTION FAILED: The assert is False for x. Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 assertNotEqual(value1 as Lang.Object , value2 as Lang.Object or Null ) as Void 
 Throws an exception if value1 and value2 are equal. The objects passed to this function must implement the Object.equals() method which compares both type and value. Parameters: value1 — ( Lang.Object ) — The value to test for equality 
 value2 — ( Lang.Object ) — The value to test for equality 
 
 Example: using Toybox.Test; (:test) function anAssertNotEqualTest(logger) { var x = 1; var y = 1; Test.assertNotEqual(x, y); return true; } // Output: ASSERTION FAILED Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 assertNotEqualMessage(value1 as Lang.Object , value2 as Lang.Object or Null , message as Lang.String ) as Void 
 Throws an exception if value1 and value2 are equal followed by a String defined by the developer. The objects passed to this function must implement the Object.equals() method which compares both type and value. Parameters: value1 — ( Lang.Object ) — The value to test for equality 
 value2 — ( Lang.Object ) — The value to test for equality 
 message — ( Lang.String ) — The identifying message for the assert 
 
 Example: using Toybox.Test; (:test) function anAssertNotEqualMessageTest(logger) { var x = 1; var y = 2; Test.assertNotEqual(x, y, "x and y are equal!"); return true; } // Output: ASSERTION FAILED: x and y are equal! Unhandled Exception Since: API Level 2.1.0 Throws: ( Test.AssertException ) 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [AssertException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Test/AssertException.html)nClass: Toybox.Test.AssertException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Test.AssertException 
 
 show all Overview
 Since: API Level 2.1.0 Instance Method Summary collapse 
 initialize (message as Lang.String or Null ) Constructor. 
 
 Instance Method Details
 initialize(message as Lang.String or Null ) 
 Constructor Parameters: message — ( Lang.String ) — The exception message 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [Logger (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Test/Logger.html)nClass: Toybox.Test.Logger
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Test.Logger 
 
 show all Overview
 The Logger class provides output capabilities to tests. It is not necessary to instantiate the Logger class. This is done automatically behind the scenes. Since: API Level 2.1.0 Instance Method Summary collapse 
 debug (str as Lang.Object ) as Void Write a debug String to the output stream. 
 error (str as Lang.Object ) as Void Write an error String to the output stream. 
 warning (str as Lang.Object ) as Void Write a warning String to the output stream. 
 
 Instance Method Details
 debug(str as Lang.Object ) as Void 
 Write a debug String to the output stream. The String is prefixed with DEBUG and a time stamp. Parameters: str — ( Lang.String ) — The String output to the console 
 
 Example: using Toybox.Test; (:test) function aDebugTest(logger) { logger.debug("This is a debug message."); return true; } // Output: DEBUG (9:23): This is a debug message. Since: API Level 2.1.0 error(str as Lang.Object ) as Void 
 Write an error String to the output stream. The String is prefixed with ERROR and time stamp. Parameters: str — ( Lang.String ) — The String output to the console 
 
 Example: using Toybox.Test; (:test) function anErrorTest(logger) { logger.error("This is an error message."); return true; } // Output: ERROR (9:24): This is an error message. Since: API Level 2.1.0 warning(str as Lang.Object ) as Void 
 Write a warning String to the output stream. The String is prefixed with WARNING and a time stamp. Parameters: str — ( Lang.String ) — The String output to the console 
 
 Example: using Toybox.Test; (:test) function aWarningTest(logger) { logger.warning("This is a warning message."); return true; } // Output: WARNING (9:23): This is a warning message. Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [Time (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time.html)nModule: Toybox.Time
 Overview
 The Time module provides functionality for dealing with times and dates. There are two main concepts used by Monkey C when working with time: the Moment and Duration . A Moment is a single point in time, while a Duration is a span of time. Moments and Durations can be used together for time calculations in the following ways: Expression Method Result Notes --------------------------------------------------------------------------- Moment + Moment - - Invalid Moment + Duration Moment.add() Moment A later Moment Moment - Moment Moment.subtract() Duration The span between Moments Moment - Duration Moment.subtract() Moment An earlier Moment Duration + Duration Duration.add() Duration A longer Duration Duration + Moment Duration.add() Moment A later Moment Duration - Duration Duration.subtract() Duration A shorter Duration Duration - Moment - - Invalid Dates and times are generally represented in UTC time from the UNIX epoch, with the exception of the Gregorian Moment , which are created relative to the current local time. Date and time formatting in Monkey C is relatively open-ended, providing some formatting constants for short, medium, and long formatting (long and medium formatting are currently equivalent). Constant Seconds Minutes Hours Day of Week Day Month Year --------------------------------------------------------------------------- FORMAT_SHORT | 0 0 0 4 1 3 2017 FORMAT_MEDIUM | 0 0 0 Wed 1 Mar 2017 FORMAT_LONG | 0 0 0 Wed 1 Mar 2017 See Also:
 UTC Time 
 UNIX Time 
 
 Example: Formatting and printing a date using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var today = Gregorian.info(Time.now(), Time.FORMAT_MEDIUM); var dateString = Lang.format( "$1$:$2$:$3$ $4$ $5$ $6$ $7$", [ today.hour, today.min, today.sec, today.day_of_week, today.day, today.month, today.year ] ); System.println(dateString); // e.g. "16:28:32 Wed 1 Mar 2017" Example: Creating a Moment representing May 16, 2003 using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var options = { :year =&gt; 2003, :month =&gt; 5, :day =&gt; 16, :hour =&gt; 6 // UTC offset, in this case for CST }; var birthday = Gregorian.moment(options); Since: API Level 1.0.0 Modules Under Namespace
 Modules: Time.Gregorian Classes Under Namespace
 Classes: Duration , LocalMoment , Moment , RealTimeClockNotValidException Constant Summary
 DateFormat
 Since: API Level 1.0.0 Name Value Since Description See Also 
 FORMAT_SHORT 0 API Level 1.0.0 Short formatting is a numerical representation of date/time. 
 FORMAT_MEDIUM 1 API Level 1.0.0 Medium formatting is a mix of Numbers and Strings depending on which function is called. If formatted as a String, the result is an abbreviated form of the time or date. 
 FORMAT_LONG 2 API Level 1.0.0 Long formatting is a mix of Numbers and Strings depending on which function is called. If formatted as a String, the result is an abbreviated form of the time or date. 
 CurrentTime
 Since: API Level 1.0.0 Name Value Since Description See Also 
 CURRENT_TIME_DEFAULT 0 API Level 3.0.10 The default system clock, which may be user-modified. 
 CURRENT_TIME_GPS 1 API Level 3.0.10 The clock time based on your current GPS location if a GPS signal is available. 
 CURRENT_TIME_RTC 2 API Level 3.0.10 The system's real-time clock that cannot be overridden by user settings, and can only be updated by trusted sources such as GPS. 
 Instance Method Summary collapse 
 getCurrentTime (options as { :currentTimeType as Time.CurrentTime }) as Time.Moment Get a Moment for the current time based on the specified source. 
 now () as Time.Moment Get a Moment for the current time. 
 today () as Time.Moment Get a Moment for midnight today. 
 
 Instance Method Details
 getCurrentTime(options as { :currentTimeType as Time.CurrentTime }) as Time.Moment 
 Get a Moment for the current time based on the specified source. This method behaves the same as Time.now() , but accepts an options argument that allows the time source to be selected. Parameters: options — ( Lang.Dictionary ) — Clock options :currentTimeType — ( Time.CurrentTime ) — A Time.CURRENT_TIME_* value, which defaults to Time.CURRENT_TIME_DEFAULT if no time type is provided 
 
 
 
 See Also: Time.now() 
 
 Since: API Level 3.0.10 Throws: ( Time.RealTimeClockNotValidException ) — Thrown if Time.CURRENT_TIME_RTC is passed as an option and the real-time clock value is not valid, i.e. synced with trusted source such as GPS. 
 
 now() as Time.Moment 
 Get a Moment for the current time. Example: Using now() on December 31, 1989 at 5:00 pm CST using Toybox.Time; var now = new Time.Moment(Time.now().value()); // UNIX epoch 631148400 Returns: Time.Moment — A Moment representing the current moment in time. 
 
 See Also: UTC Time 
 UNIX Time 
 
 Since: API Level 1.0.0 today() as Time.Moment 
 Get a Moment for midnight today. Example: Using today() on December 31, 1989 at 5:00 pm CST using Toybox.Time; var now = new Time.Moment(Time.today().value()); // UNIX epoch 631087200 Returns: Time.Moment — A Moment representing the the beginning of the current day. 
 
 See Also: UTC Time 
 UNIX Time 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Duration (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/Duration.html)nClass: Toybox.Time.Duration
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Time.Duration 
 
 show all Overview
 A Duration is an immutable period of time. Duration objects are closely related to Moment objects, and are frequently used together for time calculations. While a Moment represents a single point in time, a Duration represents a span of time such as seven days. Duration objects are stored as a the number of seconds that compose the span of time the Duration represents. Since: API Level 1.0.0 Instance Method Summary collapse 
 add (time as Time.Moment or Time.Duration ) as Time.Moment or Time.Duration Add a Moment or another Duration to a Duration. 
 compare (duration as Time.Duration ) as Lang.Number Determine if a Duration is shorter or longer than another Duration. 
 divide (value as Lang.Number or Lang.Float ) as Time.Duration Divide a Duration by a value. 
 greaterThan (duration as Time.Duration ) as Lang.Boolean Determine if a Duration is longer than another Duration. 
 initialize (value as Lang.Number ) Time.Duration Constructor. 
 lessThan (duration as Time.Duration ) as Lang.Boolean Determine if a Duration is shorter than another Duration. 
 multiply (value as Lang.Number or Lang.Float ) as Time.Duration Multiply a Duration by a value. 
 subtract (duration as Time.Duration ) as Time.Duration Get the absolute difference between two Duration objects. 
 value () as Lang.Number Get the value of a Duration. 
 
 Instance Method Details
 add(time as Time.Moment or Time.Duration ) as Time.Moment or Time.Duration 
 Add a Moment or another Duration to a Duration. When adding a Moment to a Duration, this method functions the same as the Moment.add() method. Parameters: time — ( Time.Duration , Time.Moment ) — The Duration or Moment to add to Duration 
 
 Example: Add two Duration objects using Toybox.Time; var oneHour = new Time.Duration(3600); var twoHours = new Time.Duration(7200); var threeHours = oneHour.add(twoHours); Returns: Time.Duration , Time.Moment — A Duration or Moment object that is the sum of self and the provided object: Duration + Moment = Moment 
 Duration + Duration = Duration 
 
 
 
 See Also: Moment.add() 
 
 Since: API Level 1.0.0 compare(duration as Time.Duration ) as Lang.Number 
 Determine if a Duration is shorter or longer than another Duration. This computes a Number representing the difference between the two Duration objects in seconds. The subtract() method can also be used to get the absolute difference between two Duration objects. Parameters: duration — ( Time.Duration ) — The Duration to compare to this Duration 
 
 Example: using Toybox.System; using Toybox.Time; var oneHour = new Time.Duration(3600); var twoHours = new Time.Duration(7200); System.println(oneHour.compare(twoHours)); // -3600, or one minute in the past System.println(twoHours.compare(oneHour)); // 3600, or one minute in the future Returns: Lang.Number — The Number of seconds difference between the two Duration objects. If the Duration supplied for comparison is longer than this Duration, the value will be negative. 
 
 Since: API Level 1.0.0 divide(value as Lang.Number or Lang.Float ) as Time.Duration 
 Divide a Duration by a value. Parameters: value — ( Lang.Number , Lang.Float ) — The value by which to divide the Duration 
 
 Example: using Toybox.Time; var fourHours = new Time.Duration(Gregorian.SECONDS_PER_HOUR * 4); var twoHours = fourHours.divide(2); Returns: Time.Duration — The quotient of the Duration and the supplied value 
 
 Since: API Level 1.0.0 greaterThan(duration as Time.Duration ) as Lang.Boolean 
 Determine if a Duration is longer than another Duration. Parameters: duration — ( Time.Duration ) — The Duration to compare to this Duration 
 
 Example: using Toybox.System; using Toybox.Time; var oneHour = new Time.Duration(3600); var twoHours = new Time.Duration(7200); System.println(oneHour.greaterThan(twoHours)); // false System.println(twoHours.greaterThan(oneHour)); // true Returns: Lang.Boolean — true if this Duration is longer than the Duration supplied for comparison, otherwise false 
 
 Since: API Level 1.0.0 initialize(value as Lang.Number ) Time.Duration 
 Constructor Parameters: value — ( Lang.Number ) — The Number of seconds with which to initialize the Duration 
 
 Example: Create a Duration of one day with a number of seconds using Toybox.Time; var oneDay = new Time.Duration(86400); Returns: Time.Duration — A Duration representing the specified Number of seconds 
 
 See Also: Gregorian.duration() 
 
 Since: API Level 1.0.0 lessThan(duration as Time.Duration ) as Lang.Boolean 
 Determine if a Duration is shorter than another Duration. Parameters: duration — ( Time.Duration ) — The Duration to compare to this Duration 
 
 Example: using Toybox.System; using Toybox.Time; var oneHour = new Time.Duration(3600); var twoHours = new Time.Duration(7200); System.println(oneHour.lessThan(twoHours)); // true System.println(twoHours.lessThan(oneHour)); // false Returns: Lang.Boolean — true if this Duration is shorter than the Duration supplied for comparison, otherwise false 
 
 Since: API Level 1.0.0 multiply(value as Lang.Number or Lang.Float ) as Time.Duration 
 Multiply a Duration by a value. Parameters: value — ( Lang.Number , Lang.Float ) — The value by which to multiply the Duration 
 
 Example: using Toybox.Time; var twoHours = new Time.Duration(7200); var fourHours = twoHours.multiply(2); Returns: Time.Duration — The product of the Duration and the supplied value 
 
 Since: API Level 1.0.0 subtract(duration as Time.Duration ) as Time.Duration 
 Get the absolute difference between two Duration objects. The computed Duration is always a positive value. The compare() method can also be used to get the difference between two Duration objects. Parameters: duration — ( Time.Duration ) — The Duration to subtract from this Duration 
 
 Example: using Toybox.Time; var twoHours = new Time.Duration(7200); var threeHours = new Time.Duration(10800); var oneHour = threeHours.subtract(twoHours); Returns: Time.Duration — The difference between the two Duration objects 
 
 Since: API Level 1.0.0 value() as Lang.Number 
 Get the value of a Duration. Returns: Lang.Number — The value of the Duration in seconds 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [Gregorian (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/Gregorian.html)nModule: Toybox.Time.Gregorian
 Overview
 The Gregorian module provides an interface for getting Moment objects and Duration objects based on the Gregorian calendar. For convenience, several time constants are defined that represent the number of seconds per year, per day, per hour, and per minute. See Also:
 The Gregorian Calendar 
 
 Since: API Level 1.0.0 Classes Under Namespace
 Classes: Info Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type SECONDS_PER_DAY 86400 API Level 1.0.0 The number of seconds in one day 
 Type SECONDS_PER_HOUR 3600 API Level 1.0.0 The number of seconds in one hour 
 Type SECONDS_PER_MINUTE 60 API Level 1.0.0 The number of seconds in one minute 
 Type SECONDS_PER_YEAR 31557600 API Level 1.0.0 The number of seconds in one year 
 DayOfWeek
 Since: API Level 1.0.0 Name Value Since Description See Also 
 DAY_SUNDAY 1 API Level 3.0.0 Sunday 
 DAY_MONDAY 2 API Level 3.0.0 Monday 
 DAY_TUESDAY 3 API Level 3.0.0 Tuesday 
 DAY_WEDNESDAY 4 API Level 3.0.0 Wednesday 
 DAY_THURSDAY 5 API Level 3.0.0 Thursday 
 DAY_FRIDAY 6 API Level 3.0.0 Friday 
 DAY_SATURDAY 7 API Level 3.0.0 Saturday 
 Month
 Since: API Level 1.0.0 Name Value Since Description See Also 
 MONTH_JANUARY 1 API Level 3.0.0 January 
 MONTH_FEBRUARY 2 API Level 3.0.0 February 
 MONTH_MARCH 3 API Level 3.0.0 March 
 MONTH_APRIL 4 API Level 3.0.0 April 
 MONTH_MAY 5 API Level 3.0.0 May 
 MONTH_JUNE 6 API Level 3.0.0 June 
 MONTH_JULY 7 API Level 3.0.0 July 
 MONTH_AUGUST 8 API Level 3.0.0 August 
 MONTH_SEPTEMBER 9 API Level 3.0.0 September 
 MONTH_OCTOBER 10 API Level 3.0.0 October 
 MONTH_NOVEMBER 11 API Level 3.0.0 November 
 MONTH_DECEMBER 12 API Level 3.0.0 December 
 Instance Method Summary collapse 
 duration (options as { :years as Lang.Number , :days as Lang.Number , :hours as Lang.Number , :minutes as Lang.Number , :seconds as Lang.Number }) as Time.Duration Create a Duration from a Dictionary of options. 
 info (moment as Time.Moment or Time.LocalMoment , format as Time.DateFormat ) as Gregorian.Info Get Info for a Moment in local time. 
 localMoment (location as Position.Location , moment as Time.Moment ) as Time.LocalMoment or Null Create a LocalMoment from a Moment and a Location. 
 moment (options as { :year as Lang.Number , :month as Lang.Number or Lang.Symbol , :day as Lang.Number , :hour as Lang.Number , :minute as Lang.Number , :second as Lang.Number }) as Time.Moment Create a Moment from a Dictionary of options. 
 utcInfo (moment as Time.Moment , format as Time.DateFormat ) as Gregorian.Info Get Info for a Moment in UTC time. 
 
 Instance Method Details
 duration(options as { :years as Lang.Number , :days as Lang.Number , :hours as Lang.Number , :minutes as Lang.Number , :seconds as Lang.Number }) as Time.Duration 
 Create a Duration from a Dictionary of options. This is an alternative to Duration.initialize() that allows the Duration to be made more easily, using familiar units, which can be handy when building a Duration manually. Option values are represented as signed 32-bit integers. Parameters: options — ( Lang.Dictionary ) — A dictionary of options :years — ( Lang.Number ) — The number of years (max 69) 
 :days — ( Lang.Number ) — The number of days (max 24855) 
 :hours — ( Lang.Number ) — The number of hours (max 596523) 
 :minutes — ( Lang.Number ) — The number of minutes (max 35791394) 
 :seconds — ( Lang.Number ) — The number of seconds (max 2147483647) 
 
 
 
 Example: Create a Duration of one day with Gregorian.duration() using Toybox.Time.Gregorian; var oneDay = Gregorian.duration({:days =&gt; 1}); Returns: Time.Duration — The Duration representing the specified span of time 
 
 See Also: Duration.initialize() 
 
 Since: API Level 1.0.0 info(moment as Time.Moment or Time.LocalMoment , format as Time.DateFormat ) as Gregorian.Info 
 Get Info for a Moment in local time. Parameters: moment — ( Time.Moment , Time.LocalMoment ) — A Moment or LocalMoment object for which to get Info 
 format — ( Time.DateFormat ) — A Time.FORMAT_* type 
 
 Example: Get Info for today in local time (assume CST) using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var options = { :year =&gt; 2003, :month =&gt; 5, // 3.x devices can also use :month =&gt; Gregorian.MONTH_MAY :day =&gt; 16, :hour =&gt; 0 }; var date = Gregorian.moment(options); var birthday = Gregorian.info(date, Time.FORMAT_MEDIUM); System.println(birthday.year); // 2003 System.println(birthday.month); // May System.println(birthday.day); // 16 System.println(birthday.hour); // 19 Returns: Gregorian.Info — Info for the supplied Moment formatted according to the specified format type in local time. 
 
 Since: API Level 1.0.0 localMoment(location as Position.Location , moment as Time.Moment ) as Time.LocalMoment or Null 
 Create a LocalMoment from a Moment and a Location Parameters: location — ( Position.Location ) — The location to use to determine the time zone offset and daylight saving time rules. 
 moment — ( Time.Moment ) — The UTC time to find the local time for. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Time.LocalMoment — A LocalMoment object for the local time at the given location, or null if an error occurred. 
 
 Since: API Level 3.3.0 moment(options as { :year as Lang.Number , :month as Lang.Number or Lang.Symbol , :day as Lang.Number , :hour as Lang.Number , :minute as Lang.Number , :second as Lang.Number }) as Time.Moment 
 Create a Moment from a Dictionary of options. Each option value is assumed to be in the UTC time zone. Unlike Moment.initialize() , which is based on the UNIX epoch, a Moment created with Gregorian.moment() is based on today() . The result is determined by taking the result of today() and overlaying the options provided. Parameters: options — ( Lang.Dictionary ) — A dictionary of options; values that would not result in a valid date are not allowed :year — ( Lang.Number ) — The year (1970-2106) 
 :month — ( Lang.Number , Lang.Symbol ) — The month (1-12) or a Symbol (:january, :february, ...) 
 :day — ( Lang.Number ) — The day of month (1-31) 
 :hour — ( Lang.Number ) — The hour (0-23) 
 :minute — ( Lang.Number ) — The minute (0-59) 
 :second — ( Lang.Number ) — The second (0-59) 
 
 
 
 Example: Create a Moment representing midnight on the first day of the current month. using Toybox.Time; var oneDay = Gregorian.moment({:day =&gt; 1}); Returns: Time.Moment — A Moment representing the specified moment in time 
 
 See Also: Moment.initialize() 
 UTC Time 
 
 Since: API Level 1.0.0 utcInfo(moment as Time.Moment , format as Time.DateFormat ) as Gregorian.Info 
 Get Info for a Moment in UTC time. Info Parameters: format — ( Time.DateFormat ) — A Time.FORMAT_* type 
 
 Example: Get Info for today in UTC using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var options = { :year =&gt; 2003, :month =&gt; 5, // 3.x devices can also use :month =&gt; Gregorian.MONTH_MAY :day =&gt; 16, :hour =&gt; 0 }; var date = Gregorian.moment(options); var birthday = Gregorian.utcInfo(date, Time.FORMAT_MEDIUM); System.println(birthday.year); // 2003 System.println(birthday.month); // May System.println(birthday.day); // 16 System.println(birthday.hour); // 0 Returns: Gregorian.Info — Info for the supplied Moment formatted according to the specified format type in UTC time. 
 
 See Also: UTC Time 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:43 AM


# [Info (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/Gregorian/Info.html)nClass: Toybox.Time.Gregorian.Info
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Time.Gregorian.Info 
 
 show all Overview
 The Gregorian.Info class contains all of the necessary information to represent a Gregorian date. The types of some returned values depend on the Time.FORMAT_* value specified when calling info() or utcInfo() . Since: API Level 1.0.0 Instance Member Summary collapse 
 day as Lang.Number The date, indicating the day of the month. 
 day_of_week as Lang.Number or Lang.String The day of the week (e.g. 
 hour as Lang.Number The hour of the day based on a 24-hour clock. 
 min as Lang.Number The minutes within an hour. 
 month as Lang.Number or Lang.String The month of the year (e.g. 
 sec as Lang.Number The seconds within a minute. 
 year as Lang.Number The year. 
 
 Instance Attribute Details
 var day as Lang.Number 
 The date, indicating the day of the month. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var day_of_week as Lang.Number or Lang.String 
 The day of the week (e.g. Monday, Tuesday, Wednesday, etc,). Note: The String values returned are language and device dependent. Since: API Level 1.0.0 Returns: Lang.Number , Lang.String — The day of the week in the specified format: FORMAT_SHORT ( Toybox::Lang::Number ): A number in the range 1 to 7. 1 = Sunday, 2 = Monday, ..., 7 = Saturday 
 FORMAT_MEDIUM ( Toybox::Lang::String ): The abbreviated day of the week: "Sun", "Mon", ... "Sat" 
 FORMAT_LONG ( Toybox::Lang::String ): Currently the same as FORMAT_MEDIUM 
 
 
 
 var hour as Lang.Number 
 The hour of the day based on a 24-hour clock. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var min as Lang.Number 
 The minutes within an hour. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var month as Lang.Number or Lang.String 
 The month of the year (e.g. January, February, March, etc.). Note: The String values returned are language and device dependent. Since: API Level 1.0.0 Returns: Lang.Number , Lang.String — The month of the year in the specified format: FORMAT_SHORT ( Toybox::Lang::Number ): A number in the range 1 to 12. 1 = January, 2= February, ..., 12 = December 
 FORMAT_MEDIUM ( Toybox::Lang::String ): The abbreviated month: "Jan", "Feb", ..., "Dec" 
 FORMAT_LONG ( Toybox::Lang::String ): Currently the same as FORMAT_MEDIUM 
 
 
 
 var sec as Lang.Number 
 The seconds within a minute. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var year as Lang.Number 
 The year. Since: API Level 1.0.0 Returns: Lang.Number 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [LocalMoment (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/LocalMoment.html)nClass: Toybox.Time.LocalMoment
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Time.LocalMoment 
 
 show all Overview
 A LocalMoment is an immutable moment in time. LocalMoment represents a single point in time at a specific location. It differs from Moment in that it also keeps time zone information in addition to the time. Example: // This code will print the following // to the console: // 2018-02-23 18:12:00 // day_of_week=6 month=2 // day_of_week=Fri month=Feb // Saturday Feb 24th, 2018 12:12am UTC var options = { :year =&gt; 2018, :month =&gt; 2, :day =&gt; 24, :hour =&gt; 0, :min =&gt; 12 }; var when = Gregorian.moment(options); var where = new Position.Location({ :latitude =&gt; 38.85391, :longitude =&gt; -94.79630, :format =&gt; :degrees, }); var local = Gregorian.localMoment(where, when); var info = Gregorian.info(local, Time.FORMAT_SHORT); // Friday Feb 23th, 2018 6:12pm Sys.println(Lang.format("$1$-$2$-$3$ $4$:$5$:$6$", [ info.year.format("%04u"), info.month.format("%02u"), info.day.format("%02u"), info.hour.format("%02u"), info.min.format("%02u"), info.sec.format("%02u"), ])); Sys.println(Lang.format("day_of_week=$1$ month=$2$", [ info.day_of_week, info.month ])); info = Gregorian.info(now, Time.FORMAT_LONG); Sys.println(Lang.format("day_of_week=$1$ month=$2$", [ info.day_of_week, info.month ])); Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 add (addend as Time.Duration ) as Time.LocalMoment Add a Duration to a LocalMoment. 
 compare (moment as Time.LocalMoment ) as Lang.Number Determine if a LocalMoment is before or after another LocalMoment This computes a Number representing the difference between the two LocalMoment objects in seconds. 
 getDaylightSavingsTimeOffset () as Lang.Number Get the daylight saving time offset from UTC time in seconds. 
 getOffset () as Lang.Number Get the total time offset from UTC time in seconds. 
 getTimeZoneOffset () as Lang.Number Get the time zone offset from UTC time in seconds. 
 greaterThan (moment as Time.LocalMoment ) as Lang.Boolean Determine if a LocalMoment is greater than another LocalMoment. 
 isDaylightSavingsTime () as Lang.Boolean Get whether the daylight saving time offset is in effect. 
 lessThan (moment as Time.LocalMoment ) as Lang.Boolean Determine if a LocalMoment is less than another LocalMoment. 
 subtract (subtrahend as Time.Duration or Time.LocalMoment ) as Time.Duration or Time.LocalMoment Subtract a Duration or LocalMoment from a LocalMoment. 
 toMoment () as Time.Moment Get a Moment for this. 
 value () as Lang.Number Get the UTC value of a LocalMoment. 
 
 Instance Method Details
 add(addend as Time.Duration ) as Time.LocalMoment 
 Add a Duration to a LocalMoment. Parameters: addend — ( Time.Duration ) — The Duration to add to this LocalMoment. 
 
 Returns: Time.LocalMoment — A LocalMoment object that is the sum of self and the provided Duration object. 
 
 Since: API Level 3.3.0 compare(moment as Time.LocalMoment ) as Lang.Number 
 Determine if a LocalMoment is before or after another LocalMoment This computes a Number representing the difference between the two LocalMoment objects in seconds. The subtract() method can also be used to get the absolute Duration between two LocalMoment objects. Parameters: moment — ( Time.LocalMoment ) — The LocalMoment to compare to this LocalMoment 
 
 Example: using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; using Toybox.Position; var where = new Position.Location({ :latitude =&gt; 38.85391, :longitude =&gt; -94.79630, :format =&gt; :degrees, }); var today = Gregorian.localMoment(where, Time.today()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); System.println(today.compare(tomorrow)); // -86400, or one day in the past System.println(tomorrow.compare(today)); // 86400, or one day in the future Returns: Lang.Number — The Number of seconds difference between the two LocalMoment objects, without considering time zone rules. If the LocalMoment supplied for comparison is after this LocalMoment, the value will be negative. 
 
 See Also: LocalMoment.subtract() 
 SECONDS_PER_DAY 
 
 Since: API Level 3.3.0 getDaylightSavingsTimeOffset() as Lang.Number 
 Get the daylight saving time offset from UTC time in seconds. Returns: Lang.Number — The daylight saving time offset in seconds. 
 
 Since: API Level 3.3.0 getOffset() as Lang.Number 
 Get the total time offset from UTC time in seconds Returns: Lang.Number — The total offset from UTC time in seconds. 
 
 Since: API Level 3.3.0 getTimeZoneOffset() as Lang.Number 
 Get the time zone offset from UTC time in seconds. This is the time zone offset without the daylight saving time offset. Returns: Lang.Number — The time zone offset from UTC in seconds. Positive values are East of UTC. 
 
 Since: API Level 3.3.0 greaterThan(moment as Time.LocalMoment ) as Lang.Boolean 
 Determine if a LocalMoment is greater than another LocalMoment. Parameters: moment — ( Time.LocalMoment ) — The LocalMoment to compare to this LocalMoment 
 
 Returns: Lang.Boolean — true if this LocalMoment is greater than the LocalMoment supplied for comparison, otherwise false 
 
 Since: API Level 3.3.0 isDaylightSavingsTime() as Lang.Boolean 
 Get whether the daylight saving time offset is in effect Returns: Lang.Boolean — true if daylight saving time is in effect for this time. 
 
 Since: API Level 3.3.0 lessThan(moment as Time.LocalMoment ) as Lang.Boolean 
 Determine if a LocalMoment is less than another LocalMoment. Parameters: moment — ( Time.LocalMoment ) — The LocalMoment to compare to this LocalMoment 
 
 Returns: Lang.Boolean — true if this LocalMoment is less than the LocalMoment supplied for comparison, otherwise false 
 
 Since: API Level 3.3.0 subtract(subtrahend as Time.Duration or Time.LocalMoment ) as Time.Duration or Time.LocalMoment 
 Subtract a Duration or LocalMoment from a LocalMoment. Parameters: subtrahend — ( Time.LocalMoment , Time.Duration ) — The LocalMoment or Duration to subtract from this LocalMoment 
 
 Returns: Time.Duration , Time.LocalMoment — The Duration between the two LocalMoment objects or the LocalMoment offset by a Duration. When subtracting LocalMoments, the computed Duration is always a positive value. The compare() method can be used to determine whether one LocalMoment is before or after another LocalMoment. 
 
 Since: API Level 3.3.0 toMoment() as Time.Moment 
 Get a Moment for this. Returns: Time.Moment — The UTC time of the LocalMoment as a Moment 
 
 Since: API Level 3.3.0 value() as Lang.Number 
 Get the UTC value of a LocalMoment. Returns: Lang.Number — The UTC time of the LocalMoment in seconds since the UNIX epoch 
 
 See Also: UTC Time 
 UNIX Time 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [Moment (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/Moment.html)nClass: Toybox.Time.Moment
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Time.Moment 
 
 show all Overview
 A Moment is an immutable moment in time. Moment objects are closely related to Duration objects, and are frequently used together for time calculations. While a Duration represents a span of time, a Moment represents a single point in time such as a specific date. Internally, Moment objects are stored as 32-bit integers representing the number of seconds since the UNIX epoch (January 1, 1970 at 00:00:00 UTC). See Also:
 UTC Time 
 UNIX Time 
 
 Example: using Toybox.System; using Toybox.Time.Gregorian; // Options for Saturday February 24th, 2018 12:12am var options = { :year =&gt; 2018, :month =&gt; 2, :day =&gt; 24, :hour =&gt; 0, :minute =&gt; 12 }; var now = Gregorian.moment(options); var info; info = Gregorian.utcInfo(now, Time.FORMAT_SHORT); // Prints "2018-02-24" to the console System.println(Lang.format("$1$-$2$-$3$", [ info.year.format("%04u"), info.month.format("%02u"), info.day.format("%02u") ])); // Prints "day_of_week=7 month=2" to the console System.println(Lang.format("day_of_week=$1$ month=$2$", [ info.day_of_week, info.month ])); info = Gregorian.utcInfo(now, Time.FORMAT_LONG); // Prints "day_of_week=Sat month=Feb" to the console System.println(Lang.format("day_of_week=$1$ month=$2$", [ info.day_of_week, info.month ])); Since: API Level 1.0.0 Instance Method Summary collapse 
 add (duration as Time.Duration ) as Time.Moment Add a Duration to a Moment. 
 compare (moment as Time.Moment ) as Lang.Number Determine if a Moment is before or after another Moment. 
 greaterThan (moment as Time.Moment ) as Lang.Boolean Determine if a Moment is greater than another Moment. 
 initialize (seconds as Lang.Number ) Time.Moment Constructor. 
 lessThan (moment as Time.Moment ) as Lang.Boolean Determine if a Moment is less than another Moment. 
 subtract (subtrahend as Time.Moment or Time.Duration ) as Time.Moment or Time.Duration Subtract a Duration or Moment from a Moment. 
 value () as Lang.Number Get the UTC value of a Moment. 
 
 Instance Method Details
 add(duration as Time.Duration ) as Time.Moment 
 Add a Duration to a Moment. This method functions the same as the Duration.add() method when adding a Duration to a Moment. Parameters: duration — ( Time.Duration ) — The Duration to add to this Moment 
 
 Example: Add one day to today using Toybox.Time; using Toybox.Time.Gregorian; var today = new Time.Moment(Time.today().value()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); Returns: Time.Moment — A Moment object that is the sum of self and the provided Duration object 
 
 See Also: Duration.add() 
 SECONDS_PER_DAY 
 
 Since: API Level 1.0.0 compare(moment as Time.Moment ) as Lang.Number 
 Determine if a Moment is before or after another Moment. This computes a Number representing the difference between the two Moment objects in seconds. The subtract() method can also be used to get the absolute Duration between two Moment objects. Parameters: moment — ( Time.Moment ) — The Moment to compare to this Moment 
 
 Example: using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var today = new Time.Moment(Time.today().value()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); System.println(today.compare(tomorrow)); // -86400, or one day in the past System.println(tomorrow.compare(today)); // 86400, or one day in the future Returns: Lang.Number — The Number of seconds difference between the two Moment objects. If the Moment supplied for comparison is after this Moment, the value will be negative. 
 
 See Also: Moment.subtract() 
 SECONDS_PER_DAY 
 
 Since: API Level 1.0.0 greaterThan(moment as Time.Moment ) as Lang.Boolean 
 Determine if a Moment is greater than another Moment. Parameters: moment — ( Time.Moment ) — The Moment to compare to this Moment 
 
 Example: using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var today = new Time.Moment(Time.today().value()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); System.println(today.greaterThan(tomorrow)); // false System.println(tomorrow.greaterThan(today)); // true Returns: Lang.Boolean — true if this Moment is greater than the Moment supplied for comparison, otherwise false 
 
 See Also: SECONDS_PER_DAY 
 
 Since: API Level 1.0.0 initialize(seconds as Lang.Number ) Time.Moment 
 Constructor Parameters: seconds — ( Lang.Number ) — The Number of seconds with which to initialize the Moment 
 
 Example: Create a Moment with a UNIX time stamp using Toybox.Time; var garminFounded = new Time.Moment(631065600); Example: Create a Moment representing today using Toybox.Time; var today = new Time.Moment(Time.today().value()); Returns: Time.Moment — A Moment representing the specified moment in time 
 
 See Also: UTC Time 
 UNIX Time 
 
 Since: API Level 1.1.2 lessThan(moment as Time.Moment ) as Lang.Boolean 
 Determine if a Moment is less than another Moment. Parameters: moment — ( Time.Moment ) — The Moment to compare to this Moment 
 
 Example: using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var today = new Time.Moment(Time.today().value()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); System.println(today.lessThan(tomorrow)); // true System.println(tomorrow.lessThan(today)); // false Returns: Lang.Boolean — true if this Moment is less than the Moment supplied for comparison, otherwise false 
 
 See Also: SECONDS_PER_DAY 
 
 Since: API Level 1.0.0 subtract(subtrahend as Time.Moment or Time.Duration ) as Time.Moment or Time.Duration 
 Subtract a Duration or Moment from a Moment. Note: Subtracting a Duration from a Moment was not supported until ConnectIQ 3.0.0. If backward compatibility is a concern, it may be best to add a negative Duration instead. Parameters: subtrahend — ( Time.Moment , Time.Duration ) — The Moment or Duration to subtract from this Moment 
 
 Example: using Toybox.System; using Toybox.Time; using Toybox.Time.Gregorian; var today = new Time.Moment(Time.today().value()); var oneDay = new Time.Duration(Gregorian.SECONDS_PER_DAY); var tomorrow = today.add(oneDay); var duration1 = today.subtract(tomorrow); var duration2 = tomorrow.subtract(today); System.println(duration1.value()); // 86400, or one day System.println(duration2.value()); // 86400, or one day Returns: Time.Duration , Time.Moment — The Duration between the two Moment objects or the Moment offset by a Duration. When subtracting Moments, the computed Duration is always a positive value. The compare() method can be used to determine whether one Moment is before or after another Moment. 
 
 See Also: Moment.compare() 
 SECONDS_PER_DAY 
 
 Since: API Level 1.0.0 value() as Lang.Number 
 Get the UTC value of a Moment. Returns: Lang.Number — The UTC date of the Moment in seconds since the UNIX epoch 
 
 See Also: UTC Time 
 UNIX Time 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [RealTimeClockNotValidException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Time/RealTimeClockNotValidException.html)nClass: Toybox.Time.RealTimeClockNotValidException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.Time.RealTimeClockNotValidException 
 
 show all Overview
 Indicates that the Real-Time Clock (RTC) value is not secure, i.e. not synced with trusted sources, such as GPS. Since: API Level 3.0.11 Instance Method Summary collapse 
 initialize (msg as Lang.String ) 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Since: API Level 3.0.11 Generated Dec 11, 2024, 8:58:43 AM


# [Timer (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Timer.html)nModule: Toybox.Timer
 Overview
 The Timer module allows access to a Timer object. This Timer can be used to run code at some point in the future or at a regular interval. Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Watch Face 
 Widget 
 
 Classes Under Namespace
 Classes: Timer Generated Dec 11, 2024, 8:58:43 AM


# [Timer (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Timer/Timer.html)nClass: Toybox.Timer.Timer
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Timer.Timer 
 
 show all Overview
 A Timer object will invoke a callback function after a specified number of milliseconds. There are two types of timers: one-shot or repeating. A one-shot Timer will only run once after the Timer expires, while a repeating Timer will invoke the callback function every n milliseconds until stop() is called. If a repeating Timer fails to run before its next execution time, then any missed executions will be skipped. The number of available timers (default 3) and the minimum time value (default 50 ms) depends on the host system. An error will occur if too many timers are set. Example: Create a counter that increments by one each second using Toybox.Timer; var myCount = 0; function timerCallback() { myCount += 1; Ui.requestUpdate(); } function onLayout(dc) { var myTimer = new Timer.Timer(); myTimer.start(method(:timerCallback), 1000, true); } Since: API Level 1.0.0 Instance Method Summary collapse 
 start (callback as Lang.Method () as Void , time as Lang.Number , repeat as Lang.Boolean ) as Void Start the Timer. 
 stop () as Void Stops the Timer from running. 
 
 Instance Method Details
 start(callback as Lang.Method () as Void , time as Lang.Number , repeat as Lang.Boolean ) as Void 
 Start the Timer. Note: Will cause an app crash if called from a watch face app while in low power mode Parameters: callback — ( Lang.Method ) — A function to call after the Timer completes 
 time — ( Lang.Number ) — The number of milliseconds to wait before invoking callback 
 repeat — ( Lang.Boolean ) — Set to true to have the Timer repeat until stop() is called 
 
 Since: API Level 1.0.0 stop() as Void 
 Stops the Timer from running. This only needs to be called for repeating timers. A Timer can be started again by calling start(). Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:43 AM


# [UserProfile (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/UserProfile.html)nModule: Toybox.UserProfile
 Overview
 The UserProfile module will allow apps to access user information. The module contains the GENDER_* enum to retrieve gender information from the user profile. The HR_ZONE_SPORT_* enum also provides constants for defining different sport type. This is used to retrieve Heart Rate Zones specific to that sport. Example: Simple UserProfile module use using Toybox.UserProfile; var profile = UserProfile.getProfile(); System.out.println("The user was born in " + profile.birthYear); Since: API Level 1.0.0 Requires Permission: UserProfile 
 
 Classes Under Namespace
 Classes: Profile , UserActivity , UserActivityHistoryIterator Constant Summary
 Gender
 Since: API Level 1.0.0 Name Value Since Description See Also 
 GENDER_FEMALE 0 API Level 1.0.0 
 GENDER_MALE 1 API Level 1.0.0 
 GENDER_UNSPECIFIED 2 API Level 4.2.3 
 SportHrZone
 Since: API Level 1.0.0 Name Value Since Description See Also 
 HR_ZONE_SPORT_GENERIC 0 API Level 1.2.6 
 HR_ZONE_SPORT_RUNNING 1 API Level 1.2.6 
 HR_ZONE_SPORT_BIKING 2 API Level 1.2.6 
 HR_ZONE_SPORT_SWIMMING 3 API Level 1.2.6 
 Instance Method Summary collapse 
 getCurrentSport () as UserProfile.SportHrZone Return the sport for which the current activity retrieves heart rate zone thresholds. 
 getHeartRateZones (sport as UserProfile.SportHrZone ) as Lang.Array &lt; Lang.Number &gt; Retrieve an Array of the current heart rate zone threshold values in beats per minute (bpm) The returned Array contains zone values as follows: * min zone 1 - The minimum heart rate threshold for zone 1 * max zone 1 - The maximum heart rate threshold for zone 1 * max zone 2 - The maximum heart rate threshold for zone 2 * max zone 3 - The maximum heart rate threshold for zone 3 * max zone 4 - The maximum heart rate threshold for zone 4 * max zone 5 - The maximum heart rate threshold for zone 5. 
 getProfile () as UserProfile.Profile Retrieve the current Profile object. 
 getUserActivityHistory () as UserProfile.UserActivityHistoryIterator Get an iterator for Activity history for the user. 
 
 Instance Method Details
 getCurrentSport() as UserProfile.SportHrZone 
 Return the sport for which the current activity retrieves heart rate zone thresholds. If the active sport does not have sport specific zones, it will return HR_ZONE_SPORT_GENERIC . Example: using Toybox.UserProfile; var profile = UserProfile.getCurrentSport(); Returns: UserProfile.SportHrZone — The current HR zone sport from the HR_ZONE_SPORT_* enum. 
 
 Since: API Level 1.2.6 getHeartRateZones(sport as UserProfile.SportHrZone ) as Lang.Array &lt; Lang.Number &gt; 
 Retrieve an Array of the current heart rate zone threshold values in beats per minute (bpm) The returned Array contains zone values as follows: min zone 1 - The minimum heart rate threshold for zone 1 
 max zone 1 - The maximum heart rate threshold for zone 1 
 max zone 2 - The maximum heart rate threshold for zone 2 
 max zone 3 - The maximum heart rate threshold for zone 3 
 max zone 4 - The maximum heart rate threshold for zone 4 
 max zone 5 - The maximum heart rate threshold for zone 5 
 
 Parameters: sport — ( UserProfile.SportHrZone ) — The sport that zones are being requested from. Should be a HR_ZONE_SPORT_* value. 
 
 Example: Use the HR_ZONE_SPORT_* enum to get the zone for that specific sport using Toybox.UserProfile; var genericZoneInfo = UserProfile.getHeartRateZones(UserProfile.HR_ZONE_SPORT_GENERIC); Returns: Lang.Array — An Array of zone thresholds for the requested sport. 
 
 Since: API Level 1.2.6 getProfile() as UserProfile.Profile 
 Retrieve the current Profile object. Example: using Toybox.UserProfile; var profile = UserProfile.getProfile(); Returns: UserProfile.Profile — The Profile object for the current user 
 
 Since: API Level 1.0.0 getUserActivityHistory() as UserProfile.UserActivityHistoryIterator 
 Get an iterator for Activity history for the user Example: Shows the use of UserActivityHistoryIterator using Toybox.UserProfile; using Toybox.System; // get a UserActivityHistoryIterator object var userActivityIterator = UserProfile.getUserActivityHistory(); var sample = userActivityIterator.next(); // get the user activity data while (sample != null) { System.println("Sample: " + sample.userActivityData); // print the current sample sample = userActivityIterator.next(); } Returns: UserProfile.UserActivityHistoryIterator — Iterator object 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [Profile (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/UserProfile/Profile.html)nClass: Toybox.UserProfile.Profile
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.UserProfile.Profile 
 
 show all Overview
 The profile object contains user information. Values may be null if the value has not been configured or cannot be calculated. Since: API Level 1.0.0 Instance Member Summary collapse 
 activityClass as Lang.Number or Null Activity level as configured by the user. 
 averageRestingHeartRate as Lang.Number or Null Average resting heart rate This value is calculated based on historical data. 
 birthYear as Lang.Number or Null Birth year as configured by the user. 
 gender as UserProfile.Gender or Null Gender as configured by the user. 
 height as Lang.Number or Null Height as configured by the user. 
 restingHeartRate as Lang.Number or Null Restring heart rate as configured by the user. 
 runningStepLength as Lang.Number or Null Running step length as configured by the user. 
 sleepTime as Time.Duration or Null Typical sleep time as configured by the user. 
 vo2maxCycling as Lang.Number or Null Cycling VO2 Max This value is calculated based on historical data. 
 vo2maxRunning as Lang.Number or Null Running VO2 Max This value is calculated based on historical data. 
 wakeTime as Time.Duration or Null Typical wake time as configured by the user. 
 walkingStepLength as Lang.Number or Null Walking step length as configured by the user. 
 weight as Lang.Number or Null Weight as configured by the user. 
 
 Instance Attribute Details
 var activityClass as Lang.Number or Null 
 Activity level as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — The activity level as a value from 0-100. 
 
 var averageRestingHeartRate as Lang.Number or Null 
 Average resting heart rate This value is calculated based on historical data. It may be null if there is insufficient data to produce a result. Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number — The seven day average resting heart rate. Units are beats/min (bpm). 
 
 var birthYear as Lang.Number or Null 
 Birth year as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — The birth year as a four digit Number. 
 
 var gender as UserProfile.Gender or Null 
 Gender as configured by the user Since: API Level 1.0.0 Returns: UserProfile.Gender 
 
 var height as Lang.Number or Null 
 Height as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — Height of the user in centimeters (cm) 
 
 var restingHeartRate as Lang.Number or Null 
 Restring heart rate as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — The user's configured resting heart rate in beats per minute (bpm) 
 
 var runningStepLength as Lang.Number or Null 
 Running step length as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — Running step length in millimeters (mm) 
 
 var sleepTime as Time.Duration or Null 
 Typical sleep time as configured by the user Since: API Level 1.0.0 Returns: Time.Duration — A Duration since local midnight 
 
 var vo2maxCycling as Lang.Number or Null 
 Cycling VO2 Max This value is calculated based on historical data. It may be null if there is insufficient data to produce a result. Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number — The VO2 Max value for cycling activity. Units are mL/kg/min. 
 
 var vo2maxRunning as Lang.Number or Null 
 Running VO2 Max This value is calculated based on historical data. It may be null if there is insufficient data to produce a result. Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Number — The VO2 Max value for running activity. Units are mL/kg/min. 
 
 var wakeTime as Time.Duration or Null 
 Typical wake time as configured by the user Since: API Level 1.0.0 Returns: Time.Duration — A Duration since local midnight 
 
 var walkingStepLength as Lang.Number or Null 
 Walking step length as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — Walking step length in millimeters (mm) 
 
 var weight as Lang.Number or Null 
 Weight as configured by the user Since: API Level 1.0.0 Returns: Lang.Number — Weight in grams (g) 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [UserActivity (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/UserProfile/UserActivity.html)nClass: Toybox.UserProfile.UserActivity
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.UserProfile.UserActivity 
 
 show all Overview
 A class for storing user activity information. Since: API Level 3.3.0 Instance Member Summary collapse 
 distance as Lang.Number or Null Distance covered by the activity in meters. 
 duration as Time.Duration or Null Duration of the activity. 
 startTime as Time.Moment or Null Start time of the activity. 
 type as Activity.Sport or Null Sport type of the activity. 
 
 Instance Attribute Details
 var distance as Lang.Number or Null 
 Distance covered by the activity in meters Since: API Level 3.3.0 Returns: Lang.Number — or null 
 
 var duration as Time.Duration or Null 
 Duration of the activity Since: API Level 3.3.0 Returns: Time.Duration — or null 
 
 var startTime as Time.Moment or Null 
 Start time of the activity Since: API Level 3.3.0 Returns: Time.Moment — or null 
 
 var type as Activity.Sport or Null 
 Sport type of the activity. Since: API Level 3.3.0 Returns: Activity.Sport — SPORT_* enum value or null 
 
 Generated Dec 11, 2024, 8:58:43 AM


# [UserActivityHistoryIterator (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/UserProfile/UserActivityHistoryIterator.html)nClass: Toybox.UserProfile.UserActivityHistoryIterator
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.UserProfile.UserActivityHistoryIterator 
 
 show all Overview
 Get an iterator for Activity history for the user Since: API Level 3.3.0 Instance Method Summary collapse 
 next () as UserProfile.UserActivity Get the data and increment the iterator to next entry. 
 
 Instance Method Details
 next() as UserProfile.UserActivity 
 Get the data and increment the iterator to next entry Returns: UserProfile.UserActivityHistoryIterator 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:43 AM


# [WatchUi (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi.html)nModule: Toybox.WatchUi
 Overview
 The WatchUi module contains user interface elements available within apps. WatchUi provides several classes that represent Views, or what is displayed on the screen of a device. Also available are UI elements like on-screen menus, progress bars, buttons, and various pickers. More abstract classes represent all drawable objects, such as bitmaps and text. Note: All keys in the key types enum listed after EXTENDED_KEYS (16) were added after ConnectIQ version 1.1.2. Before evaluating these keys, check for the availability of these keys with a has check: if (Toybox.WatchUi has :EXTENDED_KEYS) ... Since: API Level 1.0.0 App Types: Watch App 
 Audio Content Provider 
 Data Field 
 Watch Face 
 Widget 
 
 Classes Under Namespace
 Classes: ActionMenu , ActionMenuDelegate , ActionMenuItem , AnimationDelegate , AnimationLayer , AnimationResource , BehaviorDelegate , Bitmap , BitmapResource , Button , CheckboxMenu , CheckboxMenuItem , ClickEvent , Confirmation , ConfirmationDelegate , CustomMenu , CustomMenuItem , DataField , DataFieldAlert , DragEvent , Drawable , FlickEvent , FontResource , GlanceView , GlanceViewDelegate , IconMenuItem , InputDelegate , InvalidMenuItemTypeException , InvalidPointException , InvalidSelectableStateException , KeyEvent , Layer , MapMarker , MapPolyline , MapTrackView , MapView , Menu , Menu2 , Menu2InputDelegate , MenuInputDelegate , MenuItem , NumberPicker , NumberPickerDelegate , Picker , PickerDelegate , PickerFactory , ProgressBar , ReviewResponseToken , Selectable , SelectableEvent , SimpleDataField , SwipeEvent , Text , TextArea , TextPicker , TextPickerDelegate , ToggleMenuItem , View , ViewLoop , ViewLoopDelegate , ViewLoopFactory , WatchFace , WatchFaceDelegate , WatchFacePowerInfo Constant Summary
 Key
 Since: API Level 1.0.0 Name Value Since Description See Also 
 KEY_POWER 0 API Level 1.0.0 The power key 
 KEY_LIGHT 1 API Level 1.0.0 The light key 
 KEY_ZIN 2 API Level 1.0.0 The zoom in key 
 KEY_ZOUT 3 API Level 1.0.0 The zoom out key 
 KEY_ENTER 4 API Level 1.0.0 The enter key 
 KEY_ESC 5 API Level 1.0.0 The escape key 
 KEY_FIND 6 API Level 1.0.0 The find key 
 KEY_MENU 7 API Level 1.0.0 The menu key 
 KEY_DOWN 8 API Level 1.0.0 The down key 
 KEY_DOWN_LEFT 9 API Level 1.0.0 The down left key 
 KEY_DOWN_RIGHT 10 API Level 1.0.0 The down key 
 KEY_LEFT 11 API Level 1.0.0 The left key 
 KEY_RIGHT 12 API Level 1.0.0 The right key 
 KEY_UP 13 API Level 1.0.0 The up key 
 KEY_UP_LEFT 14 API Level 1.0.0 The up-left 
 KEY_UP_RIGHT 15 API Level 1.0.0 The up-right key 
 EXTENDED_KEYS 16 API Level 1.1.2 Indicates extended key support 
 KEY_PAGE 17 API Level 1.1.2 The page key 
 KEY_START 18 API Level 1.1.2 The start key 
 KEY_LAP 19 API Level 1.1.2 The lap key 
 KEY_RESET 20 API Level 1.1.2 The reset key 
 KEY_SPORT 21 API Level 1.1.2 The sport key 
 KEY_CLOCK 22 API Level 1.1.2 The clock key 
 KEY_MODE 23 API Level 1.1.2 The mode key 
 AnimationType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 ANIM_TYPE_LINEAR 0 API Level 1.0.0 Animation with a constant speed 
 ANIM_TYPE_EASE_IN 1 API Level 1.0.0 Animation that increases in speed from start to end 
 ANIM_TYPE_EASE_OUT 2 API Level 1.0.0 Animation that decreases in speed from start to end 
 ANIM_TYPE_EASE_IN_OUT 3 API Level 1.0.0 Animation that increases in speed from the start, then decreases in speed toward the end 
 KeyPressType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 PRESS_TYPE_DOWN 0 API Level 1.1.2 The key is pressed down 
 PRESS_TYPE_UP 1 API Level 1.1.2 The key is released 
 PRESS_TYPE_ACTION 2 API Level 1.1.2 The key's action is performed 
 ClickType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 CLICK_TYPE_TAP 0 API Level 1.0.0 A tap on the screen 
 CLICK_TYPE_HOLD 1 API Level 1.0.0 A press and hold on the screen 
 CLICK_TYPE_RELEASE 2 API Level 1.0.0 A release of a hold on the screen 
 MapMarkerIcon
 Since: API Level 1.0.0 Name Value Since Description See Also 
 MAP_MARKER_ICON_PIN 0 API Level 3.0.0 The default Garmin map marker pin icon 
 MapMode
 Since: API Level 1.0.0 Name Value Since Description See Also 
 MAP_MODE_PREVIEW 0 API Level 3.0.0 The preview mode for a MapView 
 MAP_MODE_BROWSE 1 API Level 3.0.0 The browse mode for a MapView 
 SwipeDirection
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SWIPE_UP 0 API Level 1.0.0 A swipe in the upward direction 
 SWIPE_RIGHT 1 API Level 1.0.0 A swipe towards the right 
 SWIPE_DOWN 2 API Level 1.0.0 A swipe in the downward direction 
 SWIPE_LEFT 3 API Level 1.0.0 A swipe towards the left 
 DragType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 DRAG_TYPE_START 0 API Level 3.3.0 Start of a screen drag 
 DRAG_TYPE_CONTINUE 1 API Level 3.3.0 Continuation of a screen drag 
 DRAG_TYPE_STOP 2 API Level 3.3.0 Stop of a screen drag 
 ControlBarLeftButton
 Since: API Level 4.1.2 Name Value Since Description See Also 
 CONTROL_BAR_LEFT_BUTTON_BACK 0 API Level 4.1.2 
 CONTROL_BAR_LEFT_BUTTON_CANCEL 1 API Level 4.1.2 
 ControlBarRightButton
 Since: API Level 4.1.2 Name Value Since Description See Also 
 CONTROL_BAR_RIGHT_BUTTON_ACCEPT 2 API Level 4.1.2 
 CONTROL_BAR_RIGHT_BUTTON_MENU 3 API Level 4.1.2 
 AnalogClockState
 Set the state for analog clock hands Since: API Level 3.3.0 Name Value Since Description See Also 
 ANALOG_CLOCK_STATE_RESTING 0 API Level 3.3.0 Set the clock hands to resting position 
 ANALOG_CLOCK_STATE_SYSTEM_TIME 1 API Level 3.3.0 Set the clock hands to system time 
 ANALOG_CLOCK_STATE_HOLDING 2 API Level 3.3.0 Set the clock hands to the specified position 
 MenuTheme
 Menu theme for supported devices Since: API Level 4.1.8 Name Value Since Description See Also 
 MENU_THEME_DEFAULT 0 API Level 4.1.8 The default theme color as specified by the device. 
 MENU_THEME_BLUE 1 API Level 4.1.8 
 MENU_THEME_CYAN 2 API Level 4.1.8 
 MENU_THEME_GREEN 3 API Level 4.1.8 
 MENU_THEME_YELLOW 4 API Level 4.1.8 
 MENU_THEME_ORANGE 5 API Level 4.1.8 
 MENU_THEME_RED 6 API Level 4.1.8 
 MENU_THEME_PINK 7 API Level 4.1.8 
 MENU_THEME_PURPLE 8 API Level 4.1.8 
 MENU_THEME_GREEN_YELLOW 9 API Level 4.1.8 
 Confirm
 Since: API Level 1.0.0 Name Value Since Description See Also 
 CONFIRM_NO 0 API Level 1.0.0 
 CONFIRM_YES 1 API Level 1.0.0 
 NumberPickerMode
 This has been deprecated This enum may be removed after System 3. Since: API Level 1.0.0 Name Value Since Description See Also 
 NUMBER_PICKER_DISTANCE 0 API Level 1.0.0 A Float in meters (m) 
 NUMBER_PICKER_TIME 1 API Level 1.0.0 A Duration 
 NUMBER_PICKER_TIME_MIN_SEC 2 API Level 1.0.0 A Duration 
 NUMBER_PICKER_TIME_OF_DAY 3 API Level 1.0.0 A Duration representing the number of seconds since midnight 
 NUMBER_PICKER_WEIGHT 4 API Level 1.0.0 A Float in kilograms (kg) 
 NUMBER_PICKER_HEIGHT 5 API Level 1.0.0 A Float in meters (m) 
 NUMBER_PICKER_CALORIES 6 API Level 1.0.0 A Number 
 NUMBER_PICKER_BIRTH_YEAR 7 API Level 1.0.0 A Number 
 SlideType
 Since: API Level 1.0.0 Name Value Since Description See Also 
 SLIDE_IMMEDIATE 0 API Level 1.0.0 No transition. 
 SLIDE_LEFT 1 API Level 1.0.0 The View slides to the left. 
 SLIDE_RIGHT 2 API Level 1.0.0 The View slides to the right. 
 SLIDE_DOWN 3 API Level 1.0.0 The View slides down. 
 SLIDE_UP 4 API Level 1.0.0 The View slides up. 
 SLIDE_BLINK 5 API Level 3.1.0 The View fades in. 
 LayoutVerticalAlignment
 Since: API Level 1.0.0 Name Value Since Description See Also 
 LAYOUT_VALIGN_TOP -0x7FFFFFFF API Level 1.2.0 Set a Drawable object's locY property to this to align it to the top edge of the device context ( Dc ). 
 LAYOUT_VALIGN_BOTTOM -0x7FFFFFFE API Level 1.2.0 Set a Drawable object's locY property to this to align it to the bottom edge of the device context ( Dc ). 
 LAYOUT_VALIGN_CENTER -0x7FFFFFFD API Level 1.2.0 Set a Drawable object's locY property to this to center it vertically in the device context ( Dc ). 
 LAYOUT_VALIGN_START -0x7FFFFFFC API Level 1.2.0 Set a Drawable object's locY property to this to make it equal to its parent's locY property. 
 LayoutHorizontalAlignment
 Since: API Level 1.0.0 Name Value Since Description See Also 
 LAYOUT_HALIGN_LEFT -0x7FFFFFFF API Level 1.2.0 Set a Drawable object's locX property to this to align it along the left edge of the device context ( Dc ). 
 LAYOUT_HALIGN_RIGHT -0x7FFFFFFE API Level 1.2.0 Set a Drawable object's locX property to this to align it along the right edge of the device context ( Dc ). 
 LAYOUT_HALIGN_CENTER -0x7FFFFFFD API Level 1.2.0 Set a Drawable object's locX property to this to center it horizontally in the device context ( Dc ). 
 LAYOUT_HALIGN_START -0x7FFFFFFC API Level 1.2.0 Set a Drawable object's locX property to this to make it equal to its parent's locX property. 
 AnimationEvent
 Since: API Level 1.0.0 Name Value Since Description See Also 
 ANIMATION_EVENT_COMPLETE 0 API Level 3.1.0 Indicates the completion of an animation. 
 ANIMATION_EVENT_CANCELED 1 API Level 3.1.0 Indicates the cancel of the animation playback 
 ActionMenuTheme
 The theme for the ActionMenu Since: API Level 3.4.0 Name Value Since Description See Also 
 ACTION_MENU_THEME_DARK 0 API Level 3.4.0 Dark theme for the action menu 
 ACTION_MENU_THEME_LIGHT 1 API Level 3.4.0 Light theme for the action menu 
 ReviewRequestStatus
 Enum class for makeReviewTokenRequest return status Since: API Level 3.4.2 Name Value Since Description See Also 
 REVIEW_REQUEST_STATUS_GRANTED 0 API Level 3.4.2 
 REVIEW_REQUEST_STATUS_DENIED 1 API Level 3.4.2 
 REVIEW_REQUEST_STATUS_FAILED 2 API Level 3.4.2 
 Typedef Summary collapse 
 InputDelegates as WatchUi.InputDelegate or WatchUi.BehaviorDelegate or WatchUi.ConfirmationDelegate or WatchUi.MenuInputDelegate or WatchUi.NumberPickerDelegate or WatchUi.PickerDelegate or WatchUi.TextPickerDelegate or WatchUi.WatchFaceDelegate or WatchUi.Menu2InputDelegate or WatchUi.ViewLoopDelegate 
 Resource as Lang.Array or Lang.Dictionary or Lang.String or WatchUi.AnimationResource or WatchUi.BitmapResource or WatchUi.FontResource or Graphics.BitmapReference or Graphics.FontReference 
 Views as WatchUi.View or WatchUi.Menu or WatchUi.TextPicker or WatchUi.ProgressBar or WatchUi.Confirmation or WatchUi.NumberPicker or WatchUi.ViewLoop 
 
 Instance Method Summary collapse 
 animate (object as Lang.Object , property as Lang.Symbol , type as WatchUi.AnimationType , start as Lang.Numeric , stop as Lang.Numeric , period as Lang.Numeric , callback as Null or Lang.Method () as Void ) as Void Animate an Object. 
 cancelAllAnimations () as Void Cancel animations started with WatchUi.animate() Stop all animations that were started with WatchUi.animate() . 
 getCurrentView () as [ WatchUi.View or Null , WatchUi.InputDelegates or Null ] Get the current view that is displayed in the UI. 
 getSubscreen () as Graphics.BoundingBox or Null Get the subscreen area in the display. 
 loadResource (resource as Lang.ResourceId ) as WatchUi.Resource Load a resource from the executable. 
 makeReviewTokenRequest (callback as Lang.Method (responseStatus as WatchUi.ReviewRequestStatus , token as WatchUi.ReviewResponseToken or Null ) as Void ) as Void Initiate a request to ask for this app to be reviewed. 
 popView (transition as WatchUi.SlideType ) as Void Pop the current View from the View stack. 
 pushView (view as WatchUi.Views , delegate as WatchUi.InputDelegates or Null , transition as WatchUi.SlideType ) as Lang.Boolean Push a View onto the View stack. 
 requestUpdate () as Void Request a call to the onUpdate() method for the current View. 
 showActionMenu (menu as WatchUi.ActionMenu , delegate as WatchUi.ActionMenuDelegate ) as Void Push an action menu to the display. 
 showToast (text as Lang.String or Lang.ResourceId , options as { :icon as WatchUi.BitmapResource or Graphics.BitmapReference or Lang.ResourceId } or Null ) as Void Push a toast notification to the display. 
 startUserReview (token as WatchUi.ReviewResponseToken ) as Void Start the app review UI flow. 
 switchToView (view as WatchUi.Views , delegate as WatchUi.InputDelegates or Null , transition as WatchUi.SlideType ) as Void Pop the current View from the View stack and push a new one. 
 
 Typedef Details
 InputDelegates as WatchUi.InputDelegate or WatchUi.BehaviorDelegate or WatchUi.ConfirmationDelegate or WatchUi.MenuInputDelegate or WatchUi.NumberPickerDelegate or WatchUi.PickerDelegate or WatchUi.TextPickerDelegate or WatchUi.WatchFaceDelegate or WatchUi.Menu2InputDelegate or WatchUi.ViewLoopDelegate 
 Since: API Level 1.0.0 Resource as Lang.Array or Lang.Dictionary or Lang.String or WatchUi.AnimationResource or WatchUi.BitmapResource or WatchUi.FontResource or Graphics.BitmapReference or Graphics.FontReference 
 Since: API Level 1.0.0 Views as WatchUi.View or WatchUi.Menu or WatchUi.TextPicker or WatchUi.ProgressBar or WatchUi.Confirmation or WatchUi.NumberPicker or WatchUi.ViewLoop 
 Since: API Level 1.0.0 Instance Method Details
 animate(object as Lang.Object , property as Lang.Symbol , type as WatchUi.AnimationType , start as Lang.Numeric , stop as Lang.Numeric , period as Lang.Numeric , callback as Null or Lang.Method () as Void ) as Void 
 Animate an Object. Animate works by changing an object property over time, such as the x-position of a Drawable. The animation starts after the call and runs the length of the specified period. During this time, the View object's onUpdate() method will be invoked at an increased rate to facilitate animation. Note: Will cause an app crash if called from background or data field app, or from watch face while in low power mode Parameters: object — ( Lang.Object ) — The object to animate 
 property — ( Lang.Symbol ) — The Symbol of the object's property to animate (e.g. :locX, :locY, etc.) 
 type — ( WatchUi.AnimationType ) — A WatchUi.ANIM_TYPE_* value 
 start — ( Lang.Number ) — The starting value of the property 
 stop — ( Lang.Number ) — The ending value of the property 
 period — ( Lang.Float ) — The duration of the animation in seconds 
 callback — ( Lang.Method ) — A Method to call when the animation is complete; this can be null 
 
 Example: Move a bitmap across the screen from left to right using System.WatchUi; square = new Ui.Bitmap({ :rezId=&gt;Rez.Drawables.square, :locX=&gt;10, :locY=&gt;30 }); WatchUi.animate(square, :locX, Ui.ANIM_TYPE_LINEAR, 10, 200, 10, null); See Also: Toybox.WatchUi.Drawable 
 Toybox.WatchUi.Bitmap 
 
 Since: API Level 1.0.0 cancelAllAnimations() as Void 
 Cancel animations started with WatchUi.animate() Stop all animations that were started with WatchUi.animate() . This will leave all animations at their final frame, as if WatchUi.animate() ran to completion. See Also: WatchUi.animate() 
 
 Since: API Level 3.1.7 getCurrentView() as [ WatchUi.View or Null , WatchUi.InputDelegates or Null ] 
 Get the current view that is displayed in the UI Returns: Lang.Array — An array containing the view and the delegate. 
 
 Since: API Level 3.4.0 getSubscreen() as Graphics.BoundingBox or Null 
 Get the subscreen area in the display. Supported Devices: [ View devices ] Descent™ G1 / G1 Solar
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 
 Returns: Graphics.BoundingBox — object or null if no subscreen is present or if a virtual subscreen is present but not used for normal views. 
 
 Since: API Level 3.2.7 loadResource(resource as Lang.ResourceId ) as WatchUi.Resource 
 Load a resource from the executable. Note: Toybox::Graphics::BitmapReference and Toybox::Graphics::FontReference are returned for Toybox::WatchUi::BitmapResource and Toybox::WatchUi::FontResource in CIQ 4.0.0 and later. Parameters: resource — ( Lang.ResourceId ) — An identifier for a resource defined in the project's resources.xml file 
 
 Example: Loading a String resource // The resources.xml file contents: // &lt;resources&gt; // &lt;string id="AppName"&gt;APEELingApp&lt;/string&gt; // &lt;/resources&gt; using Toybox.WatchUi; var banana = WatchUi.loadResource(Rez.Strings.AppName); Returns: Lang.Array , Lang.Dictionary , Lang.String , WatchUi.AnimationResource , WatchUi.BitmapResource , WatchUi.FontResource , Graphics.BitmapReference , Graphics.FontReference 
 
 Since: API Level 1.0.0 makeReviewTokenRequest(callback as Lang.Method (responseStatus as WatchUi.ReviewRequestStatus , token as WatchUi.ReviewResponseToken or Null ) as Void ) as Void 
 Initiate a request to ask for this app to be reviewed Parameters: callback — ( Lang.Method ) — Callback to invoke when the review token request has completed. 
 
 Supported Devices: [ View devices ] D2™ Air X10
 D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 3.4.2 popView(transition as WatchUi.SlideType ) as Void 
 Pop the current View from the View stack. Parameters: transition — ( WatchUi.SlideType ) — A WatchUi.SLIDE_* value 
 
 Since: API Level 1.0.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called from background, data field, glance, or watch face app; or of called from the base page of a widget 
 
 pushView(view as WatchUi.Views , delegate as WatchUi.InputDelegates or Null , transition as WatchUi.SlideType ) as Lang.Boolean 
 Push a View onto the View stack. Parameters: view — ( WatchUi.View ) — View to push 
 delegate — ( WatchUi.BehaviorDelegate , WatchUi.ConfirmationDelegate , WatchUi.InputDelegate , WatchUi.MenuInputDelegate , WatchUi.NumberPickerDelegate , WatchUi.PickerDelegate , WatchUi.TextPickerDelegate , WatchUi.WatchFaceDelegate ) — The input delegate to handle input for the View 
 transition — ( WatchUi.SlideType ) — A WatchUi.SLIDE_* value 
 
 Since: API Level 1.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown when view is type MapView and the visible map area parameters are invalid 
 ( Lang.OperationNotAllowedException ) — Thrown if called from background, data field, glance, or watch face app; or if the new view is a DataField , a GlanceView , or a WatchFace 
 
 requestUpdate() as Void 
 Request a call to the onUpdate() method for the current View. See Also: View.onUpdate() 
 
 Since: API Level 1.0.0 showActionMenu(menu as WatchUi.ActionMenu , delegate as WatchUi.ActionMenuDelegate ) as Void 
 Push an action menu to the display Note: An action menu will dismiss it self on either user selecting a menu item or pressing back button. Parameters: menu — ( WatchUi.ActionMenu ) — An action menu object. 
 delegate — ( WatchUi.ActionMenuDelegate ) — An action menu delegate object. 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 3.4.0 showToast(text as Lang.String or Lang.ResourceId , options as { :icon as WatchUi.BitmapResource or Graphics.BitmapReference or Lang.ResourceId } or Null ) as Void 
 Push a toast notification to the display Parameters: text — ( Lang.String , Lang.ResourceId ) — The text to display in the notification toast. 
 options — ( Lang.Dictionary ) — A Dictionary of options. :icon — ( Graphics.BitmapReference , WatchUi.BitmapResource , Lang.ResourceId ) — The icon to display with this notification. If no icon is provided and the system requires an icon for a toast, the app icon will be used. 
 
 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 3.4.0 startUserReview(token as WatchUi.ReviewResponseToken ) as Void 
 Start the app review UI flow Parameters: token — ( WatchUi.ReviewResponseToken ) — The token that was passed as a parameter to a successful call to the callback parameter in makeReviewTokenRequest . 
 
 Supported Devices: [ View devices ] D2™ Air X10
 D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Since: API Level 3.4.2 Throws: ( Lang.OperationNotAllowedException ) — if token is not a ReviewResponseToken. 
 
 switchToView(view as WatchUi.Views , delegate as WatchUi.InputDelegates or Null , transition as WatchUi.SlideType ) as Void 
 Pop the current View from the View stack and push a new one. Note: Prior to ConnectIQ 3.1, this method only supported switching to user-defined View objects, and would only accept InputDelegate or BehaviorDelegate objects as delegates for the given View. Parameters: view — ( WatchUi.View ) — The View object to push 
 delegate — ( WatchUi.BehaviorDelegate , WatchUi.InputDelegate ) — The input delegate to handle input for the View 
 transition — ( WatchUi.SlideType ) — A WatchUi.SLIDE_* value 
 
 Since: API Level 1.0.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called from background, data field, glance, or watch face app; or of called from the base page of a widget and the new view is native; or if the new view is a DataField , a GlanceView , or a WatchFace 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [ActionMenu (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ActionMenu.html)nClass: Toybox.WatchUi.ActionMenu
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ActionMenu 
 
 show all Overview
 Class that represents an action menu view. Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Typedef Summary collapse 
 Options as { :theme as WatchUi.ActionMenuTheme } 
 
 Instance Method Summary collapse 
 addItem (item as WatchUi.ActionMenuItem ) as Void Add Menuitem to an ActionMenu. 
 initialize (options as ActionMenu.Options or Null ) Constructor for the ActionMenu. 
 
 Typedef Details
 Options as { :theme as WatchUi.ActionMenuTheme } 
 Since: API Level 3.4.0 Instance Method Details
 addItem(item as WatchUi.ActionMenuItem ) as Void 
 Add Menuitem to an ActionMenu Parameters: item — ( WatchUi.ActionMenuItem ) — The ActionMenuItem to add to the ActionMenu 
 
 Since: API Level 3.4.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if item is not an ActionMenuItem 
 
 initialize(options as ActionMenu.Options or Null ) 
 Constructor for the ActionMenu. Parameters: options — ( Lang.Dictionary ) — Options for the ActionMenu. :theme — ( WatchUi.ActionMenuTheme ) — theme for the action menu UI. 
 
 
 
 Since: API Level 3.4.0 Throws: ( Lang.InvalidValueException ) — If invalid theme is provided 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [ActionMenuDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ActionMenuDelegate.html)nClass: Toybox.WatchUi.ActionMenuDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ActionMenuDelegate 
 
 show all Overview
 Class that represents an action menu delegate, which can be used to relay events regarding the action menu. Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor for the ActionMenuDelegate. 
 onBack () as Void An ActionMenu back key was pressed. 
 onSelect (item as WatchUi.ActionMenuItem ) as Void An ActionMenuItem was selected. 
 
 Instance Method Details
 initialize() 
 Constructor for the ActionMenuDelegate Since: API Level 3.4.0 onBack() as Void 
 An ActionMenu back key was pressed. Since: API Level 3.4.0 onSelect(item as WatchUi.ActionMenuItem ) as Void 
 An ActionMenuItem was selected. Parameters: item — ( WatchUi.ActionMenuItem ) — The selected ActionMenuItem. 
 
 Since: API Level 3.4.0 Generated Dec 11, 2024, 8:58:44 AM


# [ActionMenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ActionMenuItem.html)nClass: Toybox.WatchUi.ActionMenuItem
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ActionMenuItem 
 
 show all Overview
 Class that represents an action menu item. Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Typedef Summary collapse 
 Options as { :label as Lang.String or Lang.ResourceId } 
 
 Instance Method Summary collapse 
 getId () as Lang.Object or Null Get a MenuItem identifier. 
 getLabel () as Lang.String Get a MenuItem label. 
 initialize (options as ActionMenuItem.Options , identifier as Lang.Object or Null ) Constructor. 
 
 Typedef Details
 Options as { :label as Lang.String or Lang.ResourceId } 
 Since: API Level 3.4.0 Instance Method Details
 getId() as Lang.Object or Null 
 Get a MenuItem identifier. Returns: Lang.Object — The identifier for the MenuItem 
 
 Since: API Level 3.4.0 getLabel() as Lang.String 
 Get a MenuItem label. Returns: Lang.String — The text label for the MenuItem 
 
 Since: API Level 3.4.2 initialize(options as ActionMenuItem.Options , identifier as Lang.Object or Null ) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options. :label — ( Lang.String , Lang.ResourceId ) — label string or string ResourceId for the MenuItem 
 
 
 identifier — ( Lang.Object ) — The identifier for this MenuItem 
 
 Since: API Level 3.4.0 Generated Dec 11, 2024, 8:58:44 AM


# [AnimationDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/AnimationDelegate.html)nClass: Toybox.WatchUi.AnimationDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.AnimationDelegate 
 
 show all Overview
 AnimationDelegate responds to an Animation event. See Also:
 AnimationLayer 
 
 Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 onAnimationEvent (event as WatchUi.AnimationEvent , options as Lang.Dictionary ) as Void Handle an Animation event. 
 
 Instance Method Details
 onAnimationEvent(event as WatchUi.AnimationEvent , options as Lang.Dictionary ) as Void 
 Handle an Animation event. Parameters: event — ( WatchUi.AnimationEvent ) — The animation event, a WatchUi.ANIMATION_EVENT* value 
 options — ( Lang.Dictionary ) — A Dictionary of options 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [AnimationLayer (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/AnimationLayer.html)nClass: Toybox.WatchUi.AnimationLayer
 Inherits: Toybox.WatchUi.Layer Toybox.Lang.Object 
 Toybox.WatchUi.Layer 
 Toybox.WatchUi.AnimationLayer 
 
 show all Overview
 The class that represents an Animation layer Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getDc () as Graphics.Dc or Null getDc will always return null , as the dc buffer of animations can not be updated by user. 
 getResource () as WatchUi.AnimationResource Get the animation resource. 
 initialize (rez as Lang.ResourceId or WatchUi.AnimationResource , options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :identifier as Lang.Object , :visibility as Lang.Boolean } or Null ) Constructor. 
 play (options as { :delegate as WatchUi.AnimationDelegate }) as Lang.Boolean Play animation, animation must be added to and not abandoned by the view before it can be played. 
 stop () as Void Stop a playing animation. 
 
 Instance Method Details
 getDc() as Graphics.Dc or Null 
 getDc will always return null , as the dc buffer of animations can not be updated by user. Since: API Level 3.1.0 getResource() as WatchUi.AnimationResource 
 Get the animation resource Returns: WatchUi.AnimationResource — the WatchUi.AnimationResource 
 
 Since: API Level 3.1.0 initialize(rez as Lang.ResourceId or WatchUi.AnimationResource , options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :identifier as Lang.Object , :visibility as Lang.Boolean } or Null ) 
 Constructor Parameters: rez — ( Lang.ResourceId , WatchUi.AnimationResource ) — either an animation ResourceId or a WatchUi.AnimationResource 
 options — ( Lang.Dictionary ) — A Dictionary of options, can be null :locX — ( Lang.Number ) — The initial absolute, on-screen x-coordinate for the Animation object (optional defaults to 0) 
 :locY — ( Lang.Number ) — The initial absolute, on-screen y-coordinate for the Animation object (optional defaults to 0) 
 :identifier — ( Lang.Object ) — unique object for identification (optional) 
 :visibility — ( Lang.Boolean ) — true if the layer is visible, otherwise false (optional, default to +true+) 
 
 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the rez is not an animation resource or ResourceId 
 
 play(options as { :delegate as WatchUi.AnimationDelegate }) as Lang.Boolean 
 Play animation, animation must be added to and not abandoned by the view before it can be played. This will stop the existing playback first. Parameters: options — ( Lang.Dictionary ) — A Dictionary of options, can be null :delegate — ( WatchUi.AnimationDelegate ) — An AnimationDelegate 
 
 
 
 Returns: Lang.Boolean — true if playback started, otherwise false 
 
 Since: API Level 3.1.0 stop() as Void 
 Stop a playing animation. The last frame of the animation will be persisted in the frame buffer. Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [AnimationResource (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/AnimationResource.html)nClass: Toybox.WatchUi.AnimationResource
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.AnimationResource 
 
 show all Overview
 A representation of an animation resource. AnimationResource objects are returned by the loadResource() method. Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getColorDepth () as Lang.Number Get the color depth in terms of bit/pixel of the animation resource. 
 getFrameRate () as Lang.Number Get the target frame rate of an animation resource. 
 getHeight () as Lang.Number Get the height of an animation resource. 
 getNumberOfFrames () as Lang.Number Get the number of frames of an animation resource. 
 getWidth () as Lang.Number Get the width of an animation resource. 
 toString () as Lang.String Get info about an animation resource as a String. 
 
 Instance Method Details
 getColorDepth() as Lang.Number 
 Get the color depth in terms of bit/pixel of the animation resource. Returns: Lang.Number — Color depth in terms of bit/pixel 
 
 Since: API Level 3.2.0 getFrameRate() as Lang.Number 
 Get the target frame rate of an animation resource. Returns: Lang.Number — Frame rate of the animation in seconds 
 
 Since: API Level 3.1.0 getHeight() as Lang.Number 
 Get the height of an animation resource. Returns: Lang.Number — Height of the animation in pixels 
 
 Since: API Level 3.1.0 getNumberOfFrames() as Lang.Number 
 Get the number of frames of an animation resource. Returns: Lang.Number — Number of frames 
 
 Since: API Level 3.1.0 getWidth() as Lang.Number 
 Get the width of an animation resource. Returns: Lang.Number — Width of the animation in pixels 
 
 Since: API Level 3.1.0 toString() as Lang.String 
 Get info about an animation resource as a String. The info String is formatted as "Animation X x Y" where "X" is the width of the animation and "Y" is the height. Returns: Lang.String — A String representation of the AnimationResource object 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [BehaviorDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/BehaviorDelegate.html)nClass: Toybox.WatchUi.BehaviorDelegate
 Inherits: Toybox.WatchUi.InputDelegate Toybox.Lang.Object 
 Toybox.WatchUi.InputDelegate 
 Toybox.WatchUi.BehaviorDelegate 
 
 show all Overview
 BehaviorDelegate handles behavior input events. A BehaviorDelegate differs from an InputDelegate in that it acts upon device-independent behaviors, such as "next page" and "previous page" instead of device-specific button presses. For example, these behaviors might be mapped to swipe left and swipe right inputs on touch screen devices, while on non-touch screen devices these behaviors might be mapped to physical buttons. Since BehaviorDelegate extends InputDelegate, so it can also act on basic inputs as well. If a BehaviorDelegate returns true for a function (indicating the input was used) then the InputDelegate function that corresponds to the behavior will not be called. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class MyBehaviorDelegate extends BehaviorDelegate { // Detect Menu behavior function onMenu() { System.println("Menu behavior triggered"); return false; // allow InputDelegate function to be called } // Detect Menu button input function onKey(keyEvent) { System.println(keyEvent.getKey()); // e.g. KEY_MENU = 7 return true; } } Since: API Level 1.0.0 Instance Method Summary collapse 
 initialize () Constructor. 
 onBack () as Lang.Boolean Represents the Back behavior. 
 onMenu () as Lang.Boolean Represents the Menu behavior. 
 onNextMode () as Lang.Boolean Represents the Next behavior. 
 onNextPage () as Lang.Boolean Represents the Next Page behavior. 
 onPreviousMode () as Lang.Boolean Represents the Previous Mode behavior. 
 onPreviousPage () as Lang.Boolean Represents the Previous Page behavior. 
 onSelect () as Lang.Boolean Represents the Selection behavior. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 1.0.0 onBack() as Lang.Boolean 
 Represents the Back behavior. This is typically triggered by the back button ( KEY_ESC ). Note: Some devices interpret SWIPE_RIGHT SwipeEvents as KEY_ESC events. On these devices, returning false will cause onKey() to be called rather than onSwipe() . Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onMenu() as Lang.Boolean 
 Represents the Menu behavior. This is typically triggered by the menu button ( KEY_MENU ). Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onNextMode() as Lang.Boolean 
 Represents the Next behavior. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onNextPage() as Lang.Boolean 
 Represents the Next Page behavior. This is typically triggered by the down button ( KEY_DOWN ) or by a SWIPE_UP SwipeEvent on a touch screen. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onPreviousMode() as Lang.Boolean 
 Represents the Previous Mode behavior. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onPreviousPage() as Lang.Boolean 
 Represents the Previous Page behavior. This is typically triggered by the up button ( KEY_UP ) or by a SWIPE_DOWN SwipeEvent on a touch screen. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.0.0 onSelect() as Lang.Boolean 
 Represents the Selection behavior. This is typically triggered by the Start/Enter button ( KEY_ENTER ) or by a CLICK_TYPE_TAP ClickEvent on a touch screen. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [Bitmap (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Bitmap.html)nClass: Toybox.WatchUi.Bitmap
 Inherits: Toybox.WatchUi.Drawable Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 Toybox.WatchUi.Bitmap 
 
 show all Overview
 Bitmap is the class representation of a bitmap resource. A Bitmap can be constructed using the resource compiler and loaded through the resource (Rez) module. See Also:
 Toybox.WatchUi.Drawable 
 
 Example: // The bitmap.xml file contents: // &lt;resources&gt; // &lt;bitmap id="myBitmap" filename="images/myBitmap.png" /&gt; // &lt;/resources&gt; using Toybox.Graphics; using Toybox.WatchUi; class MyWatchView extends WatchUi.View { var myBitmap; function initialize() { View.initialize(); myBitmap = new WatchUi.Bitmap({ :rezId=&gt;Rez.Drawables.myBitmap, :locX=&gt;10, :locY=&gt;30 }); } // Update the view function onUpdate(dc) { myBitmap.draw(dc); } } Since: API Level 1.0.0 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw a Bitmap to the device context ( Dc ). 
 getDimensions () as [ Lang.Numeric , Lang.Numeric ] Get the dimensions of a Bitmap. 
 initialize (options as { :rezId as Lang.ResourceId , :bitmap as Graphics.BitmapType , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) Constructor. 
 setBitmap (bitmap as Graphics.BitmapType or Lang.ResourceId or Null ) as Void Set the resource associated with the Bitmap. 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw a Bitmap to the device context ( Dc ). Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 1.0.0 getDimensions() as [ Lang.Numeric , Lang.Numeric ] 
 Get the dimensions of a Bitmap. Returns: Lang.Array — A two element array containing the width and height of the Bitmap object 
 
 Since: API Level 1.0.0 initialize(options as { :rezId as Lang.ResourceId , :bitmap as Graphics.BitmapType , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary containing the options for the Bitmap object :rezId — ( Lang.ResourceId ) — The resource identifier for the Bitmap object 
 :bitmap — ( Graphics.BitmapType ) — The BitmapResource, BufferedBitmap, BitmapReference, or BufferedBitmapReference object to use 
 
 
 
 See Also: Drawable.initialize() 
 
 Since: API Level 1.0.0 setBitmap(bitmap as Graphics.BitmapType or Lang.ResourceId or Null ) as Void 
 Set the resource associated with the Bitmap. Note: A null value passed for the bitmap parameter is only supported with ConnectIQ 5.0.0 and later. Parameters: bitmap — ( Graphics.BitmapType , Lang.ResourceId ) — The ResourceId or the Bitmap object. 
 
 Since: API Level 1.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if bitmap is not a valid type 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [BitmapResource (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/BitmapResource.html)nClass: Toybox.WatchUi.BitmapResource
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.BitmapResource 
 
 show all Overview
 A representation of a bitmap resource. BitmapResource objects are returned by the loadResource() method. Since: API Level 1.0.0 Instance Method Summary collapse 
 getHeight () as Lang.Number Get the height of a bitmap resource. 
 getWidth () as Lang.Number Get the width of a bitmap resource. 
 toString () as Lang.String Get info about a bitmap resource as a String. 
 
 Instance Method Details
 getHeight() as Lang.Number 
 Get the height of a bitmap resource. Returns: Lang.Number — Height of the bitmap in pixels 
 
 Since: API Level 1.0.0 getWidth() as Lang.Number 
 Get the width of a bitmap resource. Returns: Lang.Number — Width of the bitmap in pixels 
 
 Since: API Level 1.0.0 toString() as Lang.String 
 Get info about a bitmap resource as a String. The info String is formatted as "Bitmap X x Y" where "X" is the width of the bitmap and "Y" is the height. Returns: Lang.String — A String representation of the BitmapResource object 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Button (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Button.html)nClass: Toybox.WatchUi.Button
 Inherits: Toybox.WatchUi.Selectable Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 Toybox.WatchUi.Selectable 
 Toybox.WatchUi.Button 
 
 show all Overview
 A representation of a Selectable button. Button objects are mappable to a BehaviorDelegate method on selection. See Also:
 Toybox.WatchUi.Selectable 
 
 Note: See the Selectable sample distributed with the SDK for an example of the use of the Button class Since: API Level 2.1.0 App Types: Watch App 
 Audio Content Provider 
 Background 
 Watch Face 
 Widget 
 
 Instance Member Summary collapse 
 background as Graphics.ColorType or WatchUi.Drawable or Null The Button background A Drawable , Graphics.COLOR_* value, or 24-bit integer of the form 0xRRGGBB to be drawn before the current Selectable state is drawn. 
 behavior as Lang.Symbol or Null A Symbol describing the behavior method executed when button is selected. 
 
 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw the Button to the device context ( Dc ). 
 initialize (options as { :behavior as Lang.Symbol , :background as Graphics.ColorType or WatchUi.Drawable , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :stateDefault as Graphics.ColorType or WatchUi.Drawable , :stateHighlighted as Graphics.ColorType or WatchUi.Drawable , :stateSelected as Graphics.ColorType or WatchUi.Drawable , :stateDisabled as Graphics.ColorType or WatchUi.Drawable , :identifier as Lang.Object , :visible as Lang.Boolean }) Constructor Initializes a Button object's foreground, background, and behavior. 
 
 Instance Attribute Details
 var background as Graphics.ColorType or WatchUi.Drawable or Null 
 The Button background A Drawable , Graphics.COLOR_* value, or 24-bit integer of the form 0xRRGGBB to be drawn before the current Selectable state is drawn. Since: API Level 2.1.0 Returns: Lang.Object 
 
 var behavior as Lang.Symbol or Null 
 A Symbol describing the behavior method executed when button is selected. This Symbol must be a member of the active View object's registered BehaviorDelegate, such as :onBack, but may also be a Symbol from an extended class. If the value is null , then a SelectableEvent will be issued. Since: API Level 2.1.0 See Also: Toybox.WatchUi.SelectableEvent 
 
 Returns: Lang.Symbol 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw the Button to the device context ( Dc ). This method assumes that the device context has already been configured to the proper options. Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 2.1.0 initialize(options as { :behavior as Lang.Symbol , :background as Graphics.ColorType or WatchUi.Drawable , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :stateDefault as Graphics.ColorType or WatchUi.Drawable , :stateHighlighted as Graphics.ColorType or WatchUi.Drawable , :stateSelected as Graphics.ColorType or WatchUi.Drawable , :stateDisabled as Graphics.ColorType or WatchUi.Drawable , :identifier as Lang.Object , :visible as Lang.Boolean }) 
 Constructor Initializes a Button object's foreground, background, and behavior. The Button must be registered during setLayout() in order to be usable. Parameters: options — ( Lang.Dictionary ) — A Dictionary containing options for the Button object :behavior — ( Lang.Symbol ) — A Symbol object to call when the Button is selected; set to null to use a SelectableEvent (optional) 
 :background — ( Lang.Object ) — A Drawable , Graphics.COLOR_* constant, or 24-bit integer of the form 0xRRGGBB (optional) 
 
 
 
 See Also: Selectable.initialize() 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [CheckboxMenu (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/CheckboxMenu.html)nClass: Toybox.WatchUi.CheckboxMenu
 Inherits: Toybox.WatchUi.Menu2 Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.CheckboxMenu 
 
 show all Overview
 A representation of a check box menu. A CheckboxMenu is a specialized Menu2 View that presents the user with a list of check box options. After an option is selected, the registered onSelect() method will be called. While a CheckboxMenu can be generated programmatically, they should generally be created as a resource. A CheckboxMenu is pushed using pushView() , which provides a Menu2InputDelegate as the input delegate. See Also:
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.CheckboxMenuItem 
 Toybox.WatchUi.Menu2InputDelegate 
 Toybox.WatchUi.BehaviorDelegate 
 WatchUi.pushView() 
 
 Note: The look and feel of a CheckboxMenu is device-specific. Example: Build a simple CheckboxMenu programmatically using Toybox.WatchUi; class MyBehaviorDelegate extends WatchUi.BehaviorDelegate { function initialize() { BehaviorDelegate.initialize(); } function onMenu() { var menu = new WatchUi.CheckboxMenu({:title=&gt;"My CheckboxMenu"}); var delegate; menu.addItem( new CheckboxMenuItem( "Item 1 Label", "Item 1 subLabel", "itemOneId", true, {} ) ); menu.addItem( new CheckboxMenuItem( "Item 2 Label", "Item 2 subLabel", "itemTwoId", false, {} ) ); delegate = new MyMenu2Delegate(); // a WatchUi.Menu2InputDelegate WatchUi.pushView(menu, delegate, WatchUi.SLIDE_IMMEDIATE); return true; } } Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 addItem (item as WatchUi.CheckboxMenuItem ) as Void Add a CheckboxMenuItem to a CheckboxMenu. 
 initialize (options as { :title as Lang.String or Lang.ResourceId or WatchUi.Drawable , :focus as Lang.Number , :icon as Graphics.BitmapType or Lang.ResourceId or WatchUi.Drawable , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) Constructor. 
 
 Instance Method Details
 addItem(item as WatchUi.CheckboxMenuItem ) as Void 
 Add a CheckboxMenuItem to a CheckboxMenu. Parameters: item — ( WatchUi.CheckboxMenuItem ) — The CheckboxMenuItem to add to the CheckboxMenu 
 
 Since: API Level 3.0.0 Throws: ( WatchUi.InvalidMenuItemTypeException ) — Thrown if item is not a [Toybox::WatchUi::CheckboxMenuItem] 
 ( Lang.UnexpectedTypeException ) — Thrown if item is not a valid type 
 
 initialize(options as { :title as Lang.String or Lang.ResourceId or WatchUi.Drawable , :focus as Lang.Number , :icon as Graphics.BitmapType or Lang.ResourceId or WatchUi.Drawable , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Note: The :theme option is only used on ConnectIQ 4.1.8 devices with menu theme support. Note: The :dividerType option is only used on ConnectIQ 5.0.1 devices with divider support. Parameters: options — ( Lang.Dictionary ) — A Dictionary of options Can be null 
 
 :title — ( Lang.String , Lang.ResourceId , WatchUi.Drawable ) — The menu title 
 :focus — ( Lang.Number ) — The index of the CheckboxMenuItem that should have initial focus 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — the default icon for menu items 
 :theme — ( WatchUi.MenuTheme ) — The menu theme, or null for no theme. Defaults to MENU_THEME_DEFAULT. 
 :dividerType — ( Menu2.DividerType ) — The divider type, Defaults to DIVIDER_TYPE_DEFAULT or when null is passed as value. 
 
 
 
 See Also: Toybox.WatchUi.Menu2.setDividerType 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [CheckboxMenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/CheckboxMenuItem.html)nClass: Toybox.WatchUi.CheckboxMenuItem
 Inherits: Toybox.WatchUi.MenuItem Toybox.Lang.Object 
 Toybox.WatchUi.MenuItem 
 Toybox.WatchUi.CheckboxMenuItem 
 
 show all Overview
 A representation of a check box item in a CheckboxMenu. A CheckboxMenuItem is a element of a CheckboxMenu View that represents one of the options in the menu, and can appear in one of two states: checked or unchecked. When selected, the state of the CheckboxMenuItem changes to the state opposite of the state prior to the onSelect delegate callback invocation. A CheckboxMenuItem can be added to a CheckboxMenu using the addItem() method. See Also:
 Toybox.WatchUi.CheckboxMenu 
 Toybox.WatchUi.MenuItem 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize (label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , checked as Lang.Boolean , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) Constructor. 
 isChecked () as Lang.Boolean Get a CheckboxMenuItem state. 
 setChecked (checked as Lang.Boolean ) as Void Set a CheckboxMenuItem state. 
 
 Instance Method Details
 initialize(label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , checked as Lang.Boolean , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Parameters: label — ( Lang.String , Lang.ResourceId ) — The string label for the CheckboxMenuItem 
 subLabel — ( Lang.String , Lang.ResourceId ) — The substring label for the CheckboxMenuItem, which can be null 
 identifier — ( Lang.Object ) — The identifier for this CheckboxMenuItem, which is typically a String 
 checked — ( Lang.Boolean ) — The initial state of the CheckboxMenuItem; checked if true , unchecked if false 
 options — ( Lang.Dictionary ) — A Dictionary of options :alignment — ( MenuItem.Alignment ) — A WatchUi.MenuItem.MENU_ITEM_LABEL_ALIGN_* constant representing the label alignment, which defaults to the system default for check box menu items if not specified. 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — for the subscreen area when the menu item is in focus 
 
 
 
 Since: API Level 3.0.0 isChecked() as Lang.Boolean 
 Get a CheckboxMenuItem state. Returns: Lang.Boolean — The current state of the CheckboxMenuItem 
 
 Since: API Level 3.0.0 setChecked(checked as Lang.Boolean ) as Void 
 Set a CheckboxMenuItem state. Parameters: checked — ( Lang.Boolean ) — The intended state of the CheckboxMenuItem; checked if true , unchecked if false 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if checked is not a valid type 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [ClickEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ClickEvent.html)nClass: Toybox.WatchUi.ClickEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ClickEvent 
 
 show all Overview
 ClickEvent is an object sent to InputDelegate there is tap interaction with a device's touch screen. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class InputDelegate extends WatchUi.BehaviorDelegate { function onTap(clickEvent) { System.println(clickEvent.getCoordinates()); // e.g. [36, 40] System.println(clickEvent.getType()); // CLICK_TYPE_TAP = 0 return true; } } Since: API Level 1.0.0 Instance Method Summary collapse 
 getCoordinates () as [ Lang.Number , Lang.Number ] Get the coordinates of a click event. 
 getType () as WatchUi.ClickType Get the type of click event. 
 
 Instance Method Details
 getCoordinates() as [ Lang.Number , Lang.Number ] 
 Get the coordinates of a click event. Returns: Lang.Array — An array containing the x and y coordinates of the click event as Numbers 
 
 Since: API Level 1.0.0 getType() as WatchUi.ClickType 
 Get the type of click event. Returns: WatchUi.ClickType — A WatchUi.CLICK_TYPE_* value 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Confirmation (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Confirmation.html)nClass: Toybox.WatchUi.Confirmation
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.Confirmation 
 
 show all Overview
 A representation of a confirmation dialog. A Confirmation is a special View that presents the user with a yes/no question. After an option is selected, the registered onResponse() method will be called. A Confirmation is pushed using pushView() , which provides a ConfirmationDelegate as the input delegate. See Also:
 Toybox.WatchUi.ConfirmationDelegate 
 WatchUi.pushView() 
 
 Note: The look and feel of a confirmation dialog is device-specific. Example: using Toybox.WatchUi; var message = "Continue?"; dialog = new WatchUi.Confirmation(message); WatchUi.pushView( dialog, new ConfirmationDelegate(), WatchUi.SLIDE_IMMEDIATE ); Since: API Level 1.0.0 Instance Method Summary collapse 
 initialize (message as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(message as Lang.String ) 
 Constructor Parameters: message — ( Lang.String ) — The confirmation message to display in the confirmation dialog 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [ConfirmationDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ConfirmationDelegate.html)nClass: Toybox.WatchUi.ConfirmationDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ConfirmationDelegate 
 
 show all Overview
 ConfirmationDelegate responds to a Confirmation selection. See Also:
 Toybox.WatchUi.Confirmation 
 
 Example: using Toybox.WatchUi; using Toybox.System; class MyConfirmationDelegate extends WatchUi.ConfirmationDelegate { function initialize() { ConfirmationDelegate.initialize(); } function onResponse(response) { if (response == WatchUi.CONFIRM_NO) { System.println("Cancel"); } else { System.println("Confirm"); } } } Since: API Level 1.0.0 Instance Method Summary collapse 
 onResponse (response as WatchUi.Confirm ) as Lang.Boolean A confirmation selection was made. 
 
 Instance Method Details
 onResponse(response as WatchUi.Confirm ) as Lang.Boolean 
 A confirmation selection was made. This method is called when a Confirmation response is selected, and receives the response as an argument. The response is either a CONFIRM_NO or CONFIRM_YES value. Parameters: response — ( WatchUi.Confirm ) — The WatchUi.CONFIRM_* value from this Confirmation 
 
 See Also: Toybox.WatchUi.Confirmation 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [CustomMenu (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/CustomMenu.html)nClass: Toybox.WatchUi.CustomMenu
 Inherits: Toybox.WatchUi.Menu2 Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.CustomMenu 
 
 show all Overview
 A representation of a custom menu. A CustomMenu is a specialized Menu2 View that presents the user with a list of custom rendered options. After an option is selected, the registered onSelect() method will be called. A CustomMenu is pushed using pushView() , which provides a Menu2InputDelegate as the input delegate. See Also:
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.CustomMenuItem 
 Toybox.WatchUi.Menu2InputDelegate 
 Toybox.WatchUi.BehaviorDelegate 
 WatchUi.pushView() 
 
 Example: Build a CustomMenu programmatically using Toybox.WatchUi; class MyBehaviorDelegate extends WatchUi.BehaviorDelegate { function initialize() { BehaviorDelegate.initialize(); } function onMenu() { var menu = new WatchUi.CustomMenu(80, Graphics.COLOR_BLACK, {}); menu.addItem( new MyCustomMenuItem( // a WatchUi.CustomMenuItem :itemOne, {} ) ); menu.addItem( new MyCustomMenuItem( // a WatchUi.CustomMenuItem :itemTwo, {} ) ); var delegate = new MyMenu2Delegate(); // a WatchUi.Menu2InputDelegate WatchUi.pushView(menu, delegate, WatchUi.SLIDE_IMMEDIATE); return true; } } Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 addItem (item as WatchUi.CustomMenuItem ) as Void Add a CustomMenuItem to a CustomMenu. 
 drawFooter (dc as Graphics.Dc ) as Void Draw the CustomMenu footer. 
 drawForeground (dc as Graphics.Dc ) as Void Draw the CustomMenu foreground. 
 drawTitle (dc as Graphics.Dc ) as Void Draw the CustomMenu title. 
 initialize (itemHeight as Lang.Number , backgroundColor as Graphics.ColorType , options as { :focus as Lang.Number , :focusItemHeight as Lang.Number or Null , :title as WatchUi.Drawable , :footer as WatchUi.Drawable , :foreground as WatchUi.Drawable , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :titleItemHeight as Lang.Number or Null , :footerItemHeight as Lang.Number or Null , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) Constructor. 
 setBackgroundColor (color as Graphics.ColorType ) as Void Set the background color. 
 setDividerType (divider as Menu2.DividerType or Null ) as Void Set or change the desired divider type. 
 setFooter (drawable as WatchUi.Drawable or Null ) as Void Set the footer drawable. 
 setForeground (drawable as WatchUi.Drawable or Null ) as Void Set the foreground drawable. 
 setTitle (drawable as WatchUi.Drawable or Null ) as Void Set the title drawable. 
 
 Instance Method Details
 addItem(item as WatchUi.CustomMenuItem ) as Void 
 Add a CustomMenuItem to a CustomMenu. Parameters: item — ( WatchUi.CustomMenuItem ) — The CustomMenuItem to add to the CustomMenu. Other MenuItem variants cannot be added to a Custom Menu. 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if item is not a MenuItem . 
 ( WatchUi.InvalidMenuItemTypeException ) — Thrown if item is not a CustomMenuItem . 
 
 drawFooter(dc as Graphics.Dc ) as Void 
 Draw the CustomMenu footer. This is called to render the menu footer region. Parameters: dc — ( Graphics.Dc ) — The menu's drawing context 
 
 Since: API Level 3.0.0 drawForeground(dc as Graphics.Dc ) as Void 
 Draw the CustomMenu foreground. This is called after a menu's items and title have been rendered. It can be used to draw overlay content for the menu. Parameters: dc — ( Graphics.Dc ) — The menu's drawing context 
 
 Since: API Level 3.0.0 drawTitle(dc as Graphics.Dc ) as Void 
 Draw the CustomMenu title. This is called to render the menu title region. Parameters: dc — ( Graphics.Dc ) — The menu's drawing context 
 
 Since: API Level 3.0.0 initialize(itemHeight as Lang.Number , backgroundColor as Graphics.ColorType , options as { :focus as Lang.Number , :focusItemHeight as Lang.Number or Null , :title as WatchUi.Drawable , :footer as WatchUi.Drawable , :foreground as WatchUi.Drawable , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :titleItemHeight as Lang.Number or Null , :footerItemHeight as Lang.Number or Null , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) 
 Constructor Note: The options :titleItemHeight and :footerItemHeight are only supported with ConnectIQ 4.0.0 and later. Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Note: The :theme option is only used on ConnectIQ 4.1.8 devices with menu theme support. The background color will not be used if themes are supported and the theme is non-null. Note: The :dividerType option is only used on ConnectIQ 5.0.1 devices with divider support. Parameters: itemHeight — ( Lang.Number ) — The pixel height of menu items rendered by this menu. 
 backgroundColor — ( Graphics.ColorType ) — The color that will be used to fill the background of the menu. 
 options — ( Lang.Dictionary ) — A Dictionary of options. Can be null :focus — ( Lang.Number ) — The index of the CheckboxMenuItem that should have initial focus. (optional) 
 :focusItemHeight — ( Lang.Number ) — The pixel height of the center menu item of this menu. This option is ignored on products with touch screens. (optional) 
 :title — ( WatchUi.Drawable ) — A Drawable that will render the title area. (optional) 
 :footer — ( WatchUi.Drawable ) — A Drawable that will render the area after the final item in the menu.(optional) 
 :foreground — ( WatchUi.Drawable ) — A Drawable to render on top of menu items. (optional) 
 :titleItemHeight — ( Lang.Number ) — The pixel height of the header menu item of this menu (optional) 
 :footerItemHeight — ( Lang.Number ) — The pixel height of the footer menu item of this menu. (optional) 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — the default icon for the menu incase menuitem do not have it populated 
 :theme — ( WatchUi.MenuTheme ) — The menu theme, or null for no theme. Defaults to MENU_THEME_DEFAULT. 
 :dividerType — ( Menu2.DividerType ) — The divider type, if null is passed as value, divider will be disabled (non-visible). Defaults to DIVIDER_TYPE_DEFAULT. 
 
 
 
 See Also: Toybox.WatchUi.CustomMenu.setDividerType 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if either itemHeight or backgroundColor are not of the expected type 
 ( Lang.UnexpectedTypeException ) — Thrown if the :focusItemHeight , :titleItemHeight , :footerItemHeight , or :focus options are provided and are not Number objects 
 ( Lang.UnexpectedTypeException ) — Thrown if the :title , :footer , or :foreground options are provided and are not Drawable objects. 
 
 setBackgroundColor(color as Graphics.ColorType ) as Void 
 Set the background color. Parameters: color — ( Graphics.ColorType ) — The color to fill the background of the menu with. 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if color is not a Number . 
 
 setDividerType(divider as Menu2.DividerType or Null ) as Void 
 Set or change the desired divider type. If set to Menu2.DIVIDER_TYPE_ICON . Icon from CustomMenuItem.setDividerIcon will be rendered on the left side of the divider. Set to null to disable divider which may also disable MenuTheme , CustomMenuItem.draw will be called with full width of menu item. Menu2.DIVIDER_TYPE_DEFAULT will be used if not set for devices that support divider. Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 
 Since: API Level 5.0.1 Throws: ( WatchUi.InvalidValueException ) — Thrown if divider is not an valid value. 
 ( Lang.UnexpectedTypeException ) — Thrown if divider is not a valid type. 
 
 setFooter(drawable as WatchUi.Drawable or Null ) as Void 
 Set the footer drawable. Parameters: drawable — ( WatchUi.Drawable , null) — A drawable that will render the footer area or null . 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if drawable is not a Drawable or null . 
 
 setForeground(drawable as WatchUi.Drawable or Null ) as Void 
 Set the foreground drawable. Parameters: drawable — ( WatchUi.Drawable , null) — A Drawable to render on top of the menu items or null . 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if drawable is not a Drawable or null . 
 
 setTitle(drawable as WatchUi.Drawable or Null ) as Void 
 Set the title drawable. Parameters: drawable — ( WatchUi.Drawable , null) — A drawable that will render the title area or null . 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if drawable is not a Drawable or null . 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [CustomMenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/CustomMenuItem.html)nClass: Toybox.WatchUi.CustomMenuItem
 Inherits: Toybox.WatchUi.MenuItem Toybox.Lang.Object 
 Toybox.WatchUi.MenuItem 
 Toybox.WatchUi.CustomMenuItem 
 
 show all Overview
 A representation of a custom item in a CustomMenu. A CustomMenuItem is a element of a CustomMenu View that represents one of the items in the menu. When selected, the onSelect() delegate callback will be invoked. The selected state of the item may change when it is being selected. This state can be evaluated using the isSelected() method and can be used to control the look of a selected item. A CustomMenuItem can be added to a CustomMenu using the addItem() method. See Also:
 Toybox.WatchUi.CustomMenu 
 Toybox.WatchUi.MenuItem 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw method for a CustomMenuItem. 
 getDividerIcon () as Graphics.BitmapType or WatchUi.Drawable or Null Get the divider icon. 
 initialize (identifier as Lang.Object or Null , options as { :alignment as MenuItem.Alignment , :drawable as WatchUi.Drawable , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :dividerIcon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId }) Constructor. 
 isFocused () as Lang.Boolean Get the CustomMenuItem focus state. 
 isSelected () as Lang.Boolean Get the CustomMenuItem selected state. 
 setDividerIcon (icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void Set or change the menu icon. 
 setDrawable (drawable as WatchUi.Drawable or Null ) as Void Set a CustomMenuItem Drawable. 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw method for a CustomMenuItem. This is called when a menu item is rendering. Parameters: dc — ( Graphics.Dc ) — The item's drawing context 
 
 Since: API Level 3.0.0 getDividerIcon() as Graphics.BitmapType or WatchUi.Drawable or Null 
 Get the divider icon. Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 
 Returns: Graphics.BitmapType , Lang.Symbol , WatchUi.Drawable — The icon 
 
 See Also: CustomMenuItem.setDividerIcon() 
 
 Since: API Level 5.0.1 initialize(identifier as Lang.Object or Null , options as { :alignment as MenuItem.Alignment , :drawable as WatchUi.Drawable , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :dividerIcon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId }) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Parameters: identifier — ( Lang.Object ) — The identifier for this item which is typically a String 
 options — ( Lang.Dictionary ) — A Dictionary of options :drawable — ( WatchUi.Drawable ) — A Drawable that draws the item. (required) 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — for the subscreen area when the menu item is in focus 
 :dividerIcon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — icon for the divider area. 
 
 
 
 See Also: MenuItem.initialize() 
 CustomMenuItem.setDividerIcon() 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the :drawable option is not a Drawable or is null . 
 
 isFocused() as Lang.Boolean 
 Get the CustomMenuItem focus state. Returns: Lang.Boolean — The current focus state of the CustomMenuItem 
 
 Since: API Level 3.0.0 isSelected() as Lang.Boolean 
 Get the CustomMenuItem selected state. Returns: Lang.Boolean — The current selected state of the CustomMenuItem 
 
 Since: API Level 3.0.0 setDividerIcon(icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void 
 Set or change the menu icon. If device support Menu2.DividerType and parent menu is set to DIVIDER_TYPE_ICON , icon (if not +null+) will be rendered on the left side of the divider. Parameters: icon — ( Graphics.BitmapType , WatchUi.Drawable ) — The Drawable or ResourceId used to render the icon for this item 
 
 Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 
 Since: API Level 5.0.1 Throws: ( Lang.UnexpectedTypeException ) — Thrown if icon is not a valid type. 
 
 setDrawable(drawable as WatchUi.Drawable or Null ) as Void 
 Set a CustomMenuItem Drawable. Parameters: drawable — ( WatchUi.Drawable ) — A Drawable to render on top of the menu items, or null . 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if drawable is not a Drawable or is null . 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [DataField (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/DataField.html)nClass: Toybox.WatchUi.DataField
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.DataField 
 
 show all Overview
 Create a Data Field. A DataField is a special View that automatically provides Activity.Info once per second via the compute() method. A DataField requires the implementation of the compute() method to handle the incoming Activity info, and otherwise provides a significant amount of flexibility regarding the way the information is displayed. If less complexity is required, consider a SimpleDataField . See Also:
 Toybox.WatchUi.SimpleDataField 
 Activity.Info 
 Toybox.Graphics 
 
 Note: The system will call the onUpdate() method inherited from View when a Data Field is displayed by the system. Because compute() and onUpdate() are asynchronous, there is no guarantee that compute() will be called before onUpdate(). For this reason, variables should never be initialized in compute(). Example: A DataField that displays current heart rate using Toybox.WatchUi; using Toybox.Graphics; class MyHRField extends WatchUi.DataField { hidden var hrValue; function initialize() { DataField.initialize(); hrValue = 0.0f; } // Get the field layout function onLayout(dc) { View.setLayout(Rez.Layouts.MainLayout(dc)); } // Calculate the data to display in the field here function compute(info) { if (info has :currentHeartRate) { if (info.currentHeartRate != null) { hrValue = info.currentHeartRate; } else { hrValue = 0.0f; } } } // Update the field layout and display the field data function onUpdate(dc) { View.findDrawableById("Background").setColor(getBackgroundColor()); var value = View.findDrawableById("value"); value.setColor(Graphics.COLOR_BLACK); value.setText(hrValue.format("%.2f")); View.onUpdate(dc); } } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Direct Known Subclasses
 WatchUi.SimpleDataField Constant Summary
 Obscurity
 Since: API Level 1.0.0 Name Value Since Description See Also 
 OBSCURE_LEFT 1 API Level 1.0.0 Some of the left edge of the device context is obscured 
 OBSCURE_TOP 2 API Level 1.0.0 Some of the top edge of the device context is obscured 
 OBSCURE_RIGHT 4 API Level 1.0.0 Some of the right edge of the device context is obscured 
 OBSCURE_BOTTOM 8 API Level 1.0.0 Some of the bottom edge of the device context is obscured 
 Instance Method Summary collapse 
 compute (info as Activity.Info ) Retrieve Activity.Info in a DataField. 
 createField (name as Lang.String , fieldId as Lang.Number , type as FitContributor.DataType , options as { :count as Lang.Number , :mesgType as FitContributor.MessageType , :units as Lang.String }) as FitContributor.Field Create a new custom FIT Field . 
 getBackgroundColor () as Graphics.ColorType Get the current Data Field background color. 
 getObscurityFlags () as DataField.Obscurity Get the screen regions that are obscured. 
 initialize () Constructor. 
 onNextMultisportLeg () as Void The device has transitioned to the next multisport leg. 
 onTimerLap () as Void A lap event has occurred. 
 onTimerPause () as Void The activity timer is paused. 
 onTimerReset () as Void The current activity has ended. 
 onTimerResume () as Void The activity time has resumed. 
 onTimerStart () as Void The activity timer has started. 
 onTimerStop () as Void The activity timer has stopped. 
 onWorkoutStarted () as Void The current workout is started. 
 onWorkoutStepComplete () as Void The current workout step is complete. 
 showAlert (alertView as WatchUi.DataFieldAlert ) as Void Show an alert. 
 
 Instance Method Details
 compute(info as Activity.Info ) 
 Retrieve Activity.Info in a DataField. This method is called once per second and automatically provides Activity.Info to the DataField object for display or additional computation. It is necessary to override compute() when implementing a DataField. Parameters: info — ( Activity.Info ) — The updated Activity.Info object 
 
 Example: function compute(info) { if (info has :currentHeartRate) { if (info.currentHeartRate != null) { hrValue = info.currentHeartRate; } else { hrValue = 0.0f; } } } See Also: Activity.Info 
 
 Since: API Level 1.0.0 createField(name as Lang.String , fieldId as Lang.Number , type as FitContributor.DataType , options as { :count as Lang.Number , :mesgType as FitContributor.MessageType , :units as Lang.String }) as FitContributor.Field 
 Create a new custom FIT Field . To record custom activity data to a FIT file, a new Field must first be created to allow Data Fields access to FIT recording without allowing access to the session. Once created, a Field is updated in the FIT file by changing the value of the data within the Field. Parameters: name — ( Lang.String ) — The name of the Field 
 fieldId — ( Lang.Number ) — The unique Field identifier of the Field 
 type — ( FitContributor.DataType ) — A FitContributor.DATA_TYPE_* value representing the type definition of the Field 
 options — ( Lang.Dictionary ) — Optional parameters for field creation :count — ( Lang.Number ) — The number of elements to add to the field if it is an Array. This is also the maximum combined size of the Strings plus their null terminators if the Field type is FitContributor.DATA_TYPE_STRING (Default 1). 
 :mesgType — ( FitContributor.MessageType ) — Optional. A FitContributor.MESG_TYPE_* value representing the Field message type. This defaults to FitContributor.MESG_TYPE_RECORD if not specified. Additionally, if FitContributor.MESG_TYPE_RECORD is used, the field type cannot be FitContributor.DATA_TYPE_STRING. 
 :units — ( Lang.String ) — Optional. A String representing the display units (e.g. "mph", "ft", "Pa") 
 
 
 
 Returns: FitContributor.Field 
 
 See Also: Toybox.FitContributor 
 The Messages Sheet in Profile.xlsx included with the FIT SDK for native field numbers 
 
 Since: API Level 1.3.0 getBackgroundColor() as Graphics.ColorType 
 Get the current Data Field background color. Some devices provide a global Data Field background color setting. This method will return the current value of that setting as a value of either Graphics.COLOR_WHITE or Graphics.COLOR_BLACK . Returns: Graphics.ColorType — A Graphics.COLOR_* value 
 
 See Also: Toybox.Graphics 
 
 Since: API Level 1.2.0 getObscurityFlags() as DataField.Obscurity 
 Get the screen regions that are obscured. Non-rectangular screens have certain portions of the screen obscured. For example, a round screen effectively cuts off the corners of a square screen. This method returns a sum of the enumerated values defined by the WatchUi.DataField.OBSCURE_* constants that match the obscured screen regions on the device. Use of this method is only valid during the call to onUpdate() . Returns: DataField.Obscurity — A WatchUi.DataField.OBSCURE_* value 
 
 Since: API Level 1.0.0 initialize() 
 Constructor Since: API Level 1.0.0 onNextMultisportLeg() as Void 
 The device has transitioned to the next multisport leg. This method is called when the device transitions to the next multisport leg. Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.0.0 onTimerLap() as Void 
 A lap event has occurred. This method is called when a lap is added to the current activity. A notification is triggered after the lap record has been written to the FIT file. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onTimerPause() as Void 
 The activity timer is paused. This method is called when the activity timer goes from a running state to a paused state. The paused state occurs when the auto-pause feature pauses the timer. If the activity timer is paused when the app is loaded, this event will run immediately after startup. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onTimerReset() as Void 
 The current activity has ended. This method is called when the time has stopped and current activity is ended. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onTimerResume() as Void 
 The activity time has resumed. This method is called when the activity timer goes from a paused state to a running state. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onTimerStart() as Void 
 The activity timer has started. This method is called when the activity timer goes from a stopped state to a started state. If the activity timer is running when the app is loaded, this event will run immediately after startup. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onTimerStop() as Void 
 The activity timer has stopped. This method is called when the activity timer goes from a running state to a stopped state. Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Since: API Level 1.3.0 onWorkoutStarted() as Void 
 The current workout is started. This method is called when the a workout is started. Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 onWorkoutStepComplete() as Void 
 The current workout step is complete. This method is called when the a workout step has been completed. Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.0.0 showAlert(alertView as WatchUi.DataFieldAlert ) as Void 
 Show an alert. Parameters: alertView — ( WatchUi.DataFieldAlert ) — View to push Only Toybox::WatchUi::DataFieldAlert is supported for this operation 
 
 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Since: API Level 3.2.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called from an app type other than data field 
 ( Lang.UnexpectedTypeException ) — Thrown if the view type is not DataFieldAlert 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [DataFieldAlert (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/DataFieldAlert.html)nClass: Toybox.WatchUi.DataFieldAlert
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.DataFieldAlert 
 
 show all Overview
 Alert View for DataFields Use this view for pushing alerts from a DataField Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [DragEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/DragEvent.html)nClass: Toybox.WatchUi.DragEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.DragEvent 
 
 show all Overview
 DragEvent is an object sent to InputDelegate when there is a drag interaction with a device's touch screen. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class InputDelegate extends WatchUi.InputDelegate { function onDrag(dragEvent as DragEvent) as Boolean { System.println(dragEvent.getCoordinates()); // e.g. [36, 40] System.println(dragEvent.getType()); // DRAG_TYPE_START = 0 return true; } } Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getCoordinates () as [ Lang.Number , Lang.Number ] Get the coordinates of a drag event. 
 getType () as WatchUi.DragType Get the type of drag event. 
 
 Instance Method Details
 getCoordinates() as [ Lang.Number , Lang.Number ] 
 Get the coordinates of a drag event. Returns: Lang.Array — An array containing the x and y coordinates of the drag event as Numbers 
 
 Since: API Level 3.3.0 getType() as WatchUi.DragType 
 Get the type of drag event. Returns: WatchUi.DragType — A WatchUi.DRAG_TYPE_* value 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:44 AM


# [Drawable (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Drawable.html)nClass: Toybox.WatchUi.Drawable
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 
 show all Overview
 Drawable is the base class of a drawable object. A Drawable can be constructed using the resource compiler and loaded through the resource (Rez) module. Example: Using a Drawable defined as a resource // The drawable.xml file contents: // &lt;drawable-list id="shapes" background="Graphics.COLOR_TRANSPARENT"&gt; // &lt;shape type="circle" x="78" y="160" radius="8" color="Graphics.COLOR_RED" /&gt; // &lt;shape type="rectangle" x="51" y="137" width="76" height="20" color="Graphics.COLOR_BLUE" /&gt; // &lt;/drawable-list&gt; using Toybox.Graphics; using Toybox.WatchUi; class MyDrawableView extends WatchUi.View { var myShapes; function initialize() { View.initialize(); myShapes = new Rez.Drawables.shapes(); } function onUpdate(dc) { dc.setColor( Graphics.COLOR_WHITE, Graphics.COLOR_BLACK ); dc.fillRectangle( 0, 0, dc.getWidth(), dc.getHeight() ); myShapes.draw(dc); } } Since: API Level 1.0.0 Direct Known Subclasses
 WatchUi.Bitmap , WatchUi.Selectable , WatchUi.Text , WatchUi.TextArea Instance Member Summary collapse 
 height as Lang.Numeric The clip height of the Drawable object. 
 identifier as Lang.Object or Null The ID used to identify the Drawable object. 
 isVisible as Lang.Boolean The visibility of the Drawable object. 
 locX as Lang.Numeric The absolute, on-screen x-coordinate of the Drawable object. 
 locY as Lang.Numeric The absolute, on-screen y-coordinate of the Drawable object. 
 width as Lang.Numeric The clip width of the Drawable object. 
 
 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw an object to the device context ( Dc ). 
 initialize (options as { :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) Constructor. 
 setLocation (x as Lang.Numeric , y as Lang.Numeric ) as Void Set the on-screen location for a Drawable object. 
 setSize (w as Lang.Numeric , h as Lang.Numeric ) as Void Set the size of a Drawable object. 
 setVisible (visible as Lang.Boolean ) as Void Set the visibility of a Drawable object. 
 
 Instance Attribute Details
 var height as Lang.Numeric 
 The clip height of the Drawable object. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var identifier as Lang.Object or Null 
 The ID used to identify the Drawable object. Since: API Level 1.0.0 Returns: Lang.Object 
 
 var isVisible as Lang.Boolean 
 The visibility of the Drawable object. Since: API Level 3.3.0 Returns: Lang.Boolean 
 
 var locX as Lang.Numeric 
 The absolute, on-screen x-coordinate of the Drawable object. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var locY as Lang.Numeric 
 The absolute, on-screen y-coordinate of the Drawable object. Since: API Level 1.0.0 Returns: Lang.Number 
 
 var width as Lang.Numeric 
 The clip width of the Drawable object. Since: API Level 1.0.0 Returns: Lang.Number 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw an object to the device context ( Dc ). This method assumes that the device context has already been configured to the proper options. Derived classes should check the isVisible property, if it exists, before trying to draw. Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 1.0.0 initialize(options as { :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) 
 Constructor Note: The option :visible is only supported with ConnectIQ 3.3.0 and later. Parameters: options — ( Lang.Dictionary ) — A Dictionary containing options for the Drawable object :identifier — ( Lang.Object ) — The identifier for the Drawable object 
 :locX — ( Lang.Number ) — The absolute, on-screen x-coordinate for the Drawable object 
 :locY — ( Lang.Number ) — The absolute, on-screen y-coordinate for the Drawable object 
 :width — ( Lang.Number ) — The clip width of the Drawable object 
 :height — ( Lang.Number ) — The clip height of the Drawable object 
 :visible — ( Lang.Boolean ) — The visibility of the Drawable object 
 
 
 
 Since: API Level 1.0.0 setLocation(x as Lang.Numeric , y as Lang.Numeric ) as Void 
 Set the on-screen location for a Drawable object. Parameters: x — ( Lang.Number ) — The horizontal position on the screen 
 y — ( Lang.Number ) — The vertical position on the screen 
 
 Since: API Level 1.0.0 setSize(w as Lang.Numeric , h as Lang.Numeric ) as Void 
 Set the size of a Drawable object. Parameters: w — ( Lang.Number ) — The width of the Drawable object 
 h — ( Lang.Number ) — The height of the Drawable object 
 
 Since: API Level 1.0.0 setVisible(visible as Lang.Boolean ) as Void 
 Set the visibility of a Drawable object. Parameters: visible — ( Lang.Boolean ) — The visibility of the Drawable object 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:44 AM


# [FlickEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/FlickEvent.html)nClass: Toybox.WatchUi.FlickEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.FlickEvent 
 
 show all Overview
 FlickEvent is an object sent to InputDelegate when there is a flick interaction with the device's touch screen. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class InputDelegate extends WatchUi.InputDelegate { function onFlick(flickEvent as FlickEvent) as Boolean { System.println(flickEvent.getDirection()); // e.g. up is 0, right is 90, down is 180, left is 270 return true; } } Since: API Level 3.3.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getCoordinates () as [ Lang.Number , Lang.Number ] Get the coordinates of a click event. 
 getDirection () as Lang.Number Get the direction of the flick. 
 getDistance () as Lang.Number Get the distance of the flick. 
 getVelocity () as Lang.Float Get the velocity of the flick. 
 
 Instance Method Details
 getCoordinates() as [ Lang.Number , Lang.Number ] 
 Get the coordinates of a click event. Returns: Lang.Array — An array containing the x and y coordinates at the end of the flick event as Numbers 
 
 Since: API Level 3.3.0 getDirection() as Lang.Number 
 Get the direction of the flick. Returns: Lang.Number — The direction of the flick in degrees 
 
 Since: API Level 3.3.0 getDistance() as Lang.Number 
 Get the distance of the flick. Returns: Lang.Number — The length of the flick in pixels. 
 
 Since: API Level 3.3.0 getVelocity() as Lang.Float 
 Get the velocity of the flick. Returns: Lang.Float — The velocity of the flick in pixels per second 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:44 AM


# [FontResource (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/FontResource.html)nClass: Toybox.WatchUi.FontResource
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.FontResource 
 
 show all Overview
 A representation of a font resource. FontResource objects are returned by the loadResource() method. Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [GlanceView (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/GlanceView.html)nClass: Toybox.WatchUi.GlanceView
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.GlanceView 
 
 show all Overview
 The class that represents a glance view which can be used to display the widget preview content in a restricted drawing context (dc) among other widgets. Glance view behaves mostly like a regular WatchUi.View, e.g. user can load layout and update view using View.onLayout() and View.onUpdate() , however, the dc object passed in those calls will be bounded by glance area rather than a full screen dc . GlanceView doesn't support WatchUi.Layer or other View APIs that are associated with layering system, such as View.addLayer() View.removeLayer() , View.insertLayer() , View.clearLayers() The widget that's running in the glance mode are prohibited from using page control functionality, as there is only one view allowed during said mode. Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [GlanceViewDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/GlanceViewDelegate.html)nClass: Toybox.WatchUi.GlanceViewDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.GlanceViewDelegate 
 
 show all Overview
 The class that represents a glance view delegate, which can be used to relay events happened during widget glance (preview) mode. Since: API Level 3.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onGlanceEvent (options as Lang.Dictionary or Null ) as Lang.Boolean Invoked when certain glance event occurs, none for now. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.1.0 onGlanceEvent(options as Lang.Dictionary or Null ) as Lang.Boolean 
 Invoked when certain glance event occurs, none for now Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [IconMenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/IconMenuItem.html)nClass: Toybox.WatchUi.IconMenuItem
 Inherits: Toybox.WatchUi.MenuItem Toybox.Lang.Object 
 Toybox.WatchUi.MenuItem 
 Toybox.WatchUi.IconMenuItem 
 
 show all Overview
 A representation of an icon item in a Menu2. An IconMenuItem is a element of a Menu2 View that represents one of the options in the menu. An IconMenuItem has an icon displayed on the left or right of the menu item labels. An IconMenuItem can be added to a Menu2 using the addItem() method. See Also:
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.MenuItem 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getIcon () as Graphics.BitmapType or WatchUi.Drawable Get IconMenuItem icon. 
 initialize (label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , icon as Graphics.BitmapType or WatchUi.Drawable , options as { :alignment as MenuItem.Alignment } or Null ) Constructor. 
 setIcon (icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId ) as Void Set the IconMenuItem icon. 
 
 Instance Method Details
 getIcon() as Graphics.BitmapType or WatchUi.Drawable 
 Get IconMenuItem icon. Returns: Graphics.BitmapType , WatchUi.Drawable — The IconMenuItem icon 
 
 Since: API Level 3.0.0 initialize(label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , icon as Graphics.BitmapType or WatchUi.Drawable , options as { :alignment as MenuItem.Alignment } or Null ) 
 Constructor Parameters: label — ( Lang.String , Lang.ResourceId ) — The string label for the IconMenuItem 
 subLabel — ( Lang.String , Lang.ResourceId ) — The substring label for the IconMenuItem, which can be null 
 identifier — ( Lang.Object ) — The identifier for this IconMenuItem, which is typically a String 
 icon — ( WatchUi.Drawable , WatchUi.BitmapResource , Graphics.BitmapReference ) — The Drawable used to render the icon for this item or the Graphics::BitmapReference object. 
 options — ( Lang.Dictionary ) — A Dictionary of options :alignment — ( MenuItem.Alignment ) — A WatchUi.MenuItem.MENU_ITEM_LABEL_ALIGN_* constant representing the label alignment, which defaults to MENU_ITEM_LABEL_ALIGN_LEFT 
 
 
 
 Since: API Level 3.0.0 setIcon(icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId ) as Void 
 Set the IconMenuItem icon. Parameters: icon — ( Graphics.BitmapType , WatchUi.Drawable ) — The Drawable or ResourceId used to render the icon for this item 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if icon is not a valid type 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [InputDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/InputDelegate.html)nClass: Toybox.WatchUi.InputDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.InputDelegate 
 
 show all Overview
 InputDelegate handles basic input events. Note that on wearable products, input events are not supported for data fields. There are four types of basic inputs InputDelegate can handle: Key, represented by KeyEvent 
 Touch, represented by ClickEvent 
 Swipe, represented by SwipeEvent 
 Selectable, represented by SelectableEvent 
 
 This class is the base class for BehaviorDelegate , which goes beyond simple key and screen-based input. See Also:
 Toybox.WatchUi.BehaviorDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class MyInputDelegate extends WatchUi.InputDelegate { function onKey(keyEvent) { System.println(keyEvent.getKey()); // e.g. KEY_MENU = 7 return true; } function onTap(clickEvent) { System.println(clickEvent.getType()); // e.g. CLICK_TYPE_TAP = 0 return true; } function onSwipe(swipeEvent) { System.println(swipeEvent.getDirection()); // e.g. SWIPE_DOWN = 2 return true; } } Since: API Level 1.0.0 Direct Known Subclasses
 WatchUi.BehaviorDelegate Instance Method Summary collapse 
 onDrag (dragEvent as WatchUi.DragEvent ) as Lang.Boolean A touch screen drag event has occurred. 
 onFlick (flickEvent as WatchUi.FlickEvent ) as Lang.Boolean A touch screen flick event has occurred. 
 onHold (clickEvent as WatchUi.ClickEvent ) as Lang.Boolean A touch screen hold event has occurred. 
 onKey (keyEvent as WatchUi.KeyEvent ) as Lang.Boolean A physical button has been pressed and released. 
 onKeyPressed (keyEvent as WatchUi.KeyEvent ) as Lang.Boolean A physical button has been pressed down. 
 onKeyReleased (keyEvent as WatchUi.KeyEvent ) as Lang.Boolean A physical button has been released. 
 onRelease (clickEvent as WatchUi.ClickEvent ) as Lang.Boolean A touch screen release event has occurred. 
 onSelectable (selectableEvent as WatchUi.SelectableEvent ) as Lang.Boolean The state of a Selectable has changed. 
 onSwipe (swipeEvent as WatchUi.SwipeEvent ) as Lang.Boolean A touch screen swipe event has occurred. 
 onTap (clickEvent as WatchUi.ClickEvent ) as Lang.Boolean A screen tap event has occurred. 
 
 Instance Method Details
 onDrag(dragEvent as WatchUi.DragEvent ) as Lang.Boolean 
 A touch screen drag event has occurred. This is sent when the touch screen is dragged. Parameters: dragEvent — ( WatchUi.DragEvent ) — The drag event that has occurred 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.DragEvent 
 
 Since: API Level 3.3.0 onFlick(flickEvent as WatchUi.FlickEvent ) as Lang.Boolean 
 A touch screen flick event has occurred. This is sent when the touch screen is flicked. Parameters: flickEvent — ( WatchUi.FlickEvent ) — The flick event that has occurred 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.FlickEvent 
 
 Since: API Level 3.3.0 onHold(clickEvent as WatchUi.ClickEvent ) as Lang.Boolean 
 A touch screen hold event has occurred. This is sent when the touch screen is touched and not released. Parameters: clickEvent — ( WatchUi.ClickEvent ) — The click event that has occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.ClickEvent 
 
 Since: API Level 1.0.0 onKey(keyEvent as WatchUi.KeyEvent ) as Lang.Boolean 
 A physical button has been pressed and released. To find out which key was pressed, use KeyEvent.getKey() to get the button's WatchUi.KEY_* enum value. Parameters: keyEvent — ( WatchUi.KeyEvent ) — The key event that occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.KeyEvent 
 
 Since: API Level 1.0.0 onKeyPressed(keyEvent as WatchUi.KeyEvent ) as Lang.Boolean 
 A physical button has been pressed down. To find out which key was pressed, use KeyEvent.getKey() to get the button's WatchUi.KEY_* enum value. Parameters: keyEvent — ( WatchUi.KeyEvent ) — The key event that occurred. 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.KeyEvent 
 
 Since: API Level 1.1.2 onKeyReleased(keyEvent as WatchUi.KeyEvent ) as Lang.Boolean 
 A physical button has been released. To find out which key was pressed, use KeyEvent.getKey() to get the button's WatchUi.KEY_* enum value. Parameters: keyEvent — ( WatchUi.KeyEvent ) — The key event that occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.KeyEvent 
 
 Since: API Level 1.1.2 onRelease(clickEvent as WatchUi.ClickEvent ) as Lang.Boolean 
 A touch screen release event has occurred. This is only sent after an onHold() event, once the hold on the touch screen is released. Parameters: clickEvent — ( WatchUi.ClickEvent ) — The click event that has occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.ClickEvent 
 
 Since: API Level 1.0.0 onSelectable(selectableEvent as WatchUi.SelectableEvent ) as Lang.Boolean 
 The state of a Selectable has changed. Parameters: selectableEvent — ( WatchUi.SelectableEvent ) — The selectable event containing the information about the Selectable whose state has changed 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.Selectable 
 Toybox.WatchUi.SelectableEvent 
 
 Since: API Level 2.1.0 onSwipe(swipeEvent as WatchUi.SwipeEvent ) as Lang.Boolean 
 A touch screen swipe event has occurred. This is sent when the touch screen is swiped. Parameters: swipeEvent — ( WatchUi.SwipeEvent ) — The swipe event that has occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.SwipeEvent 
 
 Since: API Level 1.0.0 onTap(clickEvent as WatchUi.ClickEvent ) as Lang.Boolean 
 A screen tap event has occurred. This is sent when the touch screen is tapped (a quick touch and release). Parameters: clickEvent — ( WatchUi.ClickEvent ) — The click event that occurred 
 
 Returns: Lang.Boolean — true if handled, otherwise false 
 
 See Also: Toybox.WatchUi.ClickEvent 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [InvalidMenuItemTypeException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/InvalidMenuItemTypeException.html)nClass: Toybox.WatchUi.InvalidMenuItemTypeException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.WatchUi.InvalidMenuItemTypeException 
 
 show all Overview
 This exception indicates an invalid menu item type was passed to addItem() for a menu. See Also:
 Toybox.Lang.Exception 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [InvalidPointException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/InvalidPointException.html)nClass: Toybox.WatchUi.InvalidPointException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.WatchUi.InvalidPointException 
 
 show all Overview
 Indicates that an invalid point was set. Since: API Level 3.0.0 Instance Method Summary collapse 
 initialize (msg as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(msg as Lang.String ) 
 Constructor Parameters: msg — ( Lang.String ) — The exception message 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [InvalidSelectableStateException (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/InvalidSelectableStateException.html)nClass: Toybox.WatchUi.InvalidSelectableStateException
 Inherits: Toybox.Lang.Exception Toybox.Lang.Object 
 Toybox.Lang.Exception 
 Toybox.WatchUi.InvalidSelectableStateException 
 
 show all Overview
 Indicates the instance of Selectable is assigned a state that it doesn't contain. See Also:
 Toybox.WatchUi.Selectable 
 
 Since: API Level 2.1.0 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [KeyEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/KeyEvent.html)nClass: Toybox.WatchUi.KeyEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.KeyEvent 
 
 show all Overview
 KeyEvent is an object sent to an InputDelegate when a physical button on the device is pressed. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class InputDelegate extends WatchUi.BehaviorDelegate { function onKey(keyEvent) { System.println(keyEvent.getKey()); // e.g. KEY_MENU = 7 System.println(keyEvent.getType()); // e.g. PRESS_TYPE_DOWN = 0 return true; } } Since: API Level 1.0.0 Instance Method Summary collapse 
 getKey () as WatchUi.Key Get the key value of this event. 
 getType () as WatchUi.KeyPressType Get the type of click event. 
 
 Instance Method Details
 getKey() as WatchUi.Key 
 Get the key value of this event. Returns: WatchUi.Key — A WatchUi.KEY_* value 
 
 Since: API Level 1.0.0 getType() as WatchUi.KeyPressType 
 Get the type of click event. Returns: WatchUi.KeyPressType — A WatchUi.PRESS_TYPE_* value 
 
 Since: API Level 1.1.2 Generated Dec 11, 2024, 8:58:44 AM


# [Layer (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Layer.html)nClass: Toybox.WatchUi.Layer
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.Layer 
 
 show all Overview
 A representation of View Layer that will be drawn (bitblit) by system onto the screen during screen update, which include regular View update (onUpdate/onPartialUpdate) as well as animation playback if supported. Since: API Level 3.1.0 Direct Known Subclasses
 WatchUi.AnimationLayer Typedef Summary collapse 
 Options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Number , :height as Lang.Number , :colorDepth as Lang.Number , :visibility as Lang.Boolean , :identifier as Lang.Object } 
 
 Instance Method Summary collapse 
 getDc () as Graphics.Dc or Null Get the Graphics.Dc to draw on. 
 getId () as Lang.Object or Null Layer identifier, can be null . 
 getX () as Lang.Numeric Get X-axis absolute draw offset relative to the screen origin. 
 getY () as Lang.Numeric Get Y-axis absolute draw offset relative to the screen origin. 
 initialize (options as Layer.Options or Null ) Constructor. 
 isVisible () as Lang.Boolean 
 setLocation (x as Lang.Numeric , y as Lang.Numeric ) as Void Set draw offset relative to the screen origin. 
 setVisible (visible as Lang.Boolean ) as Void Set visibility of the layer, if the layer hasn't been added to a view, or the view isn't on top of view stack, the value will be saved. 
 setX (x as Lang.Numeric ) as Void Set X-axis absolute draw offset relative to the screen origin. 
 setY (y as Lang.Numeric ) as Void Set Y-axis absolute draw offset relative to the screen origin. 
 
 Typedef Details
 Options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Number , :height as Lang.Number , :colorDepth as Lang.Number , :visibility as Lang.Boolean , :identifier as Lang.Object } 
 Since: API Level 3.1.0 Instance Method Details
 getDc() as Graphics.Dc or Null 
 Get the Graphics.Dc to draw on. Since: API Level 3.1.0 getId() as Lang.Object or Null 
 Layer identifier, can be null Returns: Lang.Number , Lang.Object — the identifier of the layer, can be null 
 
 Since: API Level 3.1.0 getX() as Lang.Numeric 
 Get X-axis absolute draw offset relative to the screen origin Returns: Lang.Number — X-axis absolute draw offset relative to the screen origin 
 
 Since: API Level 3.1.0 getY() as Lang.Numeric 
 Get Y-axis absolute draw offset relative to the screen origin Returns: Lang.Number — Y-axis absolute draw offset relative to the screen origin 
 
 Since: API Level 3.1.0 initialize(options as Layer.Options or Null ) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary of options; can be null , which defaults to full screen layer :locX — ( Lang.Number ) — The x coordinate of the top left corner of the layer (optional defaults to 0) 
 :locY — ( Lang.Number ) — The y coordinate of the top left corner of the layer (optional defaults to 0) 
 :width — ( Lang.Number ) — The width of the layers in pixels, 
 :height — ( Lang.Number ) — The height of the layers in pixels, 
 :colorDepth — ( Lang.Number ) — hidden option, Color depth in terms of bits/pixel, when missing, default to system value. 
 :visibility — ( Lang.Boolean ) — true if the layer is visible, otherwise false (optional, default to +true+) 
 :identifier — ( Lang.Object ) — unique object for identification (optional) 
 
 
 
 Since: API Level 3.1.0 isVisible() as Lang.Boolean 
 Returns: Lang.Boolean — true if the layer is visible otherwise false 
 
 Since: API Level 3.1.0 setLocation(x as Lang.Numeric , y as Lang.Numeric ) as Void 
 Set draw offset relative to the screen origin Parameters: x — ( Lang.Number ) — new x offset from screen origin 
 y — ( Lang.Number ) — new y offset from screen origin 
 
 Since: API Level 3.1.0 setVisible(visible as Lang.Boolean ) as Void 
 Set visibility of the layer, if the layer hasn't been added to a view, or the view isn't on top of view stack, the value will be saved. Parameters: visible — ( Lang.Boolean ) — true for visible (or to show), false for invisible (or to hide). 
 
 Since: API Level 3.1.0 setX(x as Lang.Numeric ) as Void 
 Set X-axis absolute draw offset relative to the screen origin Parameters: x — ( Lang.Number ) — new x offset from screen origin 
 
 Since: API Level 3.1.0 setY(y as Lang.Numeric ) as Void 
 Set Y-axis absolute draw offset relative to the screen origin Parameters: y — ( Lang.Number ) — new y offset from screen origin 
 
 Since: API Level 3.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [MapMarker (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MapMarker.html)nClass: Toybox.WatchUi.MapMarker
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.MapMarker 
 
 show all Overview
 The base class for the MapMarker object. The MapMarker is used to hold a BitmapResource , or a MAP_MARKER_ICON_* enum value, and the corresponding x, y value to note the "hotspot" for the image to be used as an icon for a marker within a MapView . This class also contains the Location at which the MapMarker should be displayed on the map. Since: API Level 3.0.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Instance Method Summary collapse 
 getLocation () as Position.Location Get the location for the MapMarker. 
 initialize (location as Position.Location ) Constructor. 
 setIcon (icon as Graphics.BitmapType or WatchUi.MapMarkerIcon or Lang.Number , x as Lang.Number , y as Lang.Number ) as Void Set a bitmap icon to use for the MapMarker object on a MapView . 
 setLabel (label as Lang.String or Lang.ResourceId ) as Void 
 
 Instance Method Details
 getLocation() as Position.Location 
 Get the location for the MapMarker. Returns: Position.Location — The location for this MapMarker as a Location object 
 
 Since: API Level 3.0.0 initialize(location as Position.Location ) 
 Constructor Parameters: location — ( Position.Location ) — The Location at which the MapMarker object will be rendered on the map 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if location is not a Location type 
 
 setIcon(icon as Graphics.BitmapType or WatchUi.MapMarkerIcon or Lang.Number , x as Lang.Number , y as Lang.Number ) as Void 
 Set a bitmap icon to use for the MapMarker object on a MapView . Parameters: icon — ( Graphics.BitmapType , Lang.Number ) — A BitmapType or MAP_MARKER_ICON_* value 
 x — ( Lang.Number ) — The x location of the hotspot on the bitmap in pixels (px). Used to align the hotspot with the longitude of the MapMarker. This value is required, but will be disregarded when used with MAP_MARKER_ICON_* type. 
 y — ( Lang.Number ) — The y location of the hotspot on the bitmap in pixels (px). Used to align the hotspot with the latitude value of the MapMarker. This value is required, but will be disregarded when used with MAP_MARKER_ICON_* type. 
 
 Since: API Level 3.0.0 Throws: ( WatchUi.InvalidPointException ) — Thrown if the x, y values for the hotspot fall outside the bounds of the icon image 
 ( Lang.UnexpectedTypeException ) — Thrown if icon is not a supported type 
 ( Lang.InvalidValueException ) — Thrown if icon is not a supported value 
 
 setLabel(label as Lang.String or Lang.ResourceId ) as Void 
 Parameters: label — ( Lang.String , Lang.ResourceId ) — The label for the marker object as a String or string ResourceId 
 
 See Also: Core Topics - String Resources 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [MapPolyline (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MapPolyline.html)nClass: Toybox.WatchUi.MapPolyline
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.MapPolyline 
 
 show all Overview
 An object representing a polyline (polygonal chain) on the map. This object holds an Array of Location objects to draw a polyline on the map. See Also:
 https://en.wikipedia.org/wiki/Polygonal_chain 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Instance Method Summary collapse 
 addLocation (location as Position.Location or Lang.Array &lt; Position.Location &gt;) as Void Add a Location or Locations to the MapPolyline object location Array . 
 clear () as Void Clear all the Location objects from the MapPolyline object's location Array . 
 getLocation (index as Lang.Number ) as Position.Location or Null Get the Location object at a provided index in this MapPolyline object. 
 numLocations () as Lang.Number Get the number of Location objects in this MapPolyline object. 
 setColor (color as Graphics.ColorType ) as Void Set the color of the MapPolyline to draw on the map. 
 setWidth (width as Lang.Number ) as Void Set the width of the MapPolyline to draw on the map. 
 
 Instance Method Details
 addLocation(location as Position.Location or Lang.Array &lt; Position.Location &gt;) as Void 
 Add a Location or Locations to the MapPolyline object location Array . Parameters: location — ( Position.Location , Lang.Array ) — A Location object or an Array of Location objects 
 
 Since: API Level 3.0.0 clear() as Void 
 Clear all the Location objects from the MapPolyline object's location Array . Since: API Level 3.0.0 getLocation(index as Lang.Number ) as Position.Location or Null 
 Get the Location object at a provided index in this MapPolyline object. Parameters: index — ( Lang.Number ) — The index of the requested Location 
 
 Returns: Position.Location — The Location at the provided index 
 
 Since: API Level 3.0.0 numLocations() as Lang.Number 
 Get the number of Location objects in this MapPolyline object. Returns: Lang.Number — The number of Location objects in this MapPolyline object. 
 
 Since: API Level 3.0.0 setColor(color as Graphics.ColorType ) as Void 
 Set the color of the MapPolyline to draw on the map. Parameters: color — ( Graphics.ColorType ) — The color to draw the line on the map as a Graphics.COLOR_* enum value. 
 
 Since: API Level 3.0.0 setWidth(width as Lang.Number ) as Void 
 Set the width of the MapPolyline to draw on the map. Parameters: width — ( Lang.Number ) — The width of the line in pixels (px) 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [MapTrackView (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MapTrackView.html)nClass: Toybox.WatchUi.MapTrackView
 Inherits: Toybox.WatchUi.MapView Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.MapView 
 Toybox.WatchUi.MapTrackView 
 
 show all Overview
 A View for rendering a map on the screen while tracking the current location of the device. This is a dynamic view where the map is centered on the current location of the device. This map will display the default navigation icons for the device (i.e. the navigation arrow). Since: API Level 3.0.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [MapView (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MapView.html)nClass: Toybox.WatchUi.MapView
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.MapView 
 
 show all Overview
 A View for rendering a map on the screen. The map is rendered statically and focused on the bounding box and/or a MapMarker point or MapPolyline drawn on the map. The map can be rendered in MAP_MODE_BROWSE or MAP_MODE_PREVIEW mode. Since: API Level 3.0.0 Supported Devices: [ View devices ] D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 
 Direct Known Subclasses
 WatchUi.MapTrackView Instance Method Summary collapse 
 clear () as Void Clear all the objects from the map. 
 getMapMode () as WatchUi.MapMode Get the current mode for the map in this MapView. 
 initialize () Constructor. 
 setMapMarker (markers as WatchUi.MapMarker or Lang.Array &lt; WatchUi.MapMarker &gt;) as Void Add a MapMarker object or an Array of MapMarker objects to be rendered on the map. 
 setMapMode (mode as WatchUi.MapMode ) as Void Set the mode for the map in this MapView. 
 setMapVisibleArea (topLeft as Position.Location , bottomRight as Position.Location ) as Void Select the area of the map to render on the screen with a bounding box. 
 setPolyline (polyline as WatchUi.MapPolyline ) as Void Add MapPolyline object to be rendered on the map. 
 setScreenVisibleArea (topLeftX as Lang.Number , topLeftY as Lang.Number , bottomRightX as Lang.Number , bottomRightY as Lang.Number ) as Void Set the area on the screen to focus the map. 
 
 Instance Method Details
 clear() as Void 
 Clear all the objects from the map. Removes all MapPolyline and MapMarker objects. Since: API Level 3.0.0 getMapMode() as WatchUi.MapMode 
 Get the current mode for the map in this MapView. Returns: WatchUi.MapMode — The mode in which the map is rendered on the screen as a MAP_MODE_* enum value 
 
 Since: API Level 3.0.0 initialize() 
 Constructor Since: API Level 3.0.0 setMapMarker(markers as WatchUi.MapMarker or Lang.Array &lt; WatchUi.MapMarker &gt;) as Void 
 Add a MapMarker object or an Array of MapMarker objects to be rendered on the map. Parameters: markers — ( WatchUi.MapMarker , Lang.Array ) — A MapMarker object or an Array of Marker objects to be rendered on the map 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the markers param is not a valid MapMarker object or an Array of MapMarker objects 
 
 setMapMode(mode as WatchUi.MapMode ) as Void 
 Set the mode for the map in this MapView. Parameters: mode — ( WatchUi.MapMode ) — The mode in which the map will be rendered on the screen as a MAP_MODE_* enum value 
 
 Since: API Level 3.0.0 setMapVisibleArea(topLeft as Position.Location , bottomRight as Position.Location ) as Void 
 Select the area of the map to render on the screen with a bounding box. A redraw of the current underlying map data will occur, so calling this function inside of onUpdate() is discouraged as it could lead to map flicker. Parameters: topLeft — ( Position.Location ) — The top left point of the visible area of the map 
 bottomRight — ( Position.Location ) — The bottom right point of the visible area of the map 
 
 See Also: MapView.setScreenVisibleArea() 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if topLeft or bottomRight are not a Location objects 
 
 setPolyline(polyline as WatchUi.MapPolyline ) as Void 
 Add MapPolyline object to be rendered on the map. Parameters: polyline — ( WatchUi.MapPolyline ) — The polyline to be rendered on the map 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if polyline is is not a valid MapPolyline object 
 
 setScreenVisibleArea(topLeftX as Lang.Number , topLeftY as Lang.Number , bottomRightX as Lang.Number , bottomRightY as Lang.Number ) as Void 
 Set the area on the screen to focus the map. Parameters: topLeftX — ( Lang.Number ) — The x location of the top-left visible pixel on the screen 
 topLeftY — ( Lang.Number ) — The y location of the top-left visible pixel on the screen 
 bottomRightX — ( Lang.Number ) — The x location of the bottom-right visible pixel on the screen 
 bottomRightY — ( Lang.Number ) — The y location of the bottom-right visible pixel on the screen 
 
 See Also: MapView.setMapVisibleArea() 
 
 Since: API Level 3.0.0 Throws: ( WatchUi.InvalidPointException ) — Thrown if topLeftX , topLeftY , bottomRightX , or bottomRightY are outside the bounds of the device screen 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [Menu (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Menu.html)nClass: Toybox.WatchUi.Menu
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.Menu 
 
 show all Overview
 A representation of an on-screen menu. A Menu is a special View that presents the user with a list of options. After an option is selected, the registered onMenuItem() method will be called. While a Menu can be generated programmatically, they should generally be created as a resource. A Menu is pushed using pushView() , which provides a MenuInputDelegate as the input delegate. See Also:
 Toybox.WatchUi.MenuInputDelegate 
 WatchUi.pushView() 
 
 Note: The look and feel of a menu is device-specific. Example: Build a simple menu programmatically using Toybox.WatchUi; class MyBehaviorDelegate extends WatchUi.BehaviorDelegate { function initialize() { BehaviorDelegate.initialize(); } function onMenu() { var menu = new WatchUi.Menu(); var delegate; menu.setTitle("My Menu"); menu.addItem("Item One", :one); menu.addItem("Item Two", :two); delegate = new MyMenuDelegate(); // a WatchUi.MenuInputDelegate WatchUi.pushView(menu, delegate, WatchUi.SLIDE_IMMEDIATE); return true; } } Since: API Level 1.0.0 Constant Summary
 Constant Variables
 Type Name Value Since Description 
 Type MAX_SIZE 16 API Level 1.0.0 The maximum number of allowed entries in a Menu. 
 Instance Method Summary collapse 
 addItem (label as Lang.String or Lang.ResourceId , identifier as Lang.Symbol ) as Void Add an entry to a Menu. 
 setTitle (title as Lang.String or Lang.ResourceId ) as Void Set a Menu title. 
 
 Instance Method Details
 addItem(label as Lang.String or Lang.ResourceId , identifier as Lang.Symbol ) as Void 
 Add an entry to a Menu. Parameters: label — ( Lang.String , Lang.ResourceId ) — The item text as a String or string ResourceId 
 identifier — ( Lang.Symbol ) — A Symbol representing the Menu item value 
 
 Since: API Level 1.0.0 setTitle(title as Lang.String or Lang.ResourceId ) as Void 
 Set a Menu title. Parameters: title — ( Lang.String , Lang.ResourceId ) — The title text or a string ResourceId 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Menu2 (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Menu2.html)nClass: Toybox.WatchUi.Menu2
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.Menu2 
 
 show all Overview
 A representation of an on-screen menu. A Menu2 is a special View, similar to a Toybox::WatchUi::Menu , that presents the user with a list of options. A Menu2 offers more capabilities than a Toybox::WatchUi::Menu , like graphical titles, menu items that can be updated dynamically, and additional menu elements such as check boxes. After an option is selected, the registered onSelect() method will be called. While a Menu2 can be generated programmatically, they should generally be created as a resource. A Menu2 is pushed using pushView() , which provides a Menu2InputDelegate as the input delegate. See Also:
 Toybox.WatchUi.Menu2InputDelegate 
 Toybox.WatchUi.MenuItem 
 Toybox.WatchUi.BehaviorDelegate 
 WatchUi.pushView() 
 
 Note: The look and feel of a Menu2 is device-specific. Example: Build a simple Menu2 programmatically using Toybox.WatchUi; class MyBehaviorDelegate extends WatchUi.BehaviorDelegate { function initialize() { BehaviorDelegate.initialize(); } function onMenu() { var menu = new WatchUi.Menu2({:title=&gt;"My Menu2"}); var delegate; menu.addItem( new MenuItem( "Item 1 Label", "Item 1 subLabel", "itemOneId", {} ) ); menu.addItem( new MenuItem( "Item 2 Label", "Item 2 subLabel", "itemTwoId", {} ) ); delegate = new MyMenu2Delegate(); // a WatchUi.Menu2InputDelegate WatchUi.pushView(menu, delegate, WatchUi.SLIDE_IMMEDIATE); return true; } } Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Direct Known Subclasses
 WatchUi.CheckboxMenu , WatchUi.CustomMenu Constant Summary
 DividerType
 Divider type for supported devices Since: API Level 5.0.1 Name Value Since Description See Also 
 DIVIDER_TYPE_DEFAULT 0 API Level 5.0.1 Default divider type 
 DIVIDER_TYPE_ICON 1 API Level 5.0.1 Icon divider type 
 Instance Method Summary collapse 
 addItem (item as WatchUi.MenuItem ) as Void Add a MenuItem to a Menu2. 
 deleteItem (index as Lang.Number ) as Lang.Boolean or Null Delete a MenuItem from a Menu2. 
 findItemById (identifier as Lang.Object ) as Lang.Number Find a MenuItem by ID in a Menu2. 
 getIcon () as Graphics.BitmapType or WatchUi.Drawable or Null Get the icon Retrieve the icon for this Menu2. 
 getItem (index as Lang.Number ) as WatchUi.MenuItem or Null Get a MenuItem from a Menu2. 
 initialize (options as { :title as Lang.String or Lang.ResourceId or WatchUi.Drawable , :focus as Lang.Number , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) Constructor. 
 setDividerType (divider as Menu2.DividerType or Null ) as Void Set or change the desired divider type. 
 setFocus (focus as Lang.Number or Null ) as Void Set the focus of a MenuItem in a Menu2. 
 setIcon (icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void Set the icon Set the icon to display in the subscreen area when the focused MenuItem does not have an icon. 
 setTheme (theme as WatchUi.MenuTheme or Null ) as Void Set the theme. 
 setTitle (title as Lang.String or Lang.ResourceId or WatchUi.Drawable or Null ) as Void Set a Menu2 title. 
 updateItem (item as WatchUi.MenuItem , index as Lang.Number ) as Void Update a MenuItem in a Menu2. 
 
 Instance Method Details
 addItem(item as WatchUi.MenuItem ) as Void 
 Add a MenuItem to a Menu2. Parameters: item — ( WatchUi.MenuItem ) — The MenuItem to add to the Menu2 May not be a CheckboxMenuItem 
 
 
 
 Since: API Level 3.0.0 Throws: ( WatchUi.InvalidMenuItemTypeException ) — Thrown if item is a CheckboxMenuItem 
 ( Lang.UnexpectedTypeException ) — Thrown if item is not a valid type 
 
 deleteItem(index as Lang.Number ) as Lang.Boolean or Null 
 Delete a MenuItem from a Menu2. Parameters: index — ( Lang.Number ) — The index of the MenuItem that should be deleted from the Menu2. 
 
 Returns: Toybox::Lang::Boolean true if the item exists, or null if the specified index it outside of the bounds of the menu items array. 
 
 Since: API Level 3.0.0 findItemById(identifier as Lang.Object ) as Lang.Number 
 Find a MenuItem by ID in a Menu2. Parameters: identifier — ( Lang.Object ) — The identifier for which to search 
 
 Returns: Lang.Number — The index of the MenuItem assigned the supplied identifier -1 if not found 
 
 
 
 Since: API Level 3.0.0 getIcon() as Graphics.BitmapType or WatchUi.Drawable or Null 
 Get the icon Retrieve the icon for this Menu2. Supported Devices: [ View devices ] Descent™ G1 / G1 Solar
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 
 Returns: Graphics.BitmapType , Lang.Symbol , WatchUi.Drawable — The icon 
 
 Since: API Level 3.4.0 getItem(index as Lang.Number ) as WatchUi.MenuItem or Null 
 Get a MenuItem from a Menu2. Parameters: index — ( Lang.Number ) — The index of the MenuItem to get 
 
 Returns: WatchUi.MenuItem 
 
 Since: API Level 3.0.0 initialize(options as { :title as Lang.String or Lang.ResourceId or WatchUi.Drawable , :focus as Lang.Number , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId , :theme as WatchUi.MenuTheme or Null , :dividerType as Menu2.DividerType or Null } or Null ) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Note: The :theme option is only used on ConnectIQ 4.1.8 devices with menu theme support. Note: The :dividerType option is only used on ConnectIQ 5.0.1 devices with divider support. Parameters: options — ( Lang.Dictionary ) — A Dictionary of options Can be null 
 
 :title — ( Lang.String , Lang.ResourceId , WatchUi.Drawable ) — The menu title 
 :focus — ( Lang.Number ) — The index of the MenuItem that should have initial focus 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — The icon to display in the subscreen area when the focused MenuItem does not have an icon. 
 :theme — ( WatchUi.MenuTheme ) — The menu theme, or null for no theme. Defaults to MENU_THEME_DEFAULT. 
 :dividerType — ( Menu2.DividerType ) — The divider type, Defaults to DIVIDER_TYPE_DEFAULT. 
 
 
 
 See Also: Toybox.WatchUi.Menu2.setDividerType 
 
 Since: API Level 3.0.0 setDividerType(divider as Menu2.DividerType or Null ) as Void 
 Set or change the desired divider type. If set to Menu2.DIVIDER_TYPE_ICON . For IconMenuItem and CheckboxMenuItem , icon and checkbox will be rendered on the left side of the divider if item is MenuItem.MENU_ITEM_LABEL_ALIGN_LEFT or default aligned. For ToggleMenuItem , toggle icon will be rendered on the left side of the divider, if item is MenuItem.MENU_ITEM_LABEL_ALIGN_LEFT aligned only. Menu2.DIVIDER_TYPE_DEFAULT will be used if not set for devices that support divider, or null is passed. Supported Devices: [ View devices ] Enduro™ 3
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 
 Since: API Level 5.0.1 Throws: ( WatchUi.InvalidValueException ) — Thrown if divider is not an valid value. 
 ( Lang.UnexpectedTypeException ) — Thrown if divider is not a valid type. 
 
 setFocus(focus as Lang.Number or Null ) as Void 
 Set the focus of a MenuItem in a Menu2. Parameters: focus — ( Lang.Number ) — The index of the MenuItem that should have focus 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if focus is not a valid type 
 
 setIcon(icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void 
 Set the icon Set the icon to display in the subscreen area when the focused MenuItem does not have an icon. If this menu does not have an icon, the app icon will be shown instead. Parameters: icon — ( Graphics.BitmapType , Lang.ResourceId , WatchUi.Drawable ) — The icon 
 
 Supported Devices: [ View devices ] Descent™ G1 / G1 Solar
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 
 Since: API Level 3.4.0 setTheme(theme as WatchUi.MenuTheme or Null ) as Void 
 Set the theme Parameters: theme — ( WatchUi.MenuTheme ) — The theme for this menu. 
 
 Supported Devices: [ View devices ] Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 965
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® E
 
 Since: API Level 4.1.8 setTitle(title as Lang.String or Lang.ResourceId or WatchUi.Drawable or Null ) as Void 
 Set a Menu2 title. Parameters: title — ( Lang.String , Lang.ResourceId , WatchUi.Drawable ) — The menu title text, null , a string ResourceId, or a Drawable 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if title is not a valid type 
 
 updateItem(item as WatchUi.MenuItem , index as Lang.Number ) as Void 
 Update a MenuItem in a Menu2. Parameters: item — ( WatchUi.MenuItem ) — The MenuItem to update 
 index — ( Lang.Number ) — The index of the MenuItem to update 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Menu2InputDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Menu2InputDelegate.html)nClass: Toybox.WatchUi.Menu2InputDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.Menu2InputDelegate 
 
 show all Overview
 Menu2InputDelegate responds to a Menu2 selection. This class should be extended to handle selected Menu2 items. See Also:
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.MenuItem 
 
 Example: using Toybox.WatchUi; using Toybox.System; class MyMenu2InputDelegate extends WatchUi.Menu2InputDelegate { function initialize() { Menu2InputDelegate.initialize(); } function onSelect(item) { System.println(item.getId()); } } Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 onBack () as Void A Menu2 Back key was pressed. 
 onDone () as Void A Menu2 Done item was selected. 
 onFooter () as Void A CustomMenu footer was selected. 
 onSelect (item as WatchUi.MenuItem ) as Void A Menu2 MenuItem was selected. 
 onTitle () as Void A CustomMenu title was selected. 
 onWrap (key as WatchUi.Key ) as Lang.Boolean A Menu2 is preparing to wrap. 
 
 Instance Method Details
 onBack() as Void 
 A Menu2 Back key was pressed. If this method is not overridden, it will pop the active view. Since: API Level 3.0.0 onDone() as Void 
 A Menu2 Done item was selected. This method is only triggered by a CheckboxMenu If this method is not overridden, it will pop the active view. Since: API Level 3.0.0 onFooter() as Void 
 A CustomMenu footer was selected. This method is triggered on products with touch input when the user selects the footer area of a CustomMenu. This method is only triggered by a CustomMenu . Since: API Level 3.0.0 onSelect(item as WatchUi.MenuItem ) as Void 
 A Menu2 MenuItem was selected. Parameters: item — ( WatchUi.MenuItem ) — The selected MenuItem. 
 
 Since: API Level 3.0.0 onTitle() as Void 
 A CustomMenu title was selected. This method is triggered on products with touch input when the user selects the title area of a CustomMenu. This method is only triggered by a CustomMenu . Since: API Level 3.0.0 onWrap(key as WatchUi.Key ) as Lang.Boolean 
 A Menu2 is preparing to wrap. This method is triggered on button-based products when the user attempts to navigate off the end of a menu. If this method returns false the list will not wrap to the opposite end. If this method is not overridden, it will return true and allow the menu to wrap. Parameters: key — ( WatchUi.Key ) — The key from the WatchUi.KEY_* enumeration that is triggering the menu wrap. 
 
 Returns: Lang.Boolean — true if wrap is allowed, false otherwise 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [MenuInputDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MenuInputDelegate.html)nClass: Toybox.WatchUi.MenuInputDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.MenuInputDelegate 
 
 show all Overview
 MenuInputDelegate responds to a Menu selection. This class should be extended to handle selected Menu items. See Also:
 Toybox.WatchUi.Menu 
 
 Example: using Toybox.WatchUi; using Toybox.System; class MyMenuInputDelegate extends WatchUi.MenuInputDelegate { function initialize() { MenuInputDelegate.initialize(); } function onMenuItem(item) { if (item == :item_1) { System.println("Item 1"); } else if (item == :item_2) { System.println("Item 2"); } } } Since: API Level 1.0.0 Instance Method Summary collapse 
 onMenuItem (item as Lang.Symbol ) as Void A Menu item was chosen. 
 
 Instance Method Details
 onMenuItem(item as Lang.Symbol ) as Void 
 A Menu item was chosen. This method is called when a Menu item has been selected, and receives the Menu item as an argument. Parameters: item — ( Lang.Symbol ) — The identifier of the chosen Menu item 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [MenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/MenuItem.html)nClass: Toybox.WatchUi.MenuItem
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.MenuItem 
 
 show all Overview
 A representation of a menu item in a Menu2. A MenuItem is a element of a Menu2 View that represents one of the options in the menu. A MenuItem can be added to a Menu2 using the addItem() method. See Also:
 Toybox.WatchUi.Menu2 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Direct Known Subclasses
 WatchUi.CheckboxMenuItem , WatchUi.CustomMenuItem , WatchUi.IconMenuItem , WatchUi.ToggleMenuItem Constant Summary
 Alignment
 Since: API Level 3.0.0 Name Value Since Description See Also 
 MENU_ITEM_LABEL_ALIGN_RIGHT 0 API Level 3.0.0 Right align a MenuItem label 
 MENU_ITEM_LABEL_ALIGN_LEFT 1 API Level 3.0.0 Left align a MenuItem label 
 Instance Method Summary collapse 
 getIcon () as Graphics.BitmapType or WatchUi.Drawable or Null Get the icon Retrieve the icon for this MenuItem. 
 getId () as Lang.Object or Null Get a MenuItem identifier. 
 getLabel () as Lang.String Get a MenuItem label. 
 getSubLabel () as Lang.String or Lang.Dictionary &lt; Lang.Symbol , Lang.String or Null &gt; or Null Get a MenuItem substring label. 
 initialize (label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) Constructor. 
 setIcon (icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void Set the icon Set the icon displayed in the subscreen area when this MenuItem has the focus. 
 setLabel (label as Lang.String or Lang.ResourceId ) as Void Set a MenuItem label. 
 setSubLabel (subLabel as Lang.String or Lang.ResourceId or Null ) as Void Set a MenuItem substring label. 
 
 Instance Method Details
 getIcon() as Graphics.BitmapType or WatchUi.Drawable or Null 
 Get the icon Retrieve the icon for this MenuItem. Supported Devices: [ View devices ] Descent™ G1 / G1 Solar
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 
 Returns: Graphics.BitmapType , WatchUi.Drawable — The icon 
 
 Since: API Level 3.4.0 getId() as Lang.Object or Null 
 Get a MenuItem identifier. Returns: Lang.Object — The identifier for the MenuItem 
 
 Since: API Level 3.0.0 getLabel() as Lang.String 
 Get a MenuItem label. Returns: Lang.String — The text label for the MenuItem 
 
 Since: API Level 3.0.0 getSubLabel() as Lang.String or Lang.Dictionary &lt; Lang.Symbol , Lang.String or Null &gt; or Null 
 Get a MenuItem substring label. Returns: Lang.String — The substring text label for the MenuItem 
 
 Since: API Level 3.0.0 initialize(label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or Null , identifier as Lang.Object or Null , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Parameters: label — ( Lang.String , Lang.ResourceId ) — The string label for the MenuItem 
 subLabel — ( Lang.String , Lang.ResourceId ) — The substring label for the MenuItem, which can be null 
 identifier — ( Lang.Object ) — The identifier for this MenuItem, which is typically a String 
 options — ( Lang.Dictionary ) — A Dictionary of options. Can be null :alignment — ( MenuItem.Alignment ) — One of the WatchUi.MenuItem.MENU_ITEM_LABEL_ALIGN* values that indicates the text alignment for the menu item. 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — The icon displayed in the subscreen area when this MenuItem has the focus. 
 
 
 
 Since: API Level 3.0.0 setIcon(icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId or Null ) as Void 
 Set the icon Set the icon displayed in the subscreen area when this MenuItem has the focus. If the provided icon is null , the icon from the Menu2 will be shown instead. Parameters: icon — ( Graphics.BitmapType , Lang.ResourceId , WatchUi.Drawable ) — The icon 
 
 Supported Devices: [ View devices ] Descent™ G1 / G1 Solar
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 
 Since: API Level 3.4.0 setLabel(label as Lang.String or Lang.ResourceId ) as Void 
 Set a MenuItem label. Parameters: label — ( Lang.String , Lang.ResourceId ) — The text label for the MenuItem 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if label is an invalid type, or if a ResourceId does not reference to a valid string resource 
 
 setSubLabel(subLabel as Lang.String or Lang.ResourceId or Null ) as Void 
 Set a MenuItem substring label. Parameters: subLabel — ( Lang.String , Lang.ResourceId ) — The substring text label for the MenuItem, which can be null 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if label is an invalid type, or if a resource ID does not point to a valid string resource 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [NumberPicker (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/NumberPicker.html)nClass: Toybox.WatchUi.NumberPicker
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.NumberPicker 
 
 show all Overview
 A representation of an on-screen number picker. A NumberPicker is a special View that provides a way to specify numeric values within an app. A NumberPicker is pushed using pushView() and provides a NumberPickerDelegate as the input delegate. The NumberPicker class is limited to the eight specific modes described by the WatchUi.NUMBER_PICKER_* types enum. There are set minimum and maximum values enforced by the product for each mode, and the initial value of the NumberPicker will be adjusted to fall within these bounds. This has been deprecated This class may be removed after System 3. See Also:
 Toybox.WatchUi.NumberPickerDelegate 
 
 Note: The look and feel of a number picker is device-specific. Example: Display a distance picker when the Menu button is pressed using Toybox.WatchUi; class MyNumberPickerDelegate extends WatchUi.NumberPickerDelegate { function initialize() { NumberPickerDelegate.initialize(); } function onNumberPicked(value) { myValue = value; // e.g. 1000f } } class MyInputDelegate extends WatchUi.BehaviorDelegate { var myPicker; function initialize() { BehaviorDelegate.initialize(); } function onMenu() { if (WatchUi has :NumberPicker) { myPicker = new WatchUi.NumberPicker( WatchUi.NUMBER_PICKER_DISTANCE, myValue ); WatchUi.pushView( myPicker, new MyNumberPickerDelegate(), WatchUi.SLIDE_IMMEDIATE ); } return true; } } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 Descent™ Mk1
 epix™
 Forerunner® 230
 Forerunner® 235
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 920XT
 Forerunner® 935
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® Chronos
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 initialize (mode as WatchUi.NumberPickerMode , initialValue as Lang.Number or Lang.Float or Time.Duration ) Constructor. 
 
 Instance Method Details
 initialize(mode as WatchUi.NumberPickerMode , initialValue as Lang.Number or Lang.Float or Time.Duration ) 
 Constructor Parameters: mode — ( Lang.Number ) — The NUMBER_PICKER_* value for the desired mode 
 initialValue — ( Lang.Number , Lang.Float , Time.Duration ) — The initial value for the NumberPicker, dependent on the specified mode 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [NumberPickerDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/NumberPickerDelegate.html)nClass: Toybox.WatchUi.NumberPickerDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.NumberPickerDelegate 
 
 show all Overview
 NumberPickerDelegate responds to a NumberPicker selection. This class should be extended to handle the specified number. This has been deprecated This class may be removed after System 3. See Also:
 Toybox.WatchUi.NumberPicker 
 
 Example: using Toybox.WatchUi; class MyNumberPickerDelegate extends WatchUi.NumberPickerDelegate { function initialize() { NumberPickerDelegate.initialize(); } function onNumberPicked(value) { myValue = value; // e.g. 1000f } } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 Descent™ Mk1
 epix™
 Forerunner® 230
 Forerunner® 235
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 920XT
 Forerunner® 935
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® Chronos
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 onNumberPicked (value as Lang.Number or Lang.Float or Time.Duration ) as Lang.Boolean A number was entered in a NumberPicker. 
 
 Instance Method Details
 onNumberPicked(value as Lang.Number or Lang.Float or Time.Duration ) as Lang.Boolean 
 A number was entered in a NumberPicker. This method is called when a number has been specified by a NumberPicker, and receives the numeric value as an argument. Parameters: value — ( Lang.Number , Lang.Float , Time.Duration ) — The entered number (type dependent upon the NumberPicker mode) 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Picker (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Picker.html)nClass: Toybox.WatchUi.Picker
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.Picker 
 
 show all Overview
 A representation of an on-screen generic picker. A Picker consists of one or more choose-able objects, a title, a next and previous arrow, and a confirmation button. The next and previous arrows and the confirmation button are device specific but can be overridden if desired. A Picker is pushed using pushView() , which provides a PickerDelegate . A PickerFactory is required to indicate what should be displayed for each pick-able value, and is capable of displaying any number of entries from which may be chosen. For example, consider the following: new NumberFactory(); new Ui.Text({:text=&gt;"-"}); new NumberFactory(); This Picker will have three entries: a choosable number, a non-choosable "-", and another choosable number. See Also:
 Toybox.WatchUi.PickerDelegate 
 Toybox.WatchUi.PickerFactory 
 
 Note: See the Picker sample distributed with the SDK for an example of the use of the Picker class Note: The look and feel of a Picker is device-specific, though every device will have the same general layout. Since: API Level 1.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Typedef Summary collapse 
 Options as { :title as WatchUi.Drawable , :pattern as Lang.Array &lt; WatchUi.Drawable or WatchUi.PickerFactory &gt;, :defaults as Lang.Array &lt; Lang.Number &gt;, :nextArrow as WatchUi.Drawable , :previousArrow as WatchUi.Drawable , :confirm as WatchUi.Drawable } 
 
 Instance Method Summary collapse 
 initialize (options as Picker.Options ) Constructor. 
 setOptions (options as Picker.Options ) as Void Set the options for the Picker. 
 
 Typedef Details
 Options as { :title as WatchUi.Drawable , :pattern as Lang.Array &lt; WatchUi.Drawable or WatchUi.PickerFactory &gt;, :defaults as Lang.Array &lt; Lang.Number &gt;, :nextArrow as WatchUi.Drawable , :previousArrow as WatchUi.Drawable , :confirm as WatchUi.Drawable } 
 Since: API Level 1.2.0 Instance Method Details
 initialize(options as Picker.Options ) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary containing the options for the Picker object 
 
 See Also: Picker.setOptions() 
 
 Since: API Level 1.2.0 setOptions(options as Picker.Options ) as Void 
 Set the options for the Picker. Parameters: options — ( Lang.Dictionary ) — A Dictionary containing the options for the Picker object :title — ( WatchUi.Drawable ) — The title for the Picker (required) 
 :pattern — ( Lang.Array ) — An Array of either Drawable or PickerFactory objects for the Picker to display. A PickerFactory presents a choice of Pickers, while a Drawable immediately displays the Picker (required) 
 :defaults — ( Lang.Array ) — An Array of Number objects indicating the starting index for each entry in the supplied pattern (optional) 
 :nextArrow — ( WatchUi.Drawable ) — A custom next icon for the Picker (optional) 
 :previousArrow — ( WatchUi.Drawable ) — A custom previous icon for the Picker (optional) 
 :confirm — ( WatchUi.Drawable ) — A custom confirmation icon for the Picker (optional) 
 
 
 
 See Also: Toybox.WatchUi.PickerFactory 
 Toybox.WatchUi.Drawable 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [PickerDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/PickerDelegate.html)nClass: Toybox.WatchUi.PickerDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.PickerDelegate 
 
 show all Overview
 PickerDelegate responds to a Picker confirm or cancel. See Also:
 Toybox.WatchUi.Picker 
 
 Note: popView() is not automatically called once a Picker selection is made Note: See the Picker sample distributed with the SDK for an example of the use of the PickerDelegate class Since: API Level 1.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 onAccept (values as Lang.Array ) as Lang.Boolean Handle a confirm event from a Picker. 
 onCancel () as Lang.Boolean Handle a cancel event from a Picker. 
 
 Instance Method Details
 onAccept(values as Lang.Array ) as Lang.Boolean 
 Handle a confirm event from a Picker Note: A null value will be returned for any Drawable entries Parameters: values — ( Lang.Array ) — The values chosen in the Picker. 
 
 Since: API Level 1.2.0 onCancel() as Lang.Boolean 
 Handle a cancel event from a Picker Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [PickerFactory (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/PickerFactory.html)nClass: Toybox.WatchUi.PickerFactory
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.PickerFactory 
 
 show all Overview
 Create a PickerFactory. A PickerFactory is used to specify which objects will be displayed by a Picker See Also:
 Toybox.WatchUi.Picker 
 
 Note: See the Picker sample distributed with the SDK for an example of the use of the PickerFactory class Since: API Level 1.2.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 getDrawable (item as Lang.Number , isSelected as Lang.Boolean ) as WatchUi.Drawable or Null Generate a Drawable instance for an item. 
 getSize () as Lang.Number Get the number of items in the PickerFactory. 
 getValue (item as Lang.Number ) as Lang.Object or Null Return value for an item. 
 
 Instance Method Details
 getDrawable(item as Lang.Number , isSelected as Lang.Boolean ) as WatchUi.Drawable or Null 
 Generate a Drawable instance for an item. Parameters: item — ( Lang.Number ) — The item index 
 isSelected — ( Lang.Boolean ) — true if the current item is the selected item, otherwise false 
 
 Returns: WatchUi.Drawable — The Drawable object to render 
 
 Since: API Level 1.2.0 getSize() as Lang.Number 
 Get the number of items in the PickerFactory. Returns: Lang.Number 
 
 Since: API Level 1.2.0 getValue(item as Lang.Number ) as Lang.Object or Null 
 Return value for an item. Parameters: item — ( Lang.Number ) — The item index 
 
 Returns: Lang.Object — The item's value 
 
 Since: API Level 1.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [ProgressBar (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ProgressBar.html)nClass: Toybox.WatchUi.ProgressBar
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ProgressBar 
 
 show all Overview
 A representation of an on-screen progress bar. A ProgressBar is a special View that presents the user with a progress indicator. These can display a string and either an incremental progress bar from 0-100% or a "busy" indicator. A ProgressBar is pushed using pushView() , which provides either null or a BehaviorDelegate . If a BehaviorDelegate is provided, the onBack() method will be called if Back button is pressed while the ProgressBar is displayed. Note: The look and feel of a progress bar is device-specific. Example: Create a simple busy progress indicator using Toybox.WatchUi; class MyProgressDelegate extends Ui.BehaviorDelegate { function initialize() { BehaviorDelegate.initialize(); } function onBack() { return true; } } class MyBehaviorDelegate extends Ui.BehaviorDelegate { var progressBar; function initialize() { BehaviorDelegate.initialize(); } function onSelect() { progressBar = new WatchUi.ProgressBar( "Processing...", null ); Ui.pushView( progressBar, new MyProgressDelegate(), Ui.SLIDE_DOWN ); return true; } } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 initialize (displayString as Lang.String , startValue as Lang.Float or Null ) Constructor. 
 setDisplayString (displayString as Lang.String ) as Void Set the string to display on the ProgressBar. 
 setProgress (progressValue as Lang.Float or Null ) as Void Set the value of the ProgressBar. 
 
 Instance Method Details
 initialize(displayString as Lang.String , startValue as Lang.Float or Null ) 
 Constructor Parameters: displayString — ( Lang.String ) — The string to display on the ProgressBar 
 startValue — ( Lang.Float ) — The initial value for the ProgressBar: An increment from 0 to 100 
 null for "busy" 
 
 
 
 Since: API Level 1.0.0 setDisplayString(displayString as Lang.String ) as Void 
 Set the string to display on the ProgressBar. Parameters: displayString — ( Lang.String ) — The string to display on the ProgressBar 
 
 Since: API Level 1.0.0 setProgress(progressValue as Lang.Float or Null ) as Void 
 Set the value of the ProgressBar. Parameters: progressValue — ( Lang.Float ) — The current value of the ProgressBar: An increment from 0 to 100 
 null for "busy" 
 
 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [ReviewResponseToken (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ReviewResponseToken.html)nClass: Toybox.WatchUi.ReviewResponseToken
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ReviewResponseToken 
 
 show all Overview
 Class that represents an opaque review response token Since: API Level 3.4.2 Supported Devices: [ View devices ] D2™ Air X10
 D2™ Mach 1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Generated Dec 11, 2024, 8:58:44 AM


# [Selectable (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Selectable.html)nClass: Toybox.WatchUi.Selectable
 Inherits: Toybox.WatchUi.Drawable Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 Toybox.WatchUi.Selectable 
 
 show all Overview
 A representation of an on-screen selectable object with defined states depending on selection mode. See Also:
 Toybox.WatchUi.Drawable 
 
 Note: See the Selectable sample distributed with the SDK for an example of the use of the Selectable class Since: API Level 2.1.0 Direct Known Subclasses
 WatchUi.Button Instance Member Summary collapse 
 stateDefault as Graphics.ColorType or WatchUi.Drawable or Null The default state of a Selectable object. 
 stateDisabled as Graphics.ColorType or WatchUi.Drawable or Null The disabled state of a Selectable object. 
 stateHighlighted as Graphics.ColorType or WatchUi.Drawable or Null The highlighted state of a Selectable object. 
 stateSelected as Graphics.ColorType or WatchUi.Drawable or Null The selected state of a Selectable object. 
 
 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw the Selectable to the device context ( Dc ). 
 getState () as Lang.Symbol Get the current state of a Selectable object. 
 initialize (options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :stateDefault as Graphics.ColorType or WatchUi.Drawable , :stateHighlighted as Graphics.ColorType or WatchUi.Drawable , :stateSelected as Graphics.ColorType or WatchUi.Drawable , :stateDisabled as Graphics.ColorType or WatchUi.Drawable , :identifier as Lang.Object , :visible as Lang.Boolean }) Constructor. 
 setState (state as Lang.Symbol ) as Void Set the current state of a Selectable object. 
 
 Instance Attribute Details
 var stateDefault as Graphics.ColorType or WatchUi.Drawable or Null 
 The default state of a Selectable object. A Drawable , Graphics.COLOR_* constant, or 24-bit integer of the form 0xRRGGBB representing the default state of the Selectable Since: API Level 2.1.0 Returns: Lang.Object 
 
 var stateDisabled as Graphics.ColorType or WatchUi.Drawable or Null 
 The disabled state of a Selectable object. A Drawable , Graphics.COLOR_* constant, or 24-bit integer of the form 0xRRGGBB representing the disabled state of the Selectable Since: API Level 2.1.0 Returns: Lang.Object 
 
 var stateHighlighted as Graphics.ColorType or WatchUi.Drawable or Null 
 The highlighted state of a Selectable object. A Drawable , Graphics.COLOR_* constant, or 24-bit integer of the form 0xRRGGBB representing the highlighted state of the Selectable Since: API Level 2.1.0 Returns: Lang.Object 
 
 var stateSelected as Graphics.ColorType or WatchUi.Drawable or Null 
 The selected state of a Selectable object. A Drawable , Graphics.COLOR_* constant, or 24-bit integer of the form 0xRRGGBB representing the selected state of the Selectable Since: API Level 2.1.0 Returns: Lang.Object 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw the Selectable to the device context ( Dc ). This method assumes that the device context has already been configured to the proper options. Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 2.1.0 getState() as Lang.Symbol 
 Get the current state of a Selectable object. Returns: Lang.Symbol — The current state: :stateDefault 
 :stateHighlighted 
 :stateSelected 
 :stateDisabled 
 
 
 
 Since: API Level 2.1.0 initialize(options as { :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :stateDefault as Graphics.ColorType or WatchUi.Drawable , :stateHighlighted as Graphics.ColorType or WatchUi.Drawable , :stateSelected as Graphics.ColorType or WatchUi.Drawable , :stateDisabled as Graphics.ColorType or WatchUi.Drawable , :identifier as Lang.Object , :visible as Lang.Boolean }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary containing options for the Selectable object :locX — ( Lang.Numeric ) — The absolute, on-screen x-coordinate for the Selectable object (required) 
 :locY — ( Lang.Numeric ) — The absolute, on-screen y-coordinate for the Selectable object (required) 
 :width — ( Lang.Numeric ) — The clip width of the Selectable object (required) 
 :height — ( Lang.Numeric ) — The clip height of the Selectable object (required) 
 :stateDefault — ( Graphics.ColorType , WatchUi.Drawable ) — The Drawable or color to display in default state (optional) 
 :stateHighlighted — ( Graphics.ColorType , WatchUi.Drawable ) — The Drawable or color to display in highlighted state (optional) 
 :stateSelected — ( Graphics.ColorType , WatchUi.Drawable ) — The Drawable or color to display in selected state (optional) 
 :stateDisabled — ( Graphics.ColorType , WatchUi.Drawable ) — The Drawable or color to display in disabled state (optional) 
 
 
 
 See Also: Drawable.initialize() 
 
 Since: API Level 2.1.0 setState(state as Lang.Symbol ) as Void 
 Set the current state of a Selectable object. Parameters: state — ( Lang.Symbol ) — The desired state: :stateDefault 
 :stateHighlighted 
 :stateSelected 
 :stateDisabled 
 
 
 
 Since: API Level 2.1.0 Throws: ( WatchUi.InvalidSelectableStateException ) 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [SelectableEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/SelectableEvent.html)nClass: Toybox.WatchUi.SelectableEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.SelectableEvent 
 
 show all Overview
 SelectableEvent is an object sent to InputDelegate when a Selectable is manipulated using physical buttons or touch screen. See Also:
 Toybox.WatchUi.Selectable 
 
 Since: API Level 2.1.0 Instance Method Summary collapse 
 getInstance () as WatchUi.Selectable Get the instance of the manipulated Selectable . 
 getPreviousState () as Lang.Symbol Get the previous state of the Selectable that generated the event. 
 
 Instance Method Details
 getInstance() as WatchUi.Selectable 
 Get the instance of the manipulated Selectable . Returns: Lang.Object — A reference to the Selectable 
 
 Since: API Level 2.1.0 getPreviousState() as Lang.Symbol 
 Get the previous state of the Selectable that generated the event. Returns: Lang.Symbol — A symbol representing one of the four available states: stateDefault 
 stateHighlighted 
 stateSelected 
 stateDisabled 
 
 
 
 Since: API Level 2.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [SimpleDataField (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/SimpleDataField.html)nClass: Toybox.WatchUi.SimpleDataField
 Inherits: Toybox.WatchUi.DataField Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.DataField 
 Toybox.WatchUi.SimpleDataField 
 
 show all Overview
 Create a SimpleDataField. A SimpleDataField is a special View that automatically provides Activity.Info once per second via the compute() method. Just like in a DataField , a SimpleDataField automatically provides Activity.Info once per second via the compute() method. In exchange for the flexibility offered in a DataField, all field layout is handled automatically in a SimpleDataField. A SimpleDataField requires two items: A compute() method should return the value to be displayed by the SimpleDataField. Allowed types are Number, Float, Long, Double, Duration, and String. 
 A "label" variable, which should be assigned a String label for the field. 
 
 See Also:
 Toybox.WatchUi.DataField 
 Activity.Info 
 
 Note: The system will call the onUpdate() method inherited from View when a Data Field is displayed by the system. Because compute() and onUpdate() are asynchronous, there is no guarantee that compute() will be called before onUpdate(). For this reason, variables should never be initialized in compute(). Example: A SimpleDataField that displays current heart rate using Toybox.WatchUi; class MySimpleHRField extends WatchUi.SimpleDataField { // Set the label of the field here function initialize() { SimpleDataField.initialize(); label = "My Current HR"; } // Specify the Activity info to display in the field here function compute(info) { return info.currentHeartRate; } } Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 130 Plus
 Edge® 130
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Member Summary collapse 
 label as Lang.String The field label String. 
 
 Instance Method Summary collapse 
 compute (info as Activity.Info ) as Lang.Numeric or Time.Duration or Lang.String or Null Retrieve Activity.Info in a SimpleDataField. 
 initialize () Constructor. 
 
 Instance Attribute Details
 var label as Lang.String 
 The field label String. Since: API Level 1.0.0 Instance Method Details
 compute(info as Activity.Info ) as Lang.Numeric or Time.Duration or Lang.String or Null 
 Retrieve Activity.Info in a SimpleDataField. This method is called once per second and automatically provides Activity.Info to the SimpleDataField object for display or additional computation. It is necessary to override compute() when implementing a SimpleDataField. The value to be displayed in the field must be returned by this method. Parameters: info — ( Activity.Info ) — The updated Activity.Info object 
 
 Example: function compute(info) { return info.currentHeartRate; } Returns: Lang.Number , Lang.Long , Lang.Float , Lang.Double , Time.Duration , Lang.String , null — The value to be displayed in the field or null 
 
 See Also: Activity.Info 
 
 Since: API Level 1.0.0 initialize() 
 Constructor Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [SwipeEvent (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/SwipeEvent.html)nClass: Toybox.WatchUi.SwipeEvent
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.SwipeEvent 
 
 show all Overview
 SwipeEvent is an object sent to InputDelegate when there is swipe interaction with the device's touch screen. See Also:
 Toybox.WatchUi.InputDelegate 
 
 Example: using Toybox.System; using Toybox.WatchUi; class InputDelegate extends WatchUi.BehaviorDelegate { function onSwipe(swipeEvent) { System.println(swipeEvent.getDirection()); // e.g. SWIPE_RIGHT = 1 return true; } } Since: API Level 1.0.0 Instance Method Summary collapse 
 getDirection () as WatchUi.SwipeDirection Get the direction of the swipe. 
 
 Instance Method Details
 getDirection() as WatchUi.SwipeDirection 
 Get the direction of the swipe. Returns: WatchUi.SwipeDirection — A WatchUi.SWIPE_* value 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [Text (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/Text.html)nClass: Toybox.WatchUi.Text
 Inherits: Toybox.WatchUi.Drawable Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 Toybox.WatchUi.Text 
 
 show all Overview
 A representation of a text resource. See Also:
 Toybox.WatchUi.Drawable 
 
 Example: using Toybox.Graphics; using Toybox.WatchUi; class MyTextView extends WatchUi.View { hidden var myText; function initialize() { View.initialize(); } function onShow() { myText = new WatchUi.Text({ :text=&gt;"Hello World!", :color=&gt;Graphics.COLOR_WHITE, :font=&gt;Graphics.FONT_LARGE, :locX =&gt;WatchUi.LAYOUT_HALIGN_CENTER, :locY=&gt;WatchUi.LAYOUT_VALIGN_CENTER }); } function onUpdate(dc) { dc.setColor(Graphics.COLOR_WHITE, Graphics.COLOR_BLACK); dc.clear(); myText.draw(dc); } } Since: API Level 1.0.0 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw Text to the device context ( Dc ). 
 initialize (options as { :text as Lang.String or Lang.ResourceId , :color as Graphics.ColorType , :backgroundColor as Graphics.ColorType , :font as Graphics.FontType , :justification as Graphics.TextJustification or Lang.Number , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) Constructor. 
 setBackgroundColor (color as Graphics.ColorType ) as Void Set the background color of a Text object. 
 setColor (color as Graphics.ColorType ) as Void Set the color of a Text object. 
 setFont (font as Graphics.FontType ) as Void Set the font face of a Text object. 
 setJustification (justification as Graphics.TextJustification or Lang.Number ) as Void Set the justification of a Text object. 
 setText (text as Lang.String or Lang.ResourceId ) as Void Set the text string of a Text object. 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw Text to the device context ( Dc ). Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 1.0.0 initialize(options as { :text as Lang.String or Lang.ResourceId , :color as Graphics.ColorType , :backgroundColor as Graphics.ColorType , :font as Graphics.FontType , :justification as Graphics.TextJustification or Lang.Number , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary containing the options for the Text object :text — ( Lang.String , Lang.ResourceId ) — The text string or ResourceId of a string resource 
 :color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired text color, defaults to COLOR_WHITE 
 :backgroundColor — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired background color, defaults to COLOR_TRANSPARENT 
 :font — ( Graphics.FontType ) — A value representing the desired font face, defaults to FONT_MEDIUM 
 :justification — ( Graphics.TextJustification , Lang.Number ) — A Graphics.TEXT_JUSTIFY_* value representing the desired justification, defaults to TEXT_JUSTIFY_LEFT 
 
 
 
 See Also: Drawable.initialize() 
 
 Since: API Level 1.0.0 setBackgroundColor(color as Graphics.ColorType ) as Void 
 Set the background color of a Text object. Parameters: color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired background color 
 
 Since: API Level 1.3.0 setColor(color as Graphics.ColorType ) as Void 
 Set the color of a Text object. Parameters: color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired text color 
 
 Since: API Level 1.0.0 setFont(font as Graphics.FontType ) as Void 
 Set the font face of a Text object. Parameters: font — ( Graphics.FontDefinition ) — A Graphics.FONT_* value representing the desired font face or a resource object from WatchUi.loadResource() 
 
 See Also: WatchUi.loadResource() 
 
 Since: API Level 1.0.0 setJustification(justification as Graphics.TextJustification or Lang.Number ) as Void 
 Set the justification of a Text object. Parameters: justification — ( Graphics.TextJustification ) — A Graphics.TEXT_JUSTIFY_* value representing the desired justification 
 
 Since: API Level 1.0.0 setText(text as Lang.String or Lang.ResourceId ) as Void 
 Set the text string of a Text object. Parameters: text — ( Lang.String , Lang.ResourceId ) — The text String or a string ResourceId 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [TextArea (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/TextArea.html)nClass: Toybox.WatchUi.TextArea
 Inherits: Toybox.WatchUi.Drawable Toybox.Lang.Object 
 Toybox.WatchUi.Drawable 
 Toybox.WatchUi.TextArea 
 
 show all Overview
 A representation of a text area that will automatically apply line breaks to fit as much text as possible. See Also:
 Drawable 
 
 Example: using Toybox.Graphics; using Toybox.WatchUi; class MyTextAreaView extends WatchUi.View { hidden var myTextArea; function initialize() { View.initialize(); } function onShow() { myTextArea = new WatchUi.TextArea({ :text=&gt;"Lorem ipsum dolor sit amet, consectetur adipiscing elit.", :color=&gt;Graphics.COLOR_WHITE, :font=&gt;[Graphics.FONT_MEDIUM, Graphics.FONT_SMALL, Graphics.FONT_XTINY], :locX =&gt;WatchUi.LAYOUT_HALIGN_CENTER, :locY=&gt;WatchUi.LAYOUT_VALIGN_CENTER, :width=&gt;160, :height=&gt;160 }); } function onUpdate(dc) { dc.setColor(Graphics.COLOR_WHITE, Graphics.COLOR_BLACK); dc.clear(); myTextArea.draw(dc); } } Since: API Level 3.1.0 Instance Method Summary collapse 
 draw (dc as Graphics.Dc ) as Void Draw Text to the device context ( Dc ). 
 initialize (options as { :text as Lang.String or Lang.ResourceId , :color as Graphics.ColorType , :backgroundColor as Graphics.ColorType , :font as Graphics.FontType or Lang.Array &lt; Graphics.FontType &gt;, :justification as Graphics.TextJustification or Lang.Number , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) Constructor. 
 setBackgroundColor (color as Graphics.ColorType ) as Void Set the background color of a Text object. 
 setColor (color as Graphics.ColorType ) as Void Set the color of a Text object. 
 setFont (font as Graphics.FontType or Lang.Array &lt; Graphics.FontType &gt;) as Void Set the font face of a Text object. 
 setJustification (justification as Lang.Number ) as Void Set the justification of a Text object. 
 setText (text as Lang.String or Lang.ResourceId ) as Void Set the text string of a Text object. 
 
 Instance Method Details
 draw(dc as Graphics.Dc ) as Void 
 Draw Text to the device context ( Dc ). Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 3.1.0 initialize(options as { :text as Lang.String or Lang.ResourceId , :color as Graphics.ColorType , :backgroundColor as Graphics.ColorType , :font as Graphics.FontType or Lang.Array &lt; Graphics.FontType &gt;, :justification as Graphics.TextJustification or Lang.Number , :identifier as Lang.Object , :locX as Lang.Numeric , :locY as Lang.Numeric , :width as Lang.Numeric , :height as Lang.Numeric , :visible as Lang.Boolean }) 
 Constructor Parameters: options — ( Lang.Dictionary ) — A Dictionary containing the options for the Text object :text — ( Lang.String , Lang.ResourceId ) — The text string or ResourceId of a string resource 
 :color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired text color, defaults to COLOR_WHITE 
 :backgroundColor — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired background color, defaults to COLOR_TRANSPARENT 
 :font — ( Lang.Array , Graphics.FontDefinition ) — A Graphics.FONT_* value representing the desired font face, or an array of such values. Defaults to FONT_MEDIUM 
 :justification — ( Graphics.TextJustification ) — A Graphics.TEXT_JUSTIFY_* value representing the desired justification, defaults to TEXT_JUSTIFY_LEFT 
 
 
 
 See Also: Drawable.initialize() 
 
 Since: API Level 3.1.0 setBackgroundColor(color as Graphics.ColorType ) as Void 
 Set the background color of a Text object. Parameters: color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired background color 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if color is not a valid type 
 
 setColor(color as Graphics.ColorType ) as Void 
 Set the color of a Text object. Parameters: color — ( Graphics.ColorType ) — A Graphics.COLOR_* value representing the desired text color 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if color is not a valid type 
 
 setFont(font as Graphics.FontType or Lang.Array &lt; Graphics.FontType &gt;) as Void 
 Set the font face of a Text object. Parameters: font — ( Graphics.FontDefinition ) — A Graphics.FONT_* value representing the desired font face or a resource object from WatchUi.loadResource() , or an Array of such values. 
 
 See Also: WatchUi.loadResource() 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if font is not a valid type 
 
 setJustification(justification as Lang.Number ) as Void 
 Set the justification of a Text object. Parameters: justification — ( Graphics.TextJustification ) — A Graphics.TEXT_JUSTIFY_* value representing the desired justification 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if justification is not a valid type 
 
 setText(text as Lang.String or Lang.ResourceId ) as Void 
 Set the text string of a Text object. Parameters: text — ( Lang.String , Lang.ResourceId ) — The text String or a string ResourceId 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if text is not a valid type 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [TextPicker (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/TextPicker.html)nClass: Toybox.WatchUi.TextPicker
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.TextPicker 
 
 show all Overview
 A representation of an on-screen text picker. A TextPicker is a special View that provides a way to specify textual input in an app. A TextPicker is pushed using pushView() , and provides a TextPickerDelegate as the input delegate. A default value can be provided and is displayed as editable text with the cursor placed at the end. See Also:
 Toybox.WatchUi.TextPickerDelegate 
 
 Note: The look and feel of a text picker is device-specific. Example: using Toybox.WatchUi; // A string to display on the screen var screenMessage = "Press Menu to Enter Text"; var lastText = ""; class MyTextPickerDelegate extends WatchUi.TextPickerDelegate { function initialize() { TextPickerDelegate.initialize(); } function onTextEntered(text, changed) { screenMessage = text + "\n" + "Changed: " + changed; lastText = text; } function onCancel() { screenMessage = "Canceled"; } } class MyInputDelegate extends WatchUi.InputDelegate { function initialize() { InputDelegate.initialize(); } function onKey(key) { if (WatchUi has :TextPicker) { if (key.getKey() == Ui.KEY_MENU) { WatchUi.pushView( new WatchUi.TextPicker(lastText), new MyTextPickerDelegate(), WatchUi.SLIDE_DOWN ); } } return true; } } Since: API Level 1.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize (initialText as Lang.String ) Constructor. 
 
 Instance Method Details
 initialize(initialText as Lang.String ) 
 Constructor Parameters: initialText — ( Lang.String ) — The initial text for the TextPicker 
 
 Since: API Level 1.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [TextPickerDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/TextPickerDelegate.html)nClass: Toybox.WatchUi.TextPickerDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.TextPickerDelegate 
 
 show all Overview
 TextPickerDelegate responds to a TextPicker selection. This class should be extended to handle the specified text. See Also:
 Toybox.WatchUi.TextPicker 
 
 Example: using Toybox.WatchUi; // A string to display on the screen var screenMessage = "Press Menu to Enter Text"; var lastText = ""; class MyTextPickerDelegate extends WatchUi.TextPickerDelegate { function initialize() { TextPickerDelegate.initialize(); } function onTextEntered(text, changed) { screenMessage = text + "\n" + "Changed: " + changed; lastText = text; } function onCancel() { screenMessage = "Canceled"; } } Since: API Level 1.1.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1000 / Explore
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 520
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 vívoactive® 5
 
 Instance Method Summary collapse 
 onCancel () as Lang.Boolean Text entry has been canceled. 
 onTextEntered (text as Lang.String , changed as Lang.Boolean ) as Lang.Boolean A text string was entered into a TextPicker. 
 
 Instance Method Details
 onCancel() as Lang.Boolean 
 Text entry has been canceled. Since: API Level 1.1.0 onTextEntered(text as Lang.String , changed as Lang.Boolean ) as Lang.Boolean 
 A text string was entered into a TextPicker. This method is called when text has been specified by a TextPicker, and receives the text String as an argument. Parameters: text — ( Lang.String ) — The entered text 
 changed — ( Lang.Boolean ) — The entered text differs from the initially specified text of the TextPicker 
 
 Since: API Level 1.1.0 Generated Dec 11, 2024, 8:58:44 AM


# [ToggleMenuItem (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ToggleMenuItem.html)nClass: Toybox.WatchUi.ToggleMenuItem
 Inherits: Toybox.WatchUi.MenuItem Toybox.Lang.Object 
 Toybox.WatchUi.MenuItem 
 Toybox.WatchUi.ToggleMenuItem 
 
 show all Overview
 A representation of a toggle item in a Menu2. A ToggleMenuItem is a element of a Menu2 View that represents one of the options in the menu, and includes an indicator on the menu item that appears in one of two states: enabled or disabled. When selected, the state of the ToggleMenuItem changes to the state opposite of the state prior to the onSelect delegate callback invocation. A ToggleMenuItem can be added to a Menu2 using the addItem() method. See Also:
 Toybox.WatchUi.Menu2 
 Toybox.WatchUi.MenuItem 
 
 Since: API Level 3.0.0 Supported Devices: [ View devices ] Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 520 Plus
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 820 / Explore
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Edge® Explore
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 GPSMAP® 66s / 66i / 66sr / 66st
 GPSMAP® 67 / 67i
 GPSMAP® 86s / 86sc / 86i / 86sci
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Oregon® 7 Series
 Rey™
 Rino® 7 Series
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Instance Method Summary collapse 
 getSubLabel () as Lang.String or Lang.Dictionary &lt; Lang.Symbol , Lang.String or Null &gt; or Null Get a ToggleMenuItem label substring. 
 initialize (label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or { :enabled as Lang.String or Lang.ResourceId or Null , :disabled as Lang.String or Lang.ResourceId or Null } or Null , identifier as Lang.Object or Null , enabled as Lang.Boolean , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) Constructor. 
 isEnabled () as Lang.Boolean Get a ToggleMenuItem state. 
 setEnabled (enabled as Lang.Boolean ) as Void Set a ToggleMenuItem state. 
 setSubLabel (subLabel as Lang.String or Lang.ResourceId or { :enabled as Lang.String or Lang.ResourceId or Null , :disabled as Lang.String or Lang.ResourceId or Null } or Null ) as Void Set a ToggleMenuItem label substring. 
 
 Instance Method Details
 getSubLabel() as Lang.String or Lang.Dictionary &lt; Lang.Symbol , Lang.String or Null &gt; or Null 
 Get a ToggleMenuItem label substring. Returns: Lang.String , Lang.Dictionary — The substring text label for the ToggleMenuItem 
 
 Since: API Level 3.0.0 initialize(label as Lang.String or Lang.ResourceId , subLabel as Lang.String or Lang.ResourceId or { :enabled as Lang.String or Lang.ResourceId or Null , :disabled as Lang.String or Lang.ResourceId or Null } or Null , identifier as Lang.Object or Null , enabled as Lang.Boolean , options as { :alignment as MenuItem.Alignment , :icon as Graphics.BitmapType or WatchUi.Drawable or Lang.ResourceId } or Null ) 
 Constructor Note: The :icon option is only used on ConnectIQ 3.4.0 devices with subscreen support. Parameters: label — ( Lang.String , Lang.ResourceId ) — The string label for the ToggleMenuItem 
 subLabel — ( Lang.String , Lang.ResourceId , Lang.Dictionary ) — The substring label for the item or a dictionary of toggle states mapped to sub-label strings, which can be null :enabled — ( Lang.String , Lang.ResourceId ) — The string displayed when the ToggleMenuItem is enabled, or null 
 :disabled — ( Lang.String , Lang.ResourceId ) — The string displayed when the ToggleMenuItem is disabled, or null 
 
 
 identifier — ( Lang.Object ) — The identifier for this ToggleMenuItem, which is typically a String 
 enabled — ( Lang.Boolean ) — The initial state of the ToggleMenuItem; enabled if true , disabled if false 
 options — ( Lang.Dictionary ) — A Dictionary of options :alignment — ( MenuItem.Alignment ) — A WatchUi.MenuItem.MENU_ITEM_LABEL_ALIGN_* constant representing the label alignment, which defaults to the system default for toggle menu items if not specified. 
 :icon — ( Graphics.BitmapType , WatchUi.Drawable , Lang.ResourceId ) — for the subscreen area when the menu item is in focus 
 
 
 
 Since: API Level 3.0.0 isEnabled() as Lang.Boolean 
 Get a ToggleMenuItem state. Returns: Lang.Boolean — The current state of the ToggleMenuItem 
 
 Since: API Level 3.0.0 setEnabled(enabled as Lang.Boolean ) as Void 
 Set a ToggleMenuItem state. Parameters: enabled — ( Lang.Boolean ) — The intended state of the ToggleMenuItem; enabled if true , disabled if false 
 
 Since: API Level 3.0.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if enabled is not a valid type 
 
 setSubLabel(subLabel as Lang.String or Lang.ResourceId or { :enabled as Lang.String or Lang.ResourceId or Null , :disabled as Lang.String or Lang.ResourceId or Null } or Null ) as Void 
 Set a ToggleMenuItem label substring. Parameters: subLabel — ( Lang.String , Lang.ResourceId , Lang.Dictionary ) — The substring label for the item or a dictionary of toggle states mapped to sub-label strings, which can be null :enabled — ( Lang.String ) — The string displayed when the ToggleMenuItem is enabled, or null 
 :disabled — ( Lang.String ) — The string displayed when the ToggleMenuItem is disabled, or null 
 
 
 
 Since: API Level 3.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [View (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/View.html)nClass: Toybox.WatchUi.View
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.View 
 
 show all Overview
 A View is an object that represents a page within an app. An app may have multiple View objects representing things like menus and other app states. Each View contains a Layout, which in turn contain Drawable objects, such as Bitmaps and Text . View objects also handle the life cycle of each app, which varies depending on the app type: Widgets and Watch Apps onLayout() → onShow() → onUpdate() → onHide() Watch Faces onLayout() → onShow() → onUpdate() Data Fields onLayout() → onShow() → onUpdate() If the size of the data field has changed since the last onUpdate(), onLayout() will be called prior to onUpdate(). However, onLayout(), onShow(), and onUpdate() are not called for SimpleDataField objects. See Also:
 Toybox.WatchUi.Drawable 
 
 Example: A basic widget View class definition using Toybox.WatchUi; class MyWidgetView extends WatchUi.View { function initialize() { View.initialize(); } // Resources are loaded here function onLayout(dc) { setLayout(Rez.Layouts.MainLayout(dc)); } // onShow() is called when this View is brought to the foreground function onShow() { } // onUpdate() is called periodically to update the View function onUpdate(dc) { View.onUpdate(dc); } // onHide() is called when this View is removed from the screen function onHide() { } } Since: API Level 1.0.0 Direct Known Subclasses
 WatchUi.DataField , WatchUi.DataFieldAlert , WatchUi.GlanceView , WatchUi.MapView , WatchUi.Menu2 , WatchUi.Picker , WatchUi.WatchFace Typedef Summary collapse 
 ControlBarOptions as { :leftButton as WatchUi.ControlBarLeftButton , :title as Lang.String , :rightButton as WatchUi.ControlBarRightButton } 
 
 Instance Method Summary collapse 
 addLayer (layer as WatchUi.Layer ) as Void Add a WatchUi.Layer on the top of view's layer stack. 
 clearLayers () as Void Clear all layers that are added to the view. 
 findDrawableById (identifier as Lang.Object ) as WatchUi.Drawable or Null Find a Drawable by its ID. 
 getLayerIndex (layer as WatchUi.Layer ) as Lang.Number Return the index of the layer from the bottom of the view layer stack. 
 getLayers () as Lang.Array &lt; WatchUi.Layer &gt; or Null Get a copy of the layer stack currently added to the view, sorted by the drawing order, i.e. 
 initialize () Constructor. 
 insertLayer (layer as WatchUi.Layer , idx as Lang.Number ) as Void Insert the layer at the given index in the layer stack, this will stop animation playback. 
 onHide () as Void Hide the View. 
 onLayout (dc as Graphics.Dc ) as Void The entry point for the View. 
 onShow () as Void Show the View. 
 onUpdate (dc as Graphics.Dc ) as Void Update the View. 
 removeLayer (layer as WatchUi.Layer ) as Lang.Boolean Remove a layer from the view layer stack, this will stop animation playback. 
 setClockHandPosition (options as { :clockState as WatchUi.AnalogClockState , :hour as Lang.Number or Null , :minute as Lang.Number or Null }) as Lang.Boolean Set the clock hands position. 
 setControlBar (options as View.ControlBarOptions ) as Void Set control bar options for this view. 
 setKeyToSelectableInteraction (enable as Lang.Boolean ) as Void Enter Selectable interaction mode. 
 setLayout (layout as Lang.Array &lt; WatchUi.Drawable &gt; or Null ) as Void Set the layout for the View. 
 
 Typedef Details
 ControlBarOptions as { :leftButton as WatchUi.ControlBarLeftButton , :title as Lang.String , :rightButton as WatchUi.ControlBarRightButton } 
 Since: API Level 1.0.0 Instance Method Details
 addLayer(layer as WatchUi.Layer ) as Void 
 Add a WatchUi.Layer on the top of view's layer stack. Users do not need to draw the layer on the screen manually, instead, once a layer is added to the view, the system will draw all layers during screen updates which include View update (e.g. onUpdate/onPartialUpdate) and animation playback. Disabled for DataFiled and Background Apps Parameters: layer — ( WatchUi.Layer ) — a WatchUi.Layer object to add 
 
 Since: API Level 3.1.0 Throws: ( Lang.UnexpectedTypeException ) — Thrown if the layer is not a WatchUi.Layer 
 
 clearLayers() as Void 
 Clear all layers that are added to the view Since: API Level 3.1.0 findDrawableById(identifier as Lang.Object ) as WatchUi.Drawable or Null 
 Find a Drawable by its ID. A common use for this method is to get layout information to format dynamic content, such as a string that updates at runtime. Parameters: identifier — ( Lang.Object ) — The identifier of the Drawable to find 
 
 Example: Formatting the clock time as centered, blue text // The layout.xml file contents: // &lt;layout id="WatchFace"&gt; // &lt;label id="TimeLabel" x="center" y="center" font="Graphics.FONT_LARGE" justification="Graphics.TEXT_JUSTIFY_CENTER" color="Graphics.COLOR_BLUE" /&gt; // &lt;/layout&gt; using Toybox.Graphics; using Toybox.Lang; using Toybox.System; using Toybox.WatchUi.View; var clockTime = System.getClockTime(); var timeString = Lang.format( "$1$:$2$", [clockTime.hour, clockTime.min.format("%02d")] ); var view = View.findDrawableById("TimeLabel"); view.setText(timeString); Returns: WatchUi.Drawable — A Drawable if found, otherwise null 
 
 See Also: System.getClockTime() 
 
 Since: API Level 1.0.0 getLayerIndex(layer as WatchUi.Layer ) as Lang.Number 
 Return the index of the layer from the bottom of the view layer stack Parameters: layer — a WatchUi.Layer a layer object 
 
 Returns: Lang.Number — index of the layer from the bottom of the layer stack 
 
 Since: API Level 3.1.0 getLayers() as Lang.Array &lt; WatchUi.Layer &gt; or Null 
 Get a copy of the layer stack currently added to the view, sorted by the drawing order, i.e. from the bottom to the top. Returns: Lang.Array — an array of WatchUi.Layer or null 
 
 Since: API Level 3.1.0 initialize() 
 Constructor Since: API Level 2.1.0 insertLayer(layer as WatchUi.Layer , idx as Lang.Number ) as Void 
 Insert the layer at the given index in the layer stack, this will stop animation playback. Parameters: layer — ( WatchUi.Layer ) — a layer to insert. 
 idx — ( Lang.Number ) — position in the layer stack to insert layer. 
 
 Since: API Level 3.1.0 onHide() as Void 
 Hide the View. This is called before the View is removed from the foreground. This occurs when a new View object is pushed on top of the current one, when the current View is popped, or when the app is closed. Resources should be freed from memory at this point if the current View will be left on the page stack. Since: API Level 1.0.0 onLayout(dc as Graphics.Dc ) as Void 
 The entry point for the View. onLayout() is called before the View is shown to load resources and set up the layout of the View. Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Since: API Level 1.0.0 onShow() as Void 
 Show the View. This is called when the View is brought into the foreground. Resources should be loaded into system memory for use in the View at this point. Since: API Level 1.0.0 onUpdate(dc as Graphics.Dc ) as Void 
 Update the View. This is called when a View is brought to the foreground, after the call to onShow() . While a View is active, this method is generally used to update dynamic content in the View. There are also some special cases when it will be invoked: On WatchUi.requestUpdate() calls within Widgets and Watch Apps 
 Once per minute in Watch Faces when in low power mode 
 Once per second in Watch Faces when in high power mode 
 Once per second in Data Fields 
 At an increased rate while an animation is active 
 More than one call to onUpdate() may occur during View transitions 
 
 If a class that extends View does not implement this function then any Drawable objects contained in the View will automatically be drawn. Parameters: dc — ( Graphics.Dc ) — The device context 
 
 See Also: WatchFace.onPartialUpdate() 
 
 Since: API Level 1.0.0 removeLayer(layer as WatchUi.Layer ) as Lang.Boolean 
 Remove a layer from the view layer stack, this will stop animation playback. Parameters: layer — a WatchUi.Layer to remove from the layer stack. 
 
 Returns: Lang.Boolean — true , if layer is removed successfully, otherwise false 
 
 Since: API Level 3.1.0 setClockHandPosition(options as { :clockState as WatchUi.AnalogClockState , :hour as Lang.Number or Null , :minute as Lang.Number or Null }) as Lang.Boolean 
 Set the clock hands position. Parameters: options — ( Lang.Dictionary ) — Options for setting the analog clock state. :clockState — ( WatchUi.AnalogClockState ) — An ANALOG_CLOCK_STATE_* value for the clock state 
 :hour — ( Lang.Number ) — Position for the hour hand in degrees clockwise from the 12 o'clock position 
 :minute — ( Lang.Number ) — Position for the minute hand in degrees clockwise from the 12 o'clock position 
 
 
 
 Supported Devices: [ View devices ] Instinct® Crossover
 
 Returns: Lang.Boolean — true if the request to change the analog hands was successful, false otherwise. 
 
 Since: API Level 3.3.0 Throws: ( Lang.InvalidValueException ) — Thrown if invalid or no value is passed in for :clockState. 
 ( Lang.InvalidValueException ) — Thrown if no :hour and :minute values are specified for the :clockState value of ANALOG_CLOCK_STATE_HOLDING. 
 
 setControlBar(options as View.ControlBarOptions ) as Void 
 Set control bar options for this view. Use of this method has many restrictions. With View , the control bar can be hidden by passing null . If options is non-null, the :leftButton option must be provided. All values for CONTROL_BAR_RIGHT_BUTTON_* and CONTROL_BAR_RIGHT_BUTTON_* are allowed. With Menu2 and CustomMenu , the options parameter cannot be null ; the control bar is always shown. The :leftButton option must be set to CONTROL_BAR_LEFT_BUTTON_BACK . The :rightButton option may be null , for no button, or CONTROL_BAR_RIGHT_BUTTON_ACCEPT . Attempting to call this method on any other class derived from View, or with an unsupported option for the given view type, will result in an exception. Note: Control bar visibility changes made from onLayout or onUpdate will result in an exception. Parameters: options — ( Lang.Dictionary ) — Optional parameters for control bar. If null, the control bar will be hidden. :leftButton — ( WatchUi.ControlBarLeftButton ) — The icon to use for the left button. Must be a CONTROL_BAR_LEFT_BUTTON_* value. 
 :rightButton — ( WatchUi.ControlBarRightButton ) — The icon to use for the right button. Must be a CONTROL_BAR_RIGHT_BUTTON_* value. If the value is null or not provided, no button will be shown. 
 :title — ( Lang.String ) — The title to display in the control bar. If the view is of type Menu2, the Menu2 title will be given priority and will be displayed in the control bar. If no title is specified, the application name will be used. 
 
 
 
 Supported Devices: [ View devices ] Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 
 Since: API Level 4.1.2 Throws: ( Lang.OperationNotAllowedException ) — Thrown if called on a view type that does not support control bar changes, or if called from onLayout or onUpdate . 
 ( Lang.InvalidValueException ) — Thrown if one or more of the specified options is not valid for the view type. 
 
 setKeyToSelectableInteraction(enable as Lang.Boolean ) as Void 
 Enter Selectable interaction mode. When enabled, physical buttons may be used to cycle through on-screen Selectable objects. The first registered Selectable in the current layout will be highlighted initially. Parameters: enable — ( Lang.Boolean ) — Set to true if the mode should be enabled, otherwise false 
 
 Example: Toggle the Selectable interaction mode with the Menu button var selectableMode = false; function onMenu() { selectableMode = !selectableMode; // currentView is a View containing Selectable objects currentView.setKeyToSelectableInteraction(selectableMode); return true; } Since: API Level 2.1.0 Throws: ( Lang.SymbolNotAllowedException ) — Thrown if called from a data field app 
 
 setLayout(layout as Lang.Array &lt; WatchUi.Drawable &gt; or Null ) as Void 
 Set the layout for the View. Set the array of Drawable objects to be managed by this View. The specified Drawables will be: Drawn automatically via calls to onUpdate() 
 Searched via calls to findDrawableById() 
 
 Parameters: layout — ( Lang.Array ) — An array of Drawables or null . 
 
 Since: API Level 1.0.0 Generated Dec 11, 2024, 8:58:44 AM


# [ViewLoop (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ViewLoop.html)nClass: Toybox.WatchUi.ViewLoop
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ViewLoop 
 
 show all Overview
 An object representing the view loop with a collection of scrollable views. Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Constant Summary
 Direction
 Specifies the direction to transition views Since: API Level 3.4.0 Name Value Since Description See Also 
 DIRECTION_NEXT 0 API Level 3.4.0 Loop in the forward direction 
 DIRECTION_PREVIOUS 1 API Level 3.4.0 Loop in the backward direction 
 Instance Method Summary collapse 
 changeView (direction as ViewLoop.Direction ) as Lang.Boolean Change the view to the next/previous one in the view loop based on the direction and display the page indicator after transitioning. 
 initialize (factory as WatchUi.ViewLoopFactory , options as { :page as Lang.Number , :wrap as Lang.Boolean , :color as Graphics.ColorType } or Null ) Constructor for the ViewLoop. 
 
 Instance Method Details
 changeView(direction as ViewLoop.Direction ) as Lang.Boolean 
 Change the view to the next/previous one in the view loop based on the direction and display the page indicator after transitioning. Parameters: direction — ( ViewLoop.Direction ) — The direction in which to change page to 
 
 Returns: Lang.Boolean — true if view is changed, otherwise false, e.g. reached the start/end of of non-wrapping loop. 
 
 Since: API Level 3.4.0 Throws: ( Lang.OperationNotAllowedException ) — Thrown when the view loop is not an active page for the app. 
 
 initialize(factory as WatchUi.ViewLoopFactory , options as { :page as Lang.Number , :wrap as Lang.Boolean , :color as Graphics.ColorType } or Null ) 
 Constructor for the ViewLoop Parameters: factory — ( WatchUi.ViewLoopFactory ) — A factory object for the view loop to retrieve view and delegates managed with in this view loop 
 options — ( Lang.Dictionary ) — Options for this view loop object :page — ( Lang.Number ) — initial page index for the view loop. The default value is 0. 
 :wrap — ( Lang.Boolean ) — if wrapping through the pages is allowed The default value is true. 
 :color — ( Graphics.ColorType ) — accent color for the page indicator. The :color option may be ignored if the device does not support accent colors. 
 
 
 
 Since: API Level 3.4.0 Throws: ( Lang.ValueOutOfBoundsException ) — Thrown if ViewLoopFactory returns a size less than or equal to 0. 
 ( Lang.ValueOutOfBoundsException ) — Thrown if Number :page option value is negative or greater than the value returned by the ViewLoopFactory 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [ViewLoopDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ViewLoopDelegate.html)nClass: Toybox.WatchUi.ViewLoopDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ViewLoopDelegate 
 
 show all Overview
 A delegate object for the view loop. The next and previous events generated by the system are passed to the delegate object when ViewLoop is active for the app. Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Instance Method Summary collapse 
 initialize (viewLoop as WatchUi.ViewLoop ) Constructor for the delegate. 
 onNextView () as Lang.Boolean Represents the next page behavior. 
 onPreviousView () as Lang.Boolean Represents the previous page behavior. 
 
 Instance Method Details
 initialize(viewLoop as WatchUi.ViewLoop ) 
 Constructor for the delegate Parameters: viewLoop — ( WatchUi.ViewLoop ) — Object that manages the collection of views 
 
 Since: API Level 3.4.0 onNextView() as Lang.Boolean 
 Represents the next page behavior. This is typically triggered by the down button ( KEY_DOWN ) or by a SWIPE_UP SwipeEvent on a touch screen. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 3.4.0 onPreviousView() as Lang.Boolean 
 Represents the previous page behavior. This is typically triggered by the up button ( KEY_UP ) or by a SWIPE_DOWN SwipeEvent on a touch screen. Returns: Lang.Boolean — true if handled, otherwise false 
 
 Since: API Level 3.4.0 Generated Dec 11, 2024, 8:58:44 AM


# [ViewLoopFactory (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/ViewLoopFactory.html)nClass: Toybox.WatchUi.ViewLoopFactory
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.ViewLoopFactory 
 
 show all Overview
 A factory object for view/delegate instances, used by ViewLoop Since: API Level 3.4.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 540 / 540 Solar
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 945 LTE
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Instance Method Summary collapse 
 getSize () as Lang.Number Return the number of view/delegate pairs that are managed by this factory. 
 getView (page as Lang.Number ) as [ WatchUi.View ] or [ WatchUi.View , WatchUi.BehaviorDelegate ] This function will be called by the system to retrieve a view/delegate pair for the page at the given index. 
 
 Instance Method Details
 getSize() as Lang.Number 
 Return the number of view/delegate pairs that are managed by this factory Returns: Lang.Number — total number of views for this factory 
 
 Since: API Level 3.4.0 getView(page as Lang.Number ) as [ WatchUi.View ] or [ WatchUi.View , WatchUi.BehaviorDelegate ] 
 This function will be called by the system to retrieve a view/delegate pair for the page at the given index Note: This method must be overridden in derived classes. If called, this function will cause the application to crash. Parameters: page — ( Lang.Number ) — Index for the view/delegate pair 
 
 Returns: Lang.Array — An Array containing a WatchUi.View and an optional WatchUi.BehaviorDelegate 
 
 Since: API Level 3.4.0 Generated Dec 11, 2024, 8:58:44 AM


# [WatchFace (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/WatchFace.html)nClass: Toybox.WatchUi.WatchFace
 Inherits: Toybox.WatchUi.View Toybox.Lang.Object 
 Toybox.WatchUi.View 
 Toybox.WatchUi.WatchFace 
 
 show all Overview
 Create a Watch Face that supports exiting/entering low power mode. A WatchFace is a special View that provides notifications when the device changes power states. A WatchFace will run in a high power mode for a short period when responding to a gesture (i.e., raising the watch to check the time) or when returning to the watch face from another application. While in high power mode, the watch face will perform full screen updates every second via calls to onUpdate() , and the application will have access to timers and animations. After this period in high power mode (typically about ten seconds), the system will call onEnterSleep() to notify the application that it is preparing to enter low power mode. During low power mode the system will call onUpdate() at the top of every minute. If partial update support is available, the onPartialUpdate() method will be called for the first 59 seconds of every minute. The application will not have access to timers or animations while in low power mode. When a gesture occurs while running in low power mode the system will call onExitSleep() to notify the application that the transition to high power mode has occurred. The initial view of a watch face application must extend WatchFace . Since: API Level 1.0.0 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Bravo Titanium
 D2™ Bravo
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 epix™
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 230
 Forerunner® 235
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 45
 Forerunner® 55
 Forerunner® 630
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 735xt
 Forerunner® 745
 Forerunner® 920XT
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 3 / tactix® Bravo / quatix® 3
 fēnix® 3 HR
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® Chronos
 fēnix® E
 Garmin Swim™ 2
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 vívoactive® HR
 vívoactive®
 
 Instance Method Summary collapse 
 initialize () Constructor. 
 onEnterSleep () as Void The device is entering low power mode. 
 onExitSleep () as Void The device is exiting low power mode. 
 onPartialUpdate (dc as Graphics.Dc ) as Void Update a portion of the screen. 
 
 Instance Method Details
 initialize() 
 Constructor Since: API Level 1.0.0 onEnterSleep() as Void 
 The device is entering low power mode. Terminate any active timers and prepare for once-per-minute updates. See Also: Toybox.WatchUi.WatchFace 
 
 Since: API Level 1.0.0 onExitSleep() as Void 
 The device is exiting low power mode. Timers and animations may be started here in preparation for once-per-second updates. See Also: Toybox.WatchUi.WatchFace 
 
 Since: API Level 1.0.0 onPartialUpdate(dc as Graphics.Dc ) as Void 
 Update a portion of the screen. Partial updates can be used to update a small part of the screen to allow for Always On Watch Faces. This method is called each second as long as the device power budget is not exceeded. It is important to update as small of a portion of the display as possible in this method to avoid exceeding the allowed power budget. To do this, the application must set the clipping region for the Graphics.Dc object using the setClip() method. Calls to System.println() and System.print() will not execute on devices when this function is being invoked, but can be used in the device simulator. If the call to this method exceeds the power budget of the device, the partial update will not draw and a call to onPowerBudgetExceeded() is made to report the limits that were exceeded. Note: See the Analog sample distributed with the SDK for an example of onPartialUpdate() using clipping regions Parameters: dc — ( Graphics.Dc ) — The device context 
 
 Supported Devices: [ View devices ] Approach® S60
 Approach® S62
 Captain Marvel
 D2™ Charlie
 D2™ Delta PX
 D2™ Delta S
 D2™ Delta
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk1
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Enduro™ 3
 Enduro™
 First Avenger
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 55
 Forerunner® 645 Music
 Forerunner® 645
 Forerunner® 745
 Forerunner® 935
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 fēnix® 5 / quatix® 5
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5S
 fēnix® 5X / tactix® Charlie
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 vívoactive® 3 Mercedes-Benz® Collection
 vívoactive® 3 Music LTE
 vívoactive® 3 Music
 vívoactive® 3
 vívoactive® 4
 vívoactive® 4S
 
 See Also: Toybox.WatchUi.WatchFaceDelegate 
 WatchFaceDelegate.onPowerBudgetExceeded() 
 View.onUpdate() 
 
 Since: API Level 2.3.0 Generated Dec 11, 2024, 8:58:44 AM


# [WatchFaceDelegate (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/WatchFaceDelegate.html)nClass: Toybox.WatchUi.WatchFaceDelegate
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.WatchFaceDelegate 
 
 show all Overview
 Receive events on a Watch Face. See Also:
 Toybox.WatchUi.WatchFace 
 
 Since: API Level 2.3.0 Instance Method Summary collapse 
 onPowerBudgetExceeded (powerInfo as WatchUi.WatchFacePowerInfo ) as Void Handle a partial update exceeding the power budget. 
 onPress (clickEvent as WatchUi.ClickEvent ) as Lang.Boolean Called when user does a touch and hold. 
 
 Instance Method Details
 onPowerBudgetExceeded(powerInfo as WatchUi.WatchFacePowerInfo ) as Void 
 Handle a partial update exceeding the power budget. If the onPartialUpdate() callback of the associated WatchFace exceeds the power budget of the device, this method will be called with information about the limits that were exceeded. Parameters: powerInfo — ( WatchUi.WatchFacePowerInfo ) 
 
 See Also: Toybox.WatchUi.WatchFace 
 onPartialUpdate() 
 
 Since: API Level 2.3.0 onPress(clickEvent as WatchUi.ClickEvent ) as Lang.Boolean 
 Called when user does a touch and hold Parameters: clickEvent — ( WatchUi.ClickEvent ) — Click event 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 D2™ Air X10
 D2™ Mach 1
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Enduro™ 3
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 vívoactive® 5
 
 Returns: true if the click event is handled, otherwise false. 
 
 Since: API Level 4.2.0 Generated Dec 11, 2024, 8:58:44 AM


# [WatchFacePowerInfo (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/WatchUi/WatchFacePowerInfo.html)nClass: Toybox.WatchUi.WatchFacePowerInfo
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.WatchUi.WatchFacePowerInfo 
 
 show all Overview
 Power information provided when the power budget is exceeded during a call to onPartialUpdate() . This is automatically passed to the onPowerBudgetExceeded() method when it is invoked. See Also:
 Toybox.WatchUi.WatchFaceDelegate 
 
 Since: API Level 2.3.0 Instance Member Summary collapse 
 executionTimeAverage as Lang.Float The average partial update execution time onPartialUpdate() took to complete. 
 executionTimeLimit as Lang.Float The maximum allowable partial update execution time onPartialUpdate() is allowed to take. 
 
 Instance Attribute Details
 var executionTimeAverage as Lang.Float 
 The average partial update execution time onPartialUpdate() took to complete. Since: API Level 2.3.0 Returns: Lang.Float — Average elapsed time per update in milliseconds (ms) 
 
 var executionTimeLimit as Lang.Float 
 The maximum allowable partial update execution time onPartialUpdate() is allowed to take. Since: API Level 2.3.0 Returns: Lang.Float — Maximum allowed time in milliseconds (ms) 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [Weather (Module)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Weather.html)nModule: Toybox.Weather
 Overview
 The Weather module provides functionality for accessing information related to the current weather. Since: API Level 3.2.0 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Air
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 / Bontrager
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 GPSMAP® 67 / 67i
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Montana® 7 Series
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Mercedes-Benz® Collection
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 3 Music
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Classes Under Namespace
 Classes: CurrentConditions , DailyForecast , HourlyForecast Constant Summary
 Condition
 Since: API Level 3.2.0 Name Value Since Description See Also 
 CONDITION_CLEAR 0 API Level 3.2.0 Clear 
 CONDITION_PARTLY_CLOUDY 1 API Level 3.2.0 Partly cloudy 
 CONDITION_MOSTLY_CLOUDY 2 API Level 3.2.0 Mostly cloudy 
 CONDITION_RAIN 3 API Level 3.2.0 Rain 
 CONDITION_SNOW 4 API Level 3.2.0 Snow 
 CONDITION_WINDY 5 API Level 3.2.0 Windy 
 CONDITION_THUNDERSTORMS 6 API Level 3.2.0 Thunderstorms 
 CONDITION_WINTRY_MIX 7 API Level 3.2.0 Wintry mix 
 CONDITION_FOG 8 API Level 3.2.0 Fog 
 CONDITION_HAZY 9 API Level 3.2.0 Hazy 
 CONDITION_HAIL 10 API Level 3.2.0 Hail 
 CONDITION_SCATTERED_SHOWERS 11 API Level 3.2.0 Scattered showers 
 CONDITION_SCATTERED_THUNDERSTORMS 12 API Level 3.2.0 Scattered thunderstorms 
 CONDITION_UNKNOWN_PRECIPITATION 13 API Level 3.2.0 Unknown precipitation 
 CONDITION_LIGHT_RAIN 14 API Level 3.2.0 Light rain 
 CONDITION_HEAVY_RAIN 15 API Level 3.2.0 Heavy rain 
 CONDITION_LIGHT_SNOW 16 API Level 3.2.0 Light snow 
 CONDITION_HEAVY_SNOW 17 API Level 3.2.0 Heavy snow 
 CONDITION_LIGHT_RAIN_SNOW 18 API Level 3.2.0 Light rain snow 
 CONDITION_HEAVY_RAIN_SNOW 19 API Level 3.2.0 Heavy rain snow 
 CONDITION_CLOUDY 20 API Level 3.2.0 Cloudy 
 CONDITION_RAIN_SNOW 21 API Level 3.2.0 Rain snow 
 CONDITION_PARTLY_CLEAR 22 API Level 3.2.0 Partly clear 
 CONDITION_MOSTLY_CLEAR 23 API Level 3.2.0 Mostly clear 
 CONDITION_LIGHT_SHOWERS 24 API Level 3.2.0 Light showers 
 CONDITION_SHOWERS 25 API Level 3.2.0 Showers 
 CONDITION_HEAVY_SHOWERS 26 API Level 3.2.0 Heavy showers 
 CONDITION_CHANCE_OF_SHOWERS 27 API Level 3.2.0 Chance of showers 
 CONDITION_CHANCE_OF_THUNDERSTORMS 28 API Level 3.2.0 Chance of thunderstorms 
 CONDITION_MIST 29 API Level 3.2.0 Mist 
 CONDITION_DUST 30 API Level 3.2.0 Dust 
 CONDITION_DRIZZLE 31 API Level 3.2.0 Drizzle 
 CONDITION_TORNADO 32 API Level 3.2.0 Tornado 
 CONDITION_SMOKE 33 API Level 3.2.0 Smoke 
 CONDITION_ICE 34 API Level 3.2.0 Ice 
 CONDITION_SAND 35 API Level 3.2.0 Sand 
 CONDITION_SQUALL 36 API Level 3.2.0 Squall 
 CONDITION_SANDSTORM 37 API Level 3.2.0 Sandstorm 
 CONDITION_VOLCANIC_ASH 38 API Level 3.2.0 Volcanic ash 
 CONDITION_HAZE 39 API Level 3.2.0 Haze 
 CONDITION_FAIR 40 API Level 3.2.0 Fair 
 CONDITION_HURRICANE 41 API Level 3.2.0 Hurricane 
 CONDITION_TROPICAL_STORM 42 API Level 3.2.0 Tropical storm 
 CONDITION_CHANCE_OF_SNOW 43 API Level 3.2.0 Chance of snow 
 CONDITION_CHANCE_OF_RAIN_SNOW 44 API Level 3.2.0 Chance of rain snow 
 CONDITION_CLOUDY_CHANCE_OF_RAIN 45 API Level 3.2.0 Cloudy chance of rain 
 CONDITION_CLOUDY_CHANCE_OF_SNOW 46 API Level 3.2.0 Cloudy chance of snow 
 CONDITION_CLOUDY_CHANCE_OF_RAIN_SNOW 47 API Level 3.2.0 Cloudy chance of rain snow 
 CONDITION_FLURRIES 48 API Level 3.2.0 Flurries 
 CONDITION_FREEZING_RAIN 49 API Level 3.2.0 Freezing rain 
 CONDITION_SLEET 50 API Level 3.2.0 Sleet 
 CONDITION_ICE_SNOW 51 API Level 3.2.0 Ice snow 
 CONDITION_THIN_CLOUDS 52 API Level 3.2.0 Thin clouds 
 CONDITION_UNKNOWN 53 API Level 3.2.0 Unknown 
 Instance Method Summary collapse 
 getCurrentConditions () as Weather.CurrentConditions or Null Get the most recently cached weather conditions. 
 getDailyForecast () as Lang.Array &lt; Weather.DailyForecast &gt; or Null Get the daily forecast. 
 getHourlyForecast () as Lang.Array &lt; Weather.HourlyForecast &gt; or Null Get the hourly forecast. 
 getSunrise (location as Position.Location , date as Time.Moment ) as Time.Moment or Null Get sunrise time for the provided location and date. 
 getSunset (location as Position.Location , date as Time.Moment ) as Time.Moment or Null Get sunrise time for the provided location and date. 
 
 Instance Method Details
 getCurrentConditions() as Weather.CurrentConditions or Null 
 Get the most recently cached weather conditions Returns: Weather.CurrentConditions — or null if no data is available 
 
 Since: API Level 3.2.0 getDailyForecast() as Lang.Array &lt; Weather.DailyForecast &gt; or Null 
 Get the daily forecast Returns: Weather.DailyForecast — An array of daily forecasts or null if no data is available 
 
 Since: API Level 3.2.0 getHourlyForecast() as Lang.Array &lt; Weather.HourlyForecast &gt; or Null 
 Get the hourly forecast Returns: Weather.HourlyForecast — An array of hourly forecasts or null if no data is available 
 
 Since: API Level 3.2.0 getSunrise(location as Position.Location , date as Time.Moment ) as Time.Moment or Null 
 Get sunrise time for the provided location and date Parameters: location — ( Position.Location ) — Location to get the sunrise information 
 date — ( Time.Moment ) — date to get the sunrise information 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Time.Moment — Sunrise time as moment or null if no sunrise time is available 
 
 Since: API Level 3.3.0 getSunset(location as Position.Location , date as Time.Moment ) as Time.Moment or Null 
 Get sunrise time for the provided location and date Parameters: location — ( Position.Location ) — Location to get the sunset information 
 date — ( Time.Moment ) — date to get the sunset information 
 
 Supported Devices: [ View devices ] Approach® S70 42mm
 Approach® S70 47mm
 Captain Marvel
 D2™ Air X10
 D2™ Mach 1
 Darth Vader™
 Descent™ G1 / G1 Solar
 Descent™ Mk2 / Descent™ Mk2i
 Descent™ Mk2 S
 Descent™ Mk3 43mm / Mk3i 43mm
 Descent™ Mk3i 51mm
 Edge® 1030 Plus
 Edge® 1030
 Edge® 1040 / 1040 Solar
 Edge® 1050
 Edge® 530
 Edge® 540 / 540 Solar
 Edge® 830
 Edge® 840 / 840 Solar
 Edge® Explore 2
 Enduro™ 3
 Enduro™
 epix™ (Gen 2) / quatix® 7 Sapphire
 epix™ Pro (Gen 2) 42mm
 epix™ Pro (Gen 2) 47mm / quatix® 7 Pro
 epix™ Pro (Gen 2) 51mm / D2™ Mach 1 Pro / tactix® 7 – AMOLED Edition
 First Avenger
 Forerunner® 165 Music
 Forerunner® 165
 Forerunner® 245 Music
 Forerunner® 245
 Forerunner® 255 Music
 Forerunner® 255
 Forerunner® 255s Music
 Forerunner® 255s
 Forerunner® 265
 Forerunner® 265s
 Forerunner® 55
 Forerunner® 745
 Forerunner® 945 LTE
 Forerunner® 945
 Forerunner® 955 / Solar
 Forerunner® 965
 fēnix® 5 Plus
 fēnix® 5S Plus
 fēnix® 5X Plus
 fēnix® 6 / 6 Solar / 6 Dual Power
 fēnix® 6 Pro / 6 Sapphire / 6 Pro Solar / 6 Pro Dual Power / quatix® 6
 fēnix® 6S / 6S Solar / 6S Dual Power
 fēnix® 6S Pro / 6S Sapphire / 6S Pro Solar / 6S Pro Dual Power
 fēnix® 6X Pro / 6X Sapphire / 6X Pro Solar / tactix® Delta Sapphire / Delta Solar / Delta Solar - Ballistics Edition / quatix® 6X / 6X Solar / 6X Dual Power
 fēnix® 7 / quatix® 7
 fēnix® 7 Pro - Solar Edition (no Wi-Fi)
 fēnix® 7 Pro
 fēnix® 7S Pro
 fēnix® 7S
 fēnix® 7X / tactix® 7 / quatix® 7X Solar / Enduro™ 2
 fēnix® 7X Pro - Solar Edition (no Wi-Fi)
 fēnix® 7X Pro
 fēnix® 8 43mm
 fēnix® 8 47mm / 51mm
 fēnix® 8 Solar 47mm
 fēnix® 8 Solar 51mm
 fēnix® E
 Instinct® 2 / Solar / Dual Power / dēzl Edition
 Instinct® 2S / Solar / Dual Power
 Instinct® 2X Solar
 Instinct® Crossover
 MARQ® (Gen 2) Athlete / Adventurer / Captain / Golfer / Carbon Edition / Commander - Carbon Edition
 MARQ® (Gen 2) Aviator
 MARQ® Adventurer
 MARQ® Athlete
 MARQ® Aviator
 MARQ® Captain / MARQ® Captain: American Magic Edition
 MARQ® Commander
 MARQ® Driver
 MARQ® Expedition
 MARQ® Golfer
 Rey™
 Venu® 2 Plus
 Venu® 2
 Venu® 2S
 Venu® 3
 Venu® 3S
 Venu® Sq 2 Music
 Venu® Sq 2
 Venu® Sq. Music Edition
 Venu® Sq
 Venu®
 vívoactive® 4
 vívoactive® 4S
 vívoactive® 5
 
 Returns: Time.Moment — Sunset time as moment or null if no sunset time is available. 
 
 Since: API Level 3.3.0 Generated Dec 11, 2024, 8:58:44 AM


# [CurrentConditions (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Weather/CurrentConditions.html)nClass: Toybox.Weather.CurrentConditions
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Weather.CurrentConditions 
 
 show all Overview
 Represents the most recently cached weather conditions. Since: API Level 3.2.0 Instance Member Summary collapse 
 condition as Lang.Number or Null The current weather condition. 
 feelsLikeTemperature as Lang.Float or Null The wind chill or heat index, in Celsius. 
 highTemperature as Lang.Numeric or Null The forecasted high temperature for the day in Celsius. 
 lowTemperature as Lang.Numeric or Null The forecasted low temperature for the day in Celsius. 
 observationLocationName as Lang.String or Null deprecated Textual description of the observation location. 
 observationLocationPosition as Position.Location or Null Location where the conditions were observed. 
 observationTime as Time.Moment or Null UTC time the conditions were observed. 
 precipitationChance as Lang.Number or Null The chance of precipitation [0-100%]. 
 relativeHumidity as Lang.Number or Null The relative humidity [0-100%]. 
 temperature as Lang.Numeric or Null The current temperature in Celsius. 
 windBearing as Lang.Number or Null The wind bearing in degrees. 
 windSpeed as Lang.Float or Null The current wind speed in meters per second. 
 
 Instance Attribute Details
 var condition as Lang.Number or Null 
 The current weather condition Since: API Level 3.2.0 Returns: Lang.Number — a Weather.CONDITION_* value 
 
 var feelsLikeTemperature as Lang.Float or Null 
 The wind chill or heat index, in Celsius Since: API Level 3.2.0 Returns: Lang.Float — or null 
 
 var highTemperature as Lang.Numeric or Null 
 The forecasted high temperature for the day in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var lowTemperature as Lang.Numeric or Null 
 The forecasted low temperature for the day in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var observationLocationName as Lang.String or Null 
 This has been deprecated This value may be removed after System 11. Textual description of the observation location. If the app does not have the position permission or the underlying weather provider does not provide a location name, this will be null . Since: API Level 3.2.0 Returns: Lang.String — or null . 
 
 var observationLocationPosition as Position.Location or Null 
 Location where the conditions were observed. If the app does not have the position permission then this will be null . Since: API Level 3.2.0 Returns: Position.Location — or null 
 
 var observationTime as Time.Moment or Null 
 UTC time the conditions were observed Since: API Level 3.2.0 Returns: Time.Moment 
 
 var precipitationChance as Lang.Number or Null 
 The chance of precipitation [0-100%] Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var relativeHumidity as Lang.Number or Null 
 The relative humidity [0-100%] Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var temperature as Lang.Numeric or Null 
 The current temperature in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var windBearing as Lang.Number or Null 
 The wind bearing in degrees. North = 0, East = 90, South = 180, West = 270 Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var windSpeed as Lang.Float or Null 
 The current wind speed in meters per second Since: API Level 3.2.0 Returns: Lang.Float — or null 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [DailyForecast (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Weather/DailyForecast.html)nClass: Toybox.Weather.DailyForecast
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Weather.DailyForecast 
 
 show all Overview
 Represents the forecast for a given day. Since: API Level 3.2.0 Instance Member Summary collapse 
 condition as Weather.Condition or Null The weather condition. 
 forecastTime as Time.Moment or Null The time the forecast is valid in UTC time. 
 highTemperature as Lang.Numeric or Null The high temperature in Celsius. 
 lowTemperature as Lang.Numeric or Null The low temperature in Celsius. 
 precipitationChance as Lang.Number or Null The chance of precipitation [0-100%]. 
 
 Instance Attribute Details
 var condition as Weather.Condition or Null 
 The weather condition Since: API Level 3.2.0 Returns: Weather.Condition — a Weather.CONDITION_* value 
 
 var forecastTime as Time.Moment or Null 
 The time the forecast is valid in UTC time Since: API Level 3.2.0 Returns: Time.Moment 
 
 var highTemperature as Lang.Numeric or Null 
 The high temperature in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var lowTemperature as Lang.Numeric or Null 
 The low temperature in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var precipitationChance as Lang.Number or Null 
 The chance of precipitation [0-100%] Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 Generated Dec 11, 2024, 8:58:44 AM


# [HourlyForecast (Class)](https://developer.garmin.com/connect-iq/api-docs/Toybox/Weather/HourlyForecast.html)nClass: Toybox.Weather.HourlyForecast
 Inherits: Toybox.Lang.Object Toybox.Lang.Object 
 Toybox.Weather.HourlyForecast 
 
 show all Overview
 Represents the forecast for a given hour Since: API Level 3.2.0 Instance Member Summary collapse 
 condition as Weather.Condition or Null The weather condition. 
 forecastTime as Time.Moment or Null The time the forecast is valid in UTC time. 
 precipitationChance as Lang.Number or Null The chance of precipitation [0-100%]. 
 relativeHumidity as Lang.Number or Null The relative humidity [0-100%]. 
 temperature as Lang.Numeric or Null The current temperature in Celsius. 
 windBearing as Lang.Number or Null The wind bearing in degrees. 
 windSpeed as Lang.Float or Null The current wind speed in meters per second. 
 
 Instance Attribute Details
 var condition as Weather.Condition or Null 
 The weather condition Since: API Level 3.2.0 Returns: Weather.Condition — a Weather.CONDITION_* value 
 
 var forecastTime as Time.Moment or Null 
 The time the forecast is valid in UTC time Since: API Level 3.2.0 Returns: Time.Moment 
 
 var precipitationChance as Lang.Number or Null 
 The chance of precipitation [0-100%] Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var relativeHumidity as Lang.Number or Null 
 The relative humidity [0-100%] Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var temperature as Lang.Numeric or Null 
 The current temperature in Celsius Since: API Level 3.2.0 Returns: Lang.Numeric — or null 
 
 var windBearing as Lang.Number or Null 
 The wind bearing in degrees. North = 0, East = 90, South = 180, West = 270 Since: API Level 3.2.0 Returns: Lang.Number — or null 
 
 var windSpeed as Lang.Float or Null 
 The current wind speed in meters per second Since: API Level 3.2.0 Returns: Lang.Float — or null 
 
 Generated Dec 11, 2024, 8:58:44 AM
